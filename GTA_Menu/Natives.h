#ifndef NATIVES_H
#define NATIVES_H
#include "Invoker.h"
#include "Utils.h"

namespace PLAYER
{
	int GET_PLAYER_PED(int player);
	int GET_PLAYER_PED_SCRIPT_INDEX(int player);
	void SET_PLAYER_MODEL(int player, int modelHash);
	void CHANGE_PLAYER_PED(int p0, int p1, int p2, int p3);
	void GET_PLAYER_RGB_COLOUR(int player, int* Red, int* Green, int* Blue);
	int GET_NUMBER_OF_PLAYERS();
	int GET_PLAYER_TEAM(int player);
	void SET_PLAYER_TEAM(int player, int Team);
	char* GET_PLAYER_NAME(int player);
	float GET_WANTED_LEVEL_RADIUS(int player);
	Vector3 GET_PLAYER_WANTED_CENTRE_POSITION(int player);
	void SET_PLAYER_WANTED_CENTRE_POSITION(int player, float x, float y, float z);
	int GET_WANTED_LEVEL_THRESHOLD(int wantedLevel);
	void SET_PLAYER_WANTED_LEVEL(int player, int wantedLevel, int p2);
	void SET_PLAYER_WANTED_LEVEL_NO_DROP(int player, int wantedLevel, int p2);
	void SET_PLAYER_WANTED_LEVEL_NOW(int player, int p1);
	int ARE_PLAYER_FLASHING_STARS_ABOUT_TO_DROP(int player);
	int ARE_PLAYER_STARS_GREYED_OUT(int player);
	void SET_DISPATCH_COPS_FOR_PLAYER(int player, int Enable);
	int IS_PLAYER_WANTED_LEVEL_GREATER(int player, int wantedLevel);
	void CLEAR_PLAYER_WANTED_LEVEL(int player);
	int IS_PLAYER_DEAD(int player);
	int IS_PLAYER_PRESSING_HORN(int player);
	void SET_PLAYER_CONTROL(int playerId, int Toggle, int possiblyFlags);
	int GET_PLAYER_WANTED_LEVEL(int player);
	void SET_MAX_WANTED_LEVEL(int maxWantedLevel);
	void SET_POLICE_RADAR_BLIPS(int Toggle);
	void SET_POLICE_IGNORE_PLAYER(int player, int Toggle);
	int IS_PLAYER_PLAYING(int player);
	void SET_EVERYONE_IGNORE_PLAYER(int player, int Toggle);
	void SET_ALL_RANDOM_PEDS_FLEE(int player, int p1);
	void SET_ALL_RANDOM_PEDS_FLEE_THIS_FRAME(int player);
	void _0x274631FE(int player, int Toggle);
	void _0x02DF7AF4(int p0);
	void SET_IGNORE_LOW_PRIORITY_SHOCKING_EVENTS(int playerIndex, int p1);
	void SET_WANTED_LEVEL_MULTIPLIER(float Multiplier);
	void SET_WANTED_LEVEL_DIFFICULTY(int player, float difficulty);
	void RESET_WANTED_LEVEL_DIFFICULTY(int player);
	void START_FIRING_AMNESTY(int p0);
	void REPORT_CRIME(int player, int p0, int p1);
	void _0x59B5C2A2(int p0, int p1);
	void _0x6B34A160(int p0);
	void _0xB9FB142F(int p0);
	void _0x85725848(int p0);
	void _0x3A7E5FB6(float* p0f);
	void _0xD15C4B1C(int p0);
	void _0xBF6993C7(int p0);
	void _0x47CAB814();
	int CAN_PLAYER_START_MISSION(int p0);
	int IS_PLAYER_READY_FOR_CUTSCENE(int p0);
	int IS_PLAYER_TARGETTING_ENTITY(int player, int entity);
	int GET_PLAYER_TARGET_ENTITY(int player, int*  entity);
	int IS_PLAYER_FREE_AIMING(int player);
	int IS_PLAYER_FREE_AIMING_AT_ENTITY(int player, int entity);
	int _GET_AIMED_ENTITY(int player, int*  entity);
	void _0x74D42C03(int p0, int p1);
	void SET_PLAYER_CAN_DO_DRIVE_BY(int p0, int p1);
	void SET_PLAYER_CAN_BE_HASSLED_BY_GANGS(int p0, int p1);
	void SET_PLAYER_CAN_USE_COVER(int p0, int p1);
	int GET_MAX_WANTED_LEVEL();
	int IS_PLAYER_TARGETTING_ANYTHING(int player);
	void SET_PLAYER_SPRINT(int p0, int p1);
	void RESET_PLAYER_STAMINA(int player);
	void RESTORE_PLAYER_STAMINA(int p0, int p1);
	int _0x47017C90(int p0);
	int GET_PLAYER_SPRINT_TIME_REMAINING(int p0);
	int GET_PLAYER_UNDERWATER_TIME_REMAINING(int p0);
	int GET_PLAYER_GROUP(int player);
	int GET_PLAYER_MAX_ARMOUR(int player);
	int IS_PLAYER_CONTROL_ON(int player);
	int IS_PLAYER_SCRIPT_CONTROL_ON(int p0);
	int IS_PLAYER_CLIMBING(int p0);
	int IS_PLAYER_BEING_ARRESTED(int p0, int p1);
	void _0x453C7CAB(int p0);
	int GET_PLAYERS_LAST_VEHICLE();
	int GET_PLAYER_INDEX();
	int INT_TO_PLAYERINDEX(int p0);
	int _0x98F3B274(int p0);
	int GET_TIME_SINCE_PLAYER_HIT_VEHICLE(int p0);
	int GET_TIME_SINCE_PLAYER_HIT_PED(int p0);
	int GET_TIME_SINCE_PLAYER_DROVE_ON_PAVEMENT(int p0);
	float GET_TIME_SINCE_PLAYER_DROVE_AGAINST_TRAFFIC(float time);
	int IS_PLAYER_FREE_FOR_AMBIENT_TASK(int p0);
	int PLAYER_ID();
	int PLAYER_PED_ID();
	int _0x8DD5B838();
	int _0x4B37333C(int p0);
	void FORCE_CLEANUP(int p0);
	void _0x04256C73(int p0, int p1);
	void _0x882D3EB3(int p0, int p1);
	int _0x39AA9FC8();
	void SET_PLAYER_MAY_ONLY_ENTER_THIS_VEHICLE(int p0, int p1);
	void _0xAF7AFCC4(int p0);
	int GIVE_ACHIEVEMENT_TO_PLAYER(int achievement);
	int HAS_ACHIEVEMENT_BEEN_PASSED(int achievement);
	int IS_PLAYER_ONLINE();
	int IS_PLAYER_LOGGING_IN_NP();
	void DISPLAY_SYSTEM_SIGNIN_UI(int p0);
	int IS_SYSTEM_UI_BEING_DISPLAYED();
	void SET_PLAYER_INVINCIBLE(int player, int toggle);
	int GET_PLAYER_INVINCIBLE(int p0);
	void _0x00563E0D(int p0, int p1);
	void REMOVE_PLAYER_HELMET(int player, int p2);
	void GIVE_PLAYER_RAGDOLL_CONTROL(int p0, int p1);
	void SET_PLAYER_LOCKON(int p0, int p1);
	void SET_PLAYER_TARGETING_MODE(int player);
	void CLEAR_PLAYER_HAS_DAMAGED_AT_LEAST_ONE_PED(int p0);
	int HAS_PLAYER_DAMAGED_AT_LEAST_ONE_PED(int p0);
	void _0x7E3BFBC5(int p0);
	int _0xA3707DFC(int p0);
	void SET_AIR_DRAG_MULTIPLIER_FOR_PLAYERS_VEHICLE(int p0, int p1);
	void _0xB986FF47(int p0, int p1);
	void _0x825423C2(int p0, int p1);
	int GET_TIME_SINCE_LAST_ARREST();
	int GET_TIME_SINCE_LAST_DEATH();
	void ASSISTED_MOVEMENT_CLOSE_ROUTE();
	void ASSISTED_MOVEMENT_FLUSH_ROUTE();
	void SET_PLAYER_FORCED_AIM(int p0, int p1);
	void SET_PLAYER_FORCED_ZOOM(int p0, int p1);
	void _0x374F42F0(int p0, int p1);
	void DISABLE_PLAYER_FIRING(int player, int Toggle);
	void _0xCCD937E7(int p0, int p1);
	void SET_PLAYER_MAX_ARMOUR(int player, int Toggle);
	void SPECIAL_ABILITY_DEACTIVATE(int p0);
	void _0x0751908A(int p0);
	void SPECIAL_ABILITY_RESET(int p0);
	void _0x4136829A(int p0);
	void _0x6F463F56(int p0, int p1, int p2);
	void _0xAB55D8F3(int p0, int p1, int p2);
	void _0xF440C04D(int p0, int p1, int p2);
	void _0x5FEE98A2(int p0, int p1);
	void _0x72429998(int p0, int p1, int p2);
	void RESET_SPECIAL_ABILITY_CONTROLS_CINEMATIC(int p0, int p1, int p2);
	void _0xB71589DA(int p0, int p1);
	void _0x9F80F6DF(int p0, int p1);
	void SPECIAL_ABILITY_LOCK(int p0);
	void SPECIAL_ABILITY_UNLOCK(int p0);
	int IS_SPECIAL_ABILITY_UNLOCKED(int p0);
	int IS_SPECIAL_ABILITY_ACTIVE(int p0);
	int IS_SPECIAL_ABILITY_METER_FULL(int p0);
	void ENABLE_SPECIAL_ABILITY(int p0, int p1);
	int IS_SPECIAL_ABILITY_ENABLED(int p0);
	void SET_SPECIAL_ABILITY_MULTIPLIER(int p0);
	void _0x5D0FE25B(int p0);
	int _0x46E7E31D(int p0);
	int _0x1E359CC8(int p0, int p1);
	int _0x8CB53C9F(int p0, int p1);
	void START_PLAYER_TELEPORT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void STOP_PLAYER_TELEPORT();
	int IS_PLAYER_TELEPORT_ACTIVE();
	float GET_PLAYER_CURRENT_STEALTH_NOISE(int* p0);
	void _0x45514731(int p0, int p1);
	void SET_PLAYER_WEAPON_DAMAGE_MODIFIER(int player, float DamageAmount);
	void _0xAE446344(int player, float multiplier);
	void _0x362E69AD(int p0, int p1);
	void _0x9F3D577F(int p0, int p1);
	void SET_PLAYER_VEHICLE_DAMAGE_MODIFIER(int player, float DamageAmount);
	void _0xA16626C7(int p0, int p1);
	void SET_PLAYER_PARACHUTE_TINT_INDEX(int p0, int p1);
	void GET_PLAYER_PARACHUTE_TINT_INDEX(int p0, int p1);
	void _0x70689638(int p0, int p1);
	void _0x77B8EF01(int p0, int p1);
	void SET_PLAYER_PARACHUTE_PACK_TINT_INDEX(int p0, int p1);
	void _0x4E418E13(int p0, int p1);
	void _0xA3E4798E(int p0);
	int _0x30DA1DA1(int p0);
	void _0x832DEB7A(int p0, int p1);
	void _0x14FE9264(int p0, int p1, int p2, int p3);
	void _0xF66E5CDD(int p0, int p1, int p2, int p3);
	void _0x725C6174(int p0, int p1);
	void _0xF8A62EFC(int p0, int p1);
	void SET_PLAYER_NOISE_MULTIPLIER(int player, float Multipliyer);
	void _0x8D2D89C4(int p0, int p1);
	int _0x1C70B2EB(int p0, int p1);
	void SIMULATE_PLAYER_INPUT_GAIT(int p0, int p1, int p2, int p3, int p4, int p5);
	void RESET_PLAYER_INPUT_GAIT(int p0);
	void _0xA97C2059(int p0, int p1);
	void _0xA25D767E(int p0, int p1);
	void _0x3D26105F(int p0, int p1);
	int _0x1D371529(int p0);
	void _0xE30A64DC(int p0);
	void SET_PLAYER_SIMULATE_AIMING(int p0, int p1);
	void _0xF7A0F00F(int p0, int p1);
	void _0xB8209F16(int p0);
	void _0x8D9FD4D1(int p0);
	void _0xECD12E60(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x96100EA4();
	int _0x4A01B76A(int p0);
	int _0x013B4F72(int p0);
	int _0x9DF75B2A(int p0, int p1, int p2);
	void _0x64DDB07D(int p0, int p1, int p2);
	void _0xA97C2F6C();
	int IS_PLAYER_RIDING_TRAIN(int player);
	int _0xFEA40B6C(int p0);
	void _0xAD8383FA(int p0, int p1);
	void _0x9254249D(int p0, int p1, int p2, int p3, int p4);
	void _0xFD60F5AB(int p0);
	void _0x5D382498(int p0, int p1);
	void _0x6FF034BB(int p0);
	void _0xA877FF5E(int p0, int p1);
	void _0xBB62AAC5(int p0);
	void _0x8C6E611D(int p0);
	void _0x2849D4B2(int p0);
}

namespace ENTITY
{
	int DOES_ENTITY_EXIST(int entity);
	int _0xACFEB3F9(int p0, int p1);
	int DOES_ENTITY_HAVE_DRAWABLE(int entity);
	int DOES_ENTITY_HAVE_PHYSICS(int entity);
	int HAS_ENTITY_ANIM_FINISHED(int p0, int p1, int p2, int p3);
	int HAS_ENTITY_BEEN_DAMAGED_BY_ANY_OBJECT(int entity);
	int HAS_ENTITY_BEEN_DAMAGED_BY_ANY_PED(int entity);
	int HAS_ENTITY_BEEN_DAMAGED_BY_ANY_VEHICLE(int entity);
	int HAS_ENTITY_BEEN_DAMAGED_BY_ENTITY(int p0, int p1, int p2);
	int HAS_ENTITY_CLEAR_LOS_TO_ENTITY(int p0, int p1, int p2);
	int HAS_ENTITY_CLEAR_LOS_TO_ENTITY_IN_FRONT(int p0, int p1);
	int HAS_ENTITY_COLLIDED_WITH_ANYTHING(int entity);
	int _0xC0E3AA47(int p0);
	Vector3 _0xAB415C07(int p0);
	void _0x58D9775F(int p0);
	int GET_ENTITY_ANIM_CURRENT_TIME(int p0, int p1, int p2);
	int GET_ENTITY_ANIM_TOTAL_TIME(int p0, int p1, int p2);
	int GET_ENTITY_ATTACHED_TO(int entity);
	Vector3 GET_ENTITY_COORDS(int entity);
	Vector3 GET_ENTITY_FORWARD_VECTOR(int entity);
	int GET_ENTITY_FORWARD_X(int entity);
	int GET_ENTITY_FORWARD_Y(int entity);
	float GET_ENTITY_HEADING(int entity);
	int GET_ENTITY_HEALTH(int entity);
	int GET_ENTITY_MAX_HEALTH(int entity);
	void SET_ENTITY_MAX_HEALTH(int entity, int Toggle);
	int GET_ENTITY_HEIGHT(int p0, int p1, int p2, int p3, int p4, int p5);
	int GET_ENTITY_HEIGHT_ABOVE_GROUND(int entity);
	void GET_ENTITY_MATRIX(int p0, int p1, int p2, int p3, int p4);
	int GET_ENTITY_MODEL(int entity);
	Vector3 GET_OFFSET_FROM_ENTITY_GIVEN_WORLD_COORDS(int p0, int p1, int p2, int p3);
	Vector3 GET_OFFSET_FROM_ENTITY_IN_WORLD_COORDS(int entity, int xCoord, int yCoord, int zCoord);
	int GET_ENTITY_PITCH(int entity);
	void GET_ENTITY_QUATERNION(int p0, int p1, int p2, int p3, int p4);
	int GET_ENTITY_ROLL(int entity);
	Vector3 GET_ENTITY_ROTATION(int p0, int p1);
	Vector3 GET_ENTITY_ROTATION_VELOCITY(int p0);
	int GET_ENTITY_SCRIPT(int p0, int p1);
	float GET_ENTITY_SPEED(int entity);
	Vector3 GET_ENTITY_SPEED_VECTOR(int p0, int p1);
	int GET_ENTITY_UPRIGHT_VALUE(int p0);
	Vector3 GET_ENTITY_VELOCITY(int entity);
	int _0xBC5A9C58(int p0);
	int _0xC46F74AC(int p0);
	int _0xC69CF43D(int p0);
	Vector3 _0x7C6339DF(int p0, int p1);
	int GET_NEAREST_PLAYER_TO_ENTITY(int entity);
	int _0xB1808F56(int p0, int p1);
	int GET_ENTITY_TYPE(int entity);
	int IS_AN_ENTITY(int entity);
	int IS_ENTITY_A_PED(int entity);
	int IS_ENTITY_A_MISSION_ENTITY(int entity);
	int IS_ENTITY_A_VEHICLE(int entity);
	int IS_ENTITY_AN_OBJECT(int p0);
	int IS_ENTITY_AT_COORD(int entity, float x, float y, float z, float xSize, float ySize, float zSize, int p7, int p8, int p9);
	int IS_ENTITY_AT_ENTITY(int entity1, int entity2, float xSize, float ySize, float zSize, int p5, int p6, int p7);
	int IS_ENTITY_ATTACHED(int p0);
	int IS_ENTITY_ATTACHED_TO_ANY_OBJECT(int p0);
	int IS_ENTITY_ATTACHED_TO_ANY_PED(int p0);
	int IS_ENTITY_ATTACHED_TO_ANY_VEHICLE(int p0);
	int IS_ENTITY_ATTACHED_TO_ENTITY(int p0, int p1);
	int IS_ENTITY_DEAD(int entity);
	int IS_ENTITY_IN_AIR(int entity);
	int IS_ENTITY_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	int IS_ENTITY_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int IS_ENTITY_IN_ZONE(int p0, int p1);
	int IS_ENTITY_IN_WATER(int entity);
	int _0x0170F68C(int p0);
	void _0x40C84A74(int p0, int p1);
	int IS_ENTITY_ON_SCREEN(int p0);
	int IS_ENTITY_PLAYING_ANIM(int p0, int p1, int p2, int p3);
	int IS_ENTITY_STATIC(int p0);
	int IS_ENTITY_TOUCHING_ENTITY(int p0, int p1);
	int _0x307E7611(int p0, int p1);
	int IS_ENTITY_UPRIGHT(int p0, int p1);
	int IS_ENTITY_UPSIDEDOWN(int p0);
	int IS_ENTITY_VISIBLE(int entity);
	int IS_ENTITY_VISIBLE_TO_SCRIPT(int p0);
	int IS_ENTITY_OCCLUDED(int p0);
	int _0xEA127CBC(int p0, int p1, int p2, int p3, int p4);
	int IS_ENTITY_WAITING_FOR_WORLD_COLLISION(int p0);
	void _0x28924E98(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void APPLY_FORCE_TO_ENTITY(int entity, int p1, float Force_X, float Force_Y, float Force_Z, float Rot_X, float Rot_Y, float Rot_Z, int p8, int p9, int p10, int p11, int p12, int p13);
	void ATTACH_ENTITY_TO_ENTITY(int entity1, int entity2, int boneIndex, float x, float y, float z, float rot_x, float rot_y, float rot_z, int p9, int p10, int p11, int p12, int p13, int p14);
	void ATTACH_ENTITY_TO_ENTITY_PHYSICALLY(int entity1, int entity2, float unknown1, float unknown2, float x1, float y1, float z1, float x2, float y2, float z2, float rot_x, float rot_y, float rot_z, int unknown3, int unknown4, int unknown5, int unknown6, int unknown7, int unknown8);
	void _0x6909BA59(int p0);
	int _0xE4ECAC22(int p0, int p1);
	void CLEAR_ENTITY_LAST_DAMAGE_ENTITY(int entity);
	void DELETE_ENTITY(int*  entityHandle);
	void DETACH_ENTITY(int p0, int p1, int p2);
	void FREEZE_ENTITY_POSITION(int entity, int Toggle);
	void _0xD3850671(int p0, int p1);
	int PLAY_ENTITY_ANIM(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int PLAY_SYNCHRONIZED_ENTITY_ANIM(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0xEB4CBA74(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int _0x7253D5B2(int p0, int p1, int p2, int p3, int p4, int p5);
	int STOP_ENTITY_ANIM(int p0, int p1, int p2, int p3);
	int STOP_SYNCHRONIZED_ENTITY_ANIM(int p0, int p1, int p2);
	int _0x66571CA0(int p0, int p1);
	int _0xC41DDA62(int p0, int p1, int p2, int p3, int p4);
	void SET_ENTITY_ANIM_CURRENT_TIME(int p0, int p1, int p2, int p3);
	void SET_ENTITY_ANIM_SPEED(int p0, int p1, int p2, int p3);
	void SET_ENTITY_AS_MISSION_ENTITY(int entityHandle, int value, int p2);
	void SET_ENTITY_AS_NO_LONGER_NEEDED(int*  entityHandle);
	void SET_PED_AS_NO_LONGER_NEEDED(int* pedHandle);
	void SET_VEHICLE_AS_NO_LONGER_NEEDED(int* vehicleHandle);
	void SET_OBJECT_AS_NO_LONGER_NEEDED(int* objectHandle);
	void SET_ENTITY_CAN_BE_DAMAGED(int entity, int Toggle);
	void SET_ENTITY_CAN_BE_DAMAGED_BY_RELATIONSHIP_GROUP(int p0, int p1, int p2);
	void SET_ENTITY_CAN_BE_TARGETED_WITHOUT_LOS(int p0, int p1);
	void SET_ENTITY_COLLISION(int entity, int p1, int p2);
	void SET_ENTITY_COORDS(int entity, Vector3 coord);
	void SET_ENTITY_COORDS_NO_OFFSET(int entity, float xCoord, float yCoord, float zCoord, int p4, int p5, int p6);
	void SET_ENTITY_DYNAMIC(int entity, int ToggleDynamics);
	void SET_ENTITY_HEADING(int entity, float Heading);
	void SET_ENTITY_HEALTH(int entity, int Amount);
	void SET_ENTITY_INVINCIBLE(int entity, int Toggle);
	void SET_ENTITY_IS_TARGET_PRIORITY(int p0, int p1, int p2);
	void SET_ENTITY_LIGHTS(int p0, int p1);
	void SET_ENTITY_LOAD_COLLISION_FLAG(int entity, int Toggle);
	int _0x851687F9(int p0);
	void SET_ENTITY_MAX_SPEED(int p0, int p1);
	void SET_ENTITY_ONLY_DAMAGED_BY_PLAYER(int p0, int p1);
	void SET_ENTITY_ONLY_DAMAGED_BY_RELATIONSHIP_GROUP(int p0, int p1, int p2);
	void SET_ENTITY_PROOFS(int entity, int bulletProof, int fireProof, int explosionProof, int collisionProof, int meleeProof, int p6, int p7, int p8);
	void SET_ENTITY_QUATERNION(int p0, int p1, int p2, int p3, int p4);
	void SET_ENTITY_RECORDS_COLLISIONS(int p0, int p1);
	void SET_ENTITY_ROTATION(int entity, float Pitch, float Roll, float Yaw, int p4, int p5);
	void SET_ENTITY_VISIBLE(int entity, int Toggle);
	void SET_ENTITY_VELOCITY(int entity, float xVel, float yVel, float zVel);
	void SET_ENTITY_HAS_GRAVITY(int p0, int p1);
	void SET_ENTITY_LOD_DIST(int entity, int Distance);
	int _0x4DA3D51F(int p0);
	void SET_ENTITY_ALPHA(int entity, int AlphaLVL, int p2);
	int GET_ENTITY_ALPHA(int entity);
	void RESET_ENTITY_ALPHA(int entity);
	void _0xD8FF798A(int p0, int p1);
	void SET_ENTITY_RENDER_SCORCHED(int p0, int p1);
	void _0xC47F5B91(int p0, int p1);
	void CREATE_MODEL_SWAP(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void REMOVE_MODEL_SWAP(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void CREATE_MODEL_HIDE(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x07AAF22C(int p0, int p1, int p2, int p3, int p4, int p5);
	void REMOVE_MODEL_HIDE(int p0, int p1, int p2, int p3, int p4, int p5);
	void CREATE_FORCED_OBJECT(int p0, int p1, int p2, int p3, int p4, int p5);
	void REMOVE_FORCED_OBJECT(int p0, int p1, int p2, int p3, int p4);
	void SET_ENTITY_NO_COLLISION_ENTITY(int ent1, int ent2, int toogle);
	void SET_ENTITY_MOTION_BLUR(int p0, int p1);
	void _0x44767B31(int p0, int p1);
	void _0xE224A6A5(int p0, int p1);
}

namespace PED
{
	int CREATE_PED(int type, int pedHash, float x, float y, float z, float heading, int networkHandle, int returnPEDHandle);
	void DELETE_PED(int* ped);
	int CLONE_PED(int  Priest, float Heading, int networkhandle, int createpedhandle);
	void _0xFC70EEC7(int  GamerHandle, int* pedHandle);
	int IS_PED_IN_VEHICLE(int  pedHandle, int vehicleHandle, int atGetIn);
	int IS_PED_IN_MODEL(int  ped, int vehicleModel);
	int IS_PED_IN_ANY_VEHICLE(int  pedHandle, int atGetIn);
	int IS_COP_PED_IN_AREA_3D(int p0, int p1, int p2, int p3, int p4, int p5);
	int IS_PED_INJURED(int  ped);
	int IS_PED_HURT(int p0);
	int IS_PED_FATALLY_INJURED(int  ped);
	int _IS_PED_DEAD(int  pedHandle, int p1);
	int IS_CONVERSATION_PED_DEAD(int p0);
	int IS_PED_AIMING_FROM_COVER(int* p0);
	int IS_PED_RELOADING(int  ped);
	int IS_PED_A_PLAYER(int  ped);
	int CREATE_PED_INSIDE_VEHICLE(int vehicle, int pedType, int modelHash, int seat, int p4, int p5);
	void SET_PED_DESIRED_HEADING(int p0, int p1);
	void _0x290421BE(int p0);
	int IS_PED_FACING_PED(int p0, int p1, int p2);
	int IS_PED_IN_MELEE_COMBAT(int  ped);
	int IS_PED_STOPPED(int  ped);
	int IS_PED_SHOOTING_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int IS_ANY_PED_SHOOTING_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int IS_PED_SHOOTING(int  ped);
	void SET_PED_ACCURACY(int  ped, int accuracy);
	int GET_PED_ACCURACY(int p0);
	int IS_PED_MODEL(int  pedHandle, int modelHash);
	void EXPLODE_PED_HEAD(int  ped, int WeaponHash);
	void REMOVE_PED_ELEGANTLY(int Handle);
	void ADD_ARMOUR_TO_PED(int Handle, int Amount);
	void SET_PED_ARMOUR(int p0, int p1);
	void SET_PED_INTO_VEHICLE(int Handle, int VehicleHandle, int SeatIndex);
	void _0x58A80BD5(int p0, int p1);
	int CAN_CREATE_RANDOM_PED(int p0);
	int CREATE_RANDOM_PED(float X, float Y, float Z);
	int CREATE_RANDOM_PED_AS_DRIVER(int vehicleHandle, int p1);
	int CAN_CREATE_RANDOM_DRIVER();
	int _0x7018BE31();
	void SET_PED_MOVE_ANIMS_BLEND_OUT(int p0);
	void SET_PED_CAN_BE_DRAGGED_OUT(int p0, int p1);
	void _0x6CD58238(int p0);
	int IS_PED_MALE(int p0);
	int IS_PED_HUMAN(int p0);
	int GET_VEHICLE_PED_IS_IN(int  pedHandle, int getLastVehicle);
	void RESET_PED_LAST_VEHICLE(int p0);
	void SET_PED_DENSITY_MULTIPLIER_THIS_FRAME(int p0);
	void SET_SCENARIO_PED_DENSITY_MULTIPLIER_THIS_FRAME(int p0, int p1);
	void _0xB48C0C04();
	void _0x25EA2AA5(int p0, int p1, int p2);
	void SET_PED_NON_CREATION_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	void CLEAR_PED_NON_CREATION_AREA();
	void _0x8C555ADD();
	int IS_PED_ON_MOUNT(int p0);
	int GET_MOUNT(int p0);
	int IS_PED_ON_VEHICLE(int p0);
	int IS_PED_ON_SPECIFIC_VEHICLE(int  ped, int specificVehicle);
	void SET_PED_MONEY(int  pedHandle, int amount);
	int GET_PED_MONEY(int  pedHandle);
	void _0xD41C9AED(int p0, int p1);
	void _0x30B98369(int p0);
	void _0x02A080C8(int p0);
	void SET_PED_SUFFERS_CRITICAL_HITS(int p0, int p1);
	void _0x1572022A(int p0, int p1);
	int IS_PED_SITTING_IN_VEHICLE(int p0, int p1);
	int IS_PED_SITTING_IN_ANY_VEHICLE(int p0);
	int IS_PED_ON_FOOT(int  p0);
	int IS_PED_ON_ANY_BIKE(int p0);
	int IS_PED_PLANTING_BOMB(int p0);
	Vector3 GET_DEAD_PED_PICKUP_COORDS(int p0, int p1, int p2);
	int IS_PED_IN_ANY_BOAT(int p0);
	int IS_PED_IN_ANY_SUB(int p0);
	int IS_PED_IN_ANY_HELI(int p0);
	int IS_PED_IN_ANY_PLANE(int p0);
	int IS_PED_IN_FLYING_VEHICLE(int p0);
	void SET_PED_DIES_IN_WATER(int p0, int p1);
	void SET_PED_DIES_IN_SINKING_VEHICLE(int p0, int p1);
	int GET_PED_ARMOUR(int p0);
	void SET_PED_STAY_IN_VEHICLE_WHEN_JACKED(int p0, int p1);
	void SET_PED_CAN_BE_SHOT_IN_VEHICLE(int p0, int p1);
	int GET_PED_LAST_DAMAGE_BONE(int p0, int p1);
	void CLEAR_PED_LAST_DAMAGE_BONE(int p0);
	void SET_AI_WEAPON_DAMAGE_MODIFIER(int p0);
	void RESET_AI_WEAPON_DAMAGE_MODIFIER();
	void _0x0F9A401F(int p0);
	void _0x97886238();
	void _0xCC9D7F1A(int p0, int p1);
	void SET_PED_CAN_BE_TARGETTED(int p0, int p1);
	void SET_PED_CAN_BE_TARGETTED_BY_TEAM(int p0, int p1, int p2);
	void SET_PED_CAN_BE_TARGETTED_BY_PLAYER(int p0, int p1, int p2);
	void _0x7DA12905(int p0, int p1);
	void SET_TIME_EXCLUSIVE_DISPLAY_TEXTURE(int p0, int p1);
	int IS_PED_IN_ANY_POLICE_VEHICLE(int p0);
	void _0xA819680B(int p0);
	int _0xCD71F11B(int  ped);
	int IS_PED_FALLING(int Handle);
	int IS_PED_JUMPING(int p0);
	int IS_PED_CLIMBING(int p0);
	int _0xC3169BDA(int p0);
	int IS_PED_DIVING(int p0);
	int _0xB19215F6(int p0);
	int GET_PED_PARACHUTE_STATE(int p0);
	int _0x01F3B035(int p0);
	void SET_PED_PARACHUTE_TINT_INDEX(int p0, int p1);
	void GET_PED_PARACHUTE_TINT_INDEX(int p0, int p1);
	void _0x177EFC79(int p0, int p1);
	void SET_PED_DUCKING(int p0, int p1);
	int IS_PED_DUCKING(int p0);
	int IS_PED_IN_ANY_TAXI(int p0);
	void SET_PED_ID_RANGE(int p0, int p1);
	void _0x9A2180FF(int p0, int p1);
	void _0xF30658D2(int p0, int p1);
	void _0x43709044(int p0);
	void SET_PED_SEEING_RANGE(int p0, int p1);
	void SET_PED_HEARING_RANGE(int p0, int p1);
	void SET_PED_VISUAL_FIELD_MIN_ANGLE(int p0, int p1);
	void SET_PED_VISUAL_FIELD_MAX_ANGLE(int p0, int p1);
	void SET_PED_VISUAL_FIELD_MIN_ELEVATION_ANGLE(int p0, int p1);
	void SET_PED_VISUAL_FIELD_MAX_ELEVATION_ANGLE(int p0, int p1);
	void _0xFDF2F7C2(int p0, int p1);
	void _0xE57202A1(int p0, int p1);
	void SET_PED_STEALTH_MOVEMENT(int p0, int p1, int p2);
	int GET_PED_STEALTH_MOVEMENT(int p0);
	int CREATE_GROUP(int Zombies);
	void SET_PED_AS_GROUP_LEADER(int Handle, int Zombies);
	void SET_PED_AS_GROUP_MEMBER(int Handle, int groupId);
	void _0xD0D8BDBC(int p0, int p1, int p2);
	void REMOVE_GROUP(int Group);
	void REMOVE_PED_FROM_GROUP(int Handle);
	int IS_PED_GROUP_MEMBER(int Handle, int Group);
	int _0x9678D4FF(int p0);
	void SET_GROUP_SEPARATION_RANGE(int p0, int p1);
	void _0x2F0D0973(int p0, int p1);
	int IS_PED_PRONE(int p0);
	int IS_PED_IN_COMBAT(int p0, int p1);
	int _0xCCD525E1(int p0, int p1);
	int IS_PED_DOING_DRIVEBY(int p0);
	int IS_PED_JACKING(int p0);
	int IS_PED_BEING_JACKED(int p0);
	int IS_PED_BEING_STUNNED(int p0, int p1);
	int GET_PEDS_JACKER(int p0);
	int GET_JACK_TARGET(int p0);
	int IS_PED_FLEEING(int p0);
	int IS_PED_IN_COVER(int p0, int p1);
	int IS_PED_IN_COVER_FACING_LEFT(int p0);
	int IS_PED_GOING_INTO_COVER(int p0);
	int SET_PED_PINNED_DOWN(int p0, int p1, int p2);
	int _0xACF162E0(int p0);
	int _0x99968B37(int p0);
	int _0x84ADF9EB(int p0);
	int GET_PED_CAUSE_OF_DEATH(int p0);
	int GET_PED_TIME_OF_DEATH(int p0);
	int _0xEF0B78E6(int p0);
	int _0xFB18CB19(int p0, int p1, int p2, int p3, int p4);
	void SET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(int p0, int p1);
	void SET_PED_RELATIONSHIP_GROUP_HASH(int  pedHandle, int groupHandle);
	void SET_RELATIONSHIP_BETWEEN_GROUPS(int RelationStatus, int Group1, int Group2);
	void CLEAR_RELATIONSHIP_BETWEEN_GROUPS(int RelationStatus, int Group1, int Group2);
	int ADD_RELATIONSHIP_GROUP(char* crewName, int p1);
	void REMOVE_RELATIONSHIP_GROUP(int p0);
	int GET_RELATIONSHIP_BETWEEN_PEDS(int  ped1, int ped2);
	int GET_PED_RELATIONSHIP_GROUP_DEFAULT_HASH(int p0);
	int GET_PED_RELATIONSHIP_GROUP_HASH(int playerId);
	int GET_RELATIONSHIP_BETWEEN_GROUPS(int p0, int p1);
	void SET_PED_CAN_BE_TARGETED_WITHOUT_LOS(int p0, int p1);
	void SET_PED_TO_INFORM_RESPECTED_FRIENDS(int p0, int p1, int p2);
	int IS_PED_RESPONDING_TO_EVENT(int p0, int p1);
	void SET_PED_FIRING_PATTERN(int  ped, int patternHash);
	void SET_PED_SHOOT_RATE(int  ped, int shootRate);
	void SET_COMBAT_FLOAT(int p0, int p1, int p2);
	int GET_COMBAT_FLOAT(int p0, int p1);
	void GET_GROUP_SIZE(int p0, int p1, int p2);
	int DOES_GROUP_EXIST(int Group);
	int GET_PED_GROUP_INDEX(int  pedHandle);
	int IS_PED_IN_GROUP(int  pedHandle);
	int _0xDE7442EE(int p0);
	void SET_GROUP_FORMATION(int group, int formationType);
	void SET_GROUP_FORMATION_SPACING(int p0, int p1, int p2, int p3);
	void _0x267FCEAD(int p0);
	int GET_VEHICLE_PED_IS_USING(int Handle);
	int SET_EXCLUSIVE_PHONE_RELATIONSHIPS(int p0);
	void SET_PED_GRAVITY(int p0, int p1);
	void APPLY_DAMAGE_TO_PED(int  pedHandle, int damageAmount, int p2);
	void SET_PED_ALLOWED_TO_DUCK(int p0, int p1);
	void SET_PED_NEVER_LEAVES_GROUP(int Handle, int Group);
	int GET_PED_TYPE(int Handle);
	void SET_PED_AS_COP(int Handle, int Toggle);
	void SET_PED_MAX_HEALTH(int p0, int p1);
	int GET_PED_MAX_HEALTH(int p0);
	void SET_PED_MAX_TIME_IN_WATER(int p0, int p1);
	void SET_PED_MAX_TIME_UNDERWATER(int p0, int p1);
	void _0x373CC405(int p0, int p1);
	void SET_PED_CAN_BE_KNOCKED_OFF_VEHICLE(int Handle, int p1);
	int _0xC9D098B3(int p0);
	void KNOCK_PED_OFF_VEHICLE(int Handle);
	void SET_PED_COORDS_NO_GANG(int  ped, float XCoord, float YCoord, float ZCoord);
	int GET_PED_AS_GROUP_MEMBER(int p0, int p1);
	void SET_PED_KEEP_TASK(int  ped, int Toggle);
	void _0x397F06E3(int p0, int p1);
	int IS_PED_SWIMMING(int p0);
	int IS_PED_SWIMMING_UNDER_WATER(int p0);
	void SET_PED_COORDS_KEEP_VEHICLE(int  ped, Vector3 vec);
	void SET_PED_DIES_IN_VEHICLE(int p0, int p1);
	void SET_CREATE_RANDOM_COPS(int p0);
	void _0x82E548CC(int p0);
	void _0xEDC31475(int p0);
	int CAN_CREATE_RANDOM_COPS();
	void SET_PED_AS_ENEMY(int  pedHandle, int p1);
	void SET_PED_CAN_SMASH_GLASS(int p0, int p1, int p2);
	int IS_PED_IN_ANY_TRAIN(int p0);
	int IS_PED_GETTING_INTO_A_VEHICLE(int playerID);
	int IS_PED_TRYING_TO_ENTER_A_LOCKED_VEHICLE(int p0);
	void SET_ENABLE_HANDCUFFS(int Handle, int Toggle);
	void SET_ENABLE_BOUND_ANKLES(int p0, int p1);
	void _0x7BF61471(int p0, int p1);
	void SET_CAN_ATTACK_FRIENDLY(int p0, int p1, int p2);
	int GET_PED_ALERTNESS(int p0);
	void SET_PED_ALERTNESS(int p0, int p1);
	void SET_PED_GET_OUT_UPSIDE_DOWN_VEHICLE(int p0, int p1);
	void SET_PED_MOVEMENT_CLIPSET(int p0, int p1, int p2);
	void RESET_PED_MOVEMENT_CLIPSET(int p0, int p1);
	void SET_PED_STRAFE_CLIPSET(int p0, int p1);
	void RESET_PED_STRAFE_CLIPSET(int p0);
	void SET_PED_WEAPON_MOVEMENT_CLIPSET(int p0, int p1);
	void RESET_PED_WEAPON_MOVEMENT_CLIPSET(int p0);
	void _0xD4C73595(int p0, int p1);
	void _0xAEC9163B(int p0);
	void SET_PED_IN_VEHICLE_CONTEXT(int p0, int p1);
	void RESET_PED_IN_VEHICLE_CONTEXT(int p0);
	int _0x3C30B447(int p0, int p1, int p2);
	void _0x895E1D67(int p0, int p1, int p2, int p3, int p4);
	void _0x5736FB23(int p0, int p1);
	void SET_PED_ALTERNATE_MOVEMENT_ANIM(int p0, int p1, int p2, int p3, int p4, int p5);
	void CLEAR_PED_ALTERNATE_MOVEMENT_ANIM(int p0, int p1, int p2);
	void SET_PED_GESTURE_GROUP(int p0, int p1);
	Vector3 _0xC59D4268(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	Vector3 _0x5F7789E6(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int GET_PED_DRAWABLE_VARIATION(int  pedID, int componentID);
	int GET_NUMBER_OF_PED_DRAWABLE_VARIATIONS(int  pedID, int componentID);
	int GET_PED_TEXTURE_VARIATION(int  pedID, int componentID);
	int GET_NUMBER_OF_PED_TEXTURE_VARIATIONS(int  pedID, int componentID, int drawableID);
	int _0xC9780B95(int p0, int p1);
	int REMOVE_NIGHTVISION_MELEE(int p0, int p1, int p2);
	int GET_PED_PALETTE_VARIATION(int p0, int p1);
	int IS_PED_COMPONENT_VARIATION_VALID(int p0, int p1, int p2, int p3);
	void SET_PED_COMPONENT_VARIATION(int Handle, int componentID, int drawableID, int textureID, int paletteID);
	void SET_PED_RANDOM_COMPONENT_VARIATION(int  pedHandle, int p1);
	void SET_PED_RANDOM_PROPS(int Handle);
	void SET_PED_DEFAULT_COMPONENT_VARIATION(int Handle);
	void SET_PED_BLEND_FROM_PARENTS(int p0, int p1, int p2, int p3, int p4);
	void _0xC21C8A56(int p0);
	void _0x5D2FC042(int p0, int p1, int p2);
	void SET_PED_HEAD_BLEND_DATA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void UPDATE_PED_HEAD_BLEND_DATA(int p0, int p1, int p2, int p3);
	void SET_PED_HEAD_OVERLAY(int p0, int p1, int p2, int p3);
	int _0xFF43C18D(int p0);
	int HAS_PED_HEAD_BLEND_FINISHED(int p0);
	void _0x894314A4(int p0);
	void _0x57E5B3F9(int p0, int p1, int p2, int p3, int p4);
	void _0xC6F36292(int p0);
	int _0x211DEFEC(int p0);
	int _0x095D3BD8(int p0);
	void _0x45F3BDFB(int p0, int p1, int p2, int p3);
	int _0xC6517D52(int p0);
	void _0x6435F67F(int p0);
	void _0xC0E23671(int p0, int p1, int p2, int p3);
	int _0x3B0CA391(int p0);
	void _0xFD103BA7(int p0);
	int GET_PED_PROP_INDEX(int Handle, int ComponentID);
	void SET_PED_PROP_INDEX(int Handle, int ComponentID, int drawableID, int TextureID, int PaletteID);
	void KNOCK_OFF_PED_PROP(int p0, int p1, int p2, int p3, int p4);
	void CLEAR_PED_PROP(int Handle, int PropID);
	void CLEAR_ALL_PED_PROPS(int Handle);
	int GET_PED_PROP_TEXTURE_INDEX(int p0, int p1);
	void _0x7BCD8991(int p0);
	void _0x080275EE(int p0);
	void SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(int p0, int p1);
	void SET_PED_BOUNDS_ORIENTATION(int p0, int p1, int p2, int p3, int p4, int p5);
	void REGISTER_TARGET(int p0, int p1);
	void REGISTER_HATED_TARGETS_AROUND_PED(int Handle, float AreaToAttack);
	int GET_RANDOM_PED_AT_COORD(float x, float y, float z, float xRadius, float yRadius, float zRadius, int p6);
	int GET_CLOSEST_PED(float x, float y, float z, float Radius, int p4, int p5, int handle, int p7, int p8, int p9);
	void SET_SCENARIO_PEDS_TO_BE_RETURNED_BY_NEXT_COMMAND(int p0);
	int _0x18DD76A1(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x6D55B3B3(int p0, int p1);
	void SET_DRIVER_ABILITY(int p0, int p1);
	void SET_DRIVER_AGGRESSIVENESS(int p0, int p1);
	int CAN_PED_RAGDOLL(int p0);
	int SET_PED_TO_RAGDOLL(int  ped, int Xforce, int Yforce, int Zforce, int p4, int p5, int p6);
	int SET_PED_TO_RAGDOLL_WITH_FALL(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void SET_PED_RAGDOLL_ON_COLLISION(int Handle, int Toggle);
	int IS_PED_RAGDOLL(int p0);
	int IS_PED_RUNNING_RAGDOLL_TASK(int p0);
	void SET_PED_RAGDOLL_FORCE_FALL(int  ped);
	void RESET_PED_RAGDOLL_TIMER(int p0);
	void SET_PED_CAN_RAGDOLL(int Handle, int Toggle);
	int IS_PED_RUNNING_MOBILE_PHONE_TASK(int p0);
	int _0x97353375(int p0);
	void _0x9C8F830D(int p0, int p1);
	void _0x77CBA290(int p0, int p1);
	void SET_PED_ANGLED_DEFENSIVE_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void SET_PED_SPHERE_DEFENSIVE_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0x40638BDC(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0x4763B2C6(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_PED_DEFENSIVE_AREA_ATTACHED_TO_PED(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void _0xB66B0C9A(int p0, int p1, int p2, int p3, int p4);
	void REMOVE_PED_DEFENSIVE_AREA(int p0, int p1);
	Vector3 GET_PED_DEFENSIVE_AREA_POSITION(int p0, int p1);
	void _0xF3B7EFBF(int p0, int p1);
	void _0xA0134498(int p0);
	void REVIVE_INJURED_PED(int p0);
	void RESURRECT_PED(int p0);
	void SET_PED_NAME_DEBUG(int p0, int p1);
	Vector3 GET_PED_EXTRACTED_DISPLACEMENT(int p0, int p1);
	void SET_PED_DIES_WHEN_INJURED(int  ped, int toggle);
	void SET_PED_ENABLE_WEAPON_BLOCKING(int  ped, int toggle);
	void _0x141CC936(int p0, int p1);
	void RESET_PED_VISIBLE_DAMAGE(int  ped);
	void _0x1E54DB12(int p0, int p1, int p2, int p3, int p4);
	void APPLY_PED_BLOOD(int  ped, int i1, float f1, float f2, float f3, char* s1);
	void _0x8F3F3A9C(int p0, int p1, int p2, int p3, int p4);
	void _0xFC13CE80(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void APPLY_PED_DAMAGE_DECAL(int p0, int p1, float p2, float p3, float p4, float p5, float p6, int p7, int p8, char* p9);
	void APPLY_PED_DAMAGE_PACK(int p0, int p1, int p2, int p3);
	void CLEAR_PED_BLOOD_DAMAGE(int Handle);
	void _0xF210BE69(int p0, int p1);
	void _0x0CB6C4ED(int p0, int p1, int p2);
	void _0x70AA5B7D(int p0, int p1, int p2);
	int _0x47187F7F(int p0);
	void CLEAR_PED_WETNESS(int  ped);
	void SET_PED_WETNESS_HEIGHT(int  ped, float height);
	void SET_PED_WETNESS_ENABLED_THIS_FRAME(int p0);
	void _0xA993915F(int  ped);
	void SET_PED_SWEAT(int  ped, float sweat);
	void _0x70559AC7(int  ped, int ShirtType, int ShirtDecal);
	int _0x3543019E(int p0, int p1);
	void CLEAR_PED_DECORATIONS(int Handle);
	void _0xEFD58EB9(int p0);
	int WAS_PED_SKELETON_UPDATED(int p0);
	Vector3 GET_PED_BONE_COORDS(int  ped, int i1, float f1, float f2, float f3);
	void CREATE_NM_MESSAGE(int p0, int p1);
	void GIVE_PED_NM_MESSAGE(int p0);
	int ADD_SCENARIO_BLOCKING_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void REMOVE_SCENARIO_BLOCKING_AREAS();
	void REMOVE_SCENARIO_BLOCKING_AREA(int p0, int p1);
	void SET_SCENARIO_PEDS_SPAWN_IN_SPHERE_AREA(int p0, int p1, int p2, int p3, int p4);
	int IS_PED_USING_SCENARIO(int p0, int p1);
	int IS_PED_USING_ANY_SCENARIO(int p0);
	int _0x59DE73AC(int p0, int p1, int p2, int p3);
	void _0xC08FE5F6(int p0, int p1);
	int _0x58C0F6CF(int p0, int p1, int p2, int p3);
	int _0x761F8F48(int p0, int p1);
	void _0x033F43FA(int p0);
	void _0x4C684C81(int p0);
	int _0x7B4C3E6F(int p0, int p1, int p2, int p3);
	void _0x5BC276AE(int p0, int p1);
	void PLAY_FACIAL_ANIM(int p0, int p1, int p2);
	void SET_FACIAL_IDLE_ANIM_OVERRIDE(int p0, int p1, int p2);
	void CLEAR_FACIAL_IDLE_ANIM_OVERRIDE(int p0);
	void SET_PED_CAN_PLAY_GESTURE_ANIMS(int p0, int p1);
	void SET_PED_CAN_PLAY_VISEME_ANIMS(int p0, int p1, int p2);
	void _0xADB2511A(int p0, int p1);
	void SET_PED_CAN_PLAY_AMBIENT_ANIMS(int p0, int p1);
	void SET_PED_CAN_PLAY_AMBIENT_BASE_ANIMS(int p0, int p1);
	void _0xB7CD0A49(int p0);
	void _0x343B4DE0(int p0, int p1);
	void SET_PED_CAN_HEAD_IK(int p0, int p1);
	void SET_PED_CAN_LEG_IK(int p0, int p1);
	void _0x8E5D4EAB(int p0, int p1);
	void _0x7B0040A8(int p0, int p1);
	void _0x0FDA62DE(int p0, int p1);
	void SET_PED_CAN_USE_AUTO_CONVERSATION_LOOKAT(int p0, int p1);
	int IS_PED_HEADTRACKING_PED(int p0, int p1);
	int IS_PED_HEADTRACKING_ENTITY(int p0, int p1);
	void SET_PED_PRIMARY_LOOKAT(int p0, int p1);
	void _0xFC942D7C(int p0, int p1);
	void _0x89EEE07B(int p0, int p1);
	void SET_PED_CONFIG_FLAG(int p0, int p1, int p2);
	void SET_PED_RESET_FLAG(int p0, int p1, int p2);
	int GET_PED_CONFIG_FLAG(int p0, int p1, int p2);
	int GET_PED_RESET_FLAG(int p0, int p1);
	void SET_PED_GROUP_MEMBER_PASSENGER_INDEX(int p0, int p1);
	void SET_PED_CAN_EVASIVE_DIVE(int p0, int p1);
	int IS_PED_EVASIVE_DIVING(int p0, int p1);
	void SET_PED_SHOOTS_AT_COORD(int p0, int p1, int p2, int p3, int p4);
	void SET_PED_MODEL_IS_SUPPRESSED(int p0, int p1);
	void STOP_ANY_PED_MODEL_BEING_SUPPRESSED();
	void SET_PED_CAN_BE_TARGETED_WHEN_INJURED(int p0, int p1);
	void SET_PED_GENERATES_DEAD_BODY_EVENTS(int  ped, int Toggle);
	void _0xFF1F6AEB(int p0, int p1);
	void SET_PED_CAN_RAGDOLL_FROM_PLAYER_IMPACT(int p0, int p1);
	void GIVE_PED_HELMET(int p0, int p1, int p2, int p3);
	void REMOVE_PED_HELMET(int p0, int p1);
	void SET_PED_HELMET(int p0, int p1);
	void SET_PED_HELMET_FLAG(int p0, int p1);
	void SET_PED_HELMET_PROP_INDEX(int p0, int p1);
	void SET_PED_HELMET_TEXTURE_INDEX(int p0, int p1);
	int IS_PED_WEARING_HELMET(int Handle);
	void _0x24A1284E(int p0);
	int _0x8A3A3116(int p0);
	int _0x74EB662D(int p0);
	int _0xFFF149FE(int p0);
	void SET_PED_TO_LOAD_COVER(int p0, int p1);
	void SET_PED_CAN_COWER_IN_COVER(int p0, int p1);
	void SET_PED_CAN_PEEK_IN_COVER(int Handle, int Toggle);
	void SET_PED_PLAYS_HEAD_ON_HORN_ANIM_WHEN_DIES_IN_VEHICLE(int p0, int p1);
	void SET_PED_LEG_IK_MODE(int p0, int p1);
	void SET_PED_MOTION_BLUR(int p0, int p1);
	void SET_PED_CAN_SWITCH_WEAPON(int ID, int CAN_SWITCH);
	void SET_PED_DIES_INSTANTLY_IN_WATER(int Handle, int Toggle);
	void _0x77BB7CB8(int p0, int p1);
	void STOP_PED_WEAPON_FIRING_WHEN_DROPPED(int p0);
	void SET_SCRIPTED_ANIM_SEAT_OFFSET(int p0, int p1);
	void SET_PED_COMBAT_MOVEMENT(int p0, int p1);
	int GET_PED_COMBAT_MOVEMENT(int p0);
	void SET_PED_COMBAT_ABILITY(int  ped, int p1);
	void SET_PED_COMBAT_RANGE(int  ped, float range);
	int GET_PED_COMBAT_RANGE(int p0);
	void SET_PED_COMBAT_ATTRIBUTES(int p0, int p1, int p2);
	void SET_PED_TARGET_LOSS_RESPONSE(int p0, int p1);
	int _0x139C0875(int p0);
	int IS_PED_PERFORMING_STEALTH_KILL(int p0);
	int _0x9BE7C860(int Handle);
	int IS_PED_BEING_STEALTH_KILLED(int p0);
	int _0xAFEC26A4(int p0);
	int WAS_PED_KILLED_BY_STEALTH(int p0);
	int WAS_PED_KILLED_BY_TAKEDOWN(int p0);
	int _0x3993092B(int p0);
	void SET_PED_FLEE_ATTRIBUTES(int p0, int p1, int p2);
	void SET_PED_COWER_HASH(int p0, int p1);
	void _0xA6F2C057(int p0, int p1);
	void SET_PED_STEERS_AROUND_PEDS(int  ped, int DoesSteer);
	void SET_PED_STEERS_AROUND_OBJECTS(int  ped, int DoesSteer);
	void SET_PED_STEERS_AROUND_VEHICLES(int  ped, int DoesSteer);
	void _0x2276DE0D(int p0, int p1);
	void _0x59C52BE6(int p0);
	void _0x1D87DDC1(int p0, int p1);
	void _0xB52BA5F5(int p0);
	int IS_ANY_PED_NEAR_POINT(int p0, int p1, int p2, int p3);
	void _0x187B9070(int p0, int p1, int p2);
	int _0x45037B9B(int p0, int p1, int p2, int p3, int p4);
	void _0x840D24D3(int p0);
	void GET_PED_FLOOD_INVINCIBILITY(int p0, int p1);
	void _0x9194DB71(int p0, int p1);
	int IS_TRACKED_PED_VISIBLE(int p0);
	int _0x5B1B70AA(int p0);
	int IS_PED_TRACKED(int p0);
	int HAS_PED_RECEIVED_EVENT(int p0, int p1);
	int _0x74A0F291(int p0, int p1);
	int GET_PED_BONE_INDEX(int Handle, int BoneIndex);
	int GET_PED_RAGDOLL_BONE_INDEX(int p0, int p1);
	void SET_PED_ENVEFF_SCALE(int p0, int p1);
	int GET_PED_ENVEFF_SCALE(int p0);
	void SET_ENABLE_PED_ENVEFF_SCALE(int p0, int p1);
	void _0x3B882533(int p0, int p1);
	void _0x87A0C174(int p0, int p1, int p2, int p3);
	void _0x7BD26837(int p0, int p1);
	void _0x98E29ED0(int p0, int p1);
	int _0xD315978E(int p0);
	int CREATE_SYNCHRONIZED_SCENE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0xF3876894(int p0, int p1, int p2, int p3, int p4);
	int IS_SYNCHRONIZED_SCENE_RUNNING(int p0);
	void SET_SYNCHRONIZED_SCENE_ORIGIN(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_SYNCHRONIZED_SCENE_PHASE(int p0, int p1);
	int GET_SYNCHRONIZED_SCENE_PHASE(int p0);
	void SET_SYNCHRONIZED_SCENE_RATE(int p0, int p1);
	int GET_SYNCHRONIZED_SCENE_RATE(int p0);
	void SET_SYNCHRONIZED_SCENE_LOOPED(int p0, int p1);
	int IS_SYNCHRONIZED_SCENE_LOOPED(int p0);
	void _0x2DE48DA1(int p0, int p1);
	int _0x72CF2514(int p0);
	void ATTACH_SYNCHRONIZED_SCENE_TO_ENTITY(int p0, int p1, int p2);
	void DETACH_SYNCHRONIZED_SCENE(int p0);
	void _0xBF7F9035(int p0);
	int FORCE_PED_MOTION_STATE(int p0, int p1, int p2, int p3, int p4);
	void SET_PED_MAX_MOVE_BLEND_RATIO(int p0, int p1);
	void SET_PED_MIN_MOVE_BLEND_RATIO(int p0, int p1);
	void SET_PED_MOVE_RATE_OVERRIDE(int p0, int p1);
	int _0x79543043(int p0, int p1);
	int GET_PED_NEARBY_VEHICLES(int Handle, int* sizeAndVehs);
	int GET_PED_NEARBY_PEDS(int Handle, int* PToArray, int p2);
	int _0xF9FB4B71(int p0);
	int IS_PED_USING_ACTION_MODE(int p0);
	void SET_PED_USING_ACTION_MODE(int p0, int p1, int p2, int p3);
	void SET_PED_CAPSULE(int p0, int p1);
	int REGISTER_PEDHEADSHOT(int p0);
	int _0x4DD03628(int p0);
	void UNREGISTER_PEDHEADSHOT(int p0);
	int IS_PEDHEADSHOT_VALID(int p0);
	int IS_PEDHEADSHOT_READY(int p0);
	int GET_PEDHEADSHOT_TXD_STRING(int p0);
	void SET_PEDHEADSHOT_CUSTOM_LIGHTING(int p0);
	void SET_PEDHEADSHOT_CUSTOM_LIGHT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0x10F2C023(int p0);
	void _0x0DBB2FA7(int p0);
	int _0x810158F8();
	int _0x05023F8F();
	int _0xAA39FD6C();
	void _0xEF9142DB(int p0, int p1);
	void _0x0688DE64(int p0);
	void _0x909A1D76(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x4AAD0ECB(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0x492C9E46();
	int _0x814A28F4();
	int _0x0B60D2BA();
	int _0x6B83ABDF();
	int _0xF46B4DC8();
	void _0x36A4AC65(int p0, int p1, int p2, int p3);
	void _0xBA699DDF(int p0, int p1);
	void SET_IK_TARGET(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0xFB4000DC(int p0);
	void REQUEST_ACTION_MODE_ASSET(int p0);
	int HAS_ACTION_MODE_ASSET_LOADED(int p0);
	void REMOVE_ACTION_MODE_ASSET(int p0);
	void REQUEST_STEALTH_MODE_ASSET(int p0);
	int HAS_STEALTH_MODE_ASSET_LOADED(int p0);
	void REMOVE_STEALTH_MODE_ASSET(int p0);
	void SET_PED_LOD_MULTIPLIER(int p0, int p1);
	void _0x2F9550C2(int p0, int p1, int p2);
	void _0x37DBC2AD(int p0, int p1);
	void _0xC0F1BC91(int p0, int p1, int p2, int p3);
	int _0x1A464167(int p0, int p1, int p2, int p3, int p4);
	int _0xD0567D41(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x4BBE5E2C(int p0, int p1, int p2, int p3, int p4);
	void _0xA89A53F2(int p0);
}

namespace VEHICLE
{
	int CREATE_VEHICLE(int VehicleHash, Vector3 coords, float Heading, int networkHandle, int vehiclehandle);
	void DELETE_VEHICLE(int* vehicle);
	void _0xBB54ECCA(int p0, int p1);
	void SET_VEHICLE_ALLOW_NO_PASSENGERS_LOCKON(int p0, int p1);
	int _0xFBDE9FD8(int p0);
	int IS_VEHICLE_MODEL(int hash, int toggle);
	int DOES_SCRIPT_VEHICLE_GENERATOR_EXIST(int p0);
	int CREATE_SCRIPT_VEHICLE_GENERATOR(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14, int p15, int p16);
	void DELETE_SCRIPT_VEHICLE_GENERATOR(int p0);
	void SET_SCRIPT_VEHICLE_GENERATOR(int p0, int p1);
	void SET_ALL_VEHICLE_GENERATORS_ACTIVE_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_ALL_VEHICLE_GENERATORS_ACTIVE();
	void SET_ALL_LOW_PRIORITY_VEHICLE_GENERATORS_ACTIVE(int p0);
	void _0x935A95DA(int p0, int p1, int p2, int p3);
	void _0x6C73E45A();
	int SET_VEHICLE_ON_GROUND_PROPERLY(int vehicle);
	int SET_ALL_VEHICLES_SPAWN(int p0, int p1, int p2, int p3);
	int IS_VEHICLE_STUCK_ON_ROOF(int Hash);
	void ADD_VEHICLE_UPSIDEDOWN_CHECK(int p0);
	void REMOVE_VEHICLE_UPSIDEDOWN_CHECK(int p0);
	int IS_VEHICLE_STOPPED(int p0);
	int GET_VEHICLE_NUMBER_OF_PASSENGERS(int Vehicle);
	int GET_VEHICLE_MAX_NUMBER_OF_PASSENGERS(int Vehicle);
	int _GET_VEHICLE_MODEL_MAX_NUMBER_OF_PASSENGERS(int VehicleModel);
	int _769E5CF2(int Vehicle, int i1);
	void SET_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(int p0);
	void SET_RANDOM_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(int p0);
	void SET_PARKED_VEHICLE_DENSITY_MULTIPLIER_THIS_FRAME(int p0);
	void _0x09462665(int p0);
	void _0xDAE2A2BE(int p0);
	void SET_FAR_DRAW_VEHICLES(int p0);
	void SET_NUMBER_OF_PARKED_VEHICLES(int value);
	void SET_VEHICLE_DOORS_LOCKED(int hash, int door);
	void SET_PED_TARGETTABLE_VEHICLE_DESTROY(int p0, int p1, int p2);
	void DISABLE_VEHICLE_IMPACT_EXPLOSION_ACTIVATION(int p0, int p1);
	void SET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(int p0, int p1, int p2);
	int GET_VEHICLE_DOORS_LOCKED_FOR_PLAYER(int p0, int p1);
	void SET_VEHICLE_DOORS_LOCKED_FOR_ALL_PLAYERS(int p0, int p1);
	void _0xE4EF6514(int p0, int p1);
	void SET_VEHICLE_DOORS_LOCKED_FOR_TEAM(int p0, int p1, int p2);
	void EXPLODE_VEHICLE(int vehicle, int b1, int b2);
	void SET_VEHICLE_OUT_OF_CONTROL(int p0, int p1, int p2);
	void SET_VEHICLE_TIMED_EXPLOSION(int p0, int p1, int p2);
	void _0x811373DE(int p0);
	int _0xA4E69134();
	void _0x65255524();
	int _0xE39DAF36(int p0);
	void SET_TAXI_LIGHTS(int vehicle, int state);
	int IS_TAXI_LIGHT_ON(int vehicle);
	int IS_VEHICLE_IN_GARAGE_AREA(int p0, int p1);
	void SET_VEHICLE_COLOURS(int p0, int p1, int p2);
	void SET_VEHICLE_FULLBEAM(int vehicle, int state);
	void STEER_UNLOCK_BIAS(int p0, int p1);
	void SET_VEHICLE_CUSTOM_PRIMARY_COLOUR(int vehicle, int r, int g, int b);
	void GET_VEHICLE_CUSTOM_PRIMARY_COLOUR(int vehicle, int r, int g, int b);
	void CLEAR_VEHICLE_CUSTOM_PRIMARY_COLOUR(int vehicle);
	int GET_IS_VEHICLE_PRIMARY_COLOUR_CUSTOM(int vehicle);
	void SET_VEHICLE_CUSTOM_SECONDARY_COLOUR(int vehicle, int r, int g, int b);
	void GET_VEHICLE_CUSTOM_SECONDARY_COLOUR(int p0, int p1, int p2, int p3);
	void CLEAR_VEHICLE_CUSTOM_SECONDARY_COLOUR(int vehicle);
	int GET_IS_VEHICLE_SECONDARY_COLOUR_CUSTOM(int vehicle);
	void _0x8332730C(int p0, int p1);
	int _0xD5F1EEE1(int p0);
	void SET_CAN_RESPRAY_VEHICLE(int vehicle, int state);
	void _0x54E9EE75(int p0, int p1);
	void _0x4A46E814(int vehicle, int p1, float X, float Y, float z);
	void SET_BOAT_ANCHOR(int vehicle, int p1);
	void _0x0ED84792(int p0, int p1);
	void _0xA739012A(int p0, int p1);
	void _0x66FA450C(int p0, int p1);
	void _0x35614622(int p0, int p1);
	void SET_VEHICLE_SIREN(int vehicle, int siren);
	int IS_VEHICLE_SIREN_ON(int vehicle);
	void SET_VEHICLE_STRONG(int vehicle, int p0);
	void REMOVE_VEHICLE_STUCK_CHECK(int p0);
	void GET_VEHICLE_COLOURS(int vehicle, int* col1, int* col2);
	int IS_VEHICLE_SEAT_FREE(int vehicle, int seatIndex);
	int GET_PED_IN_VEHICLE_SEAT(int vehicle, int index);
	int _0xF7C6792D(int p0, int p1);
	int GET_VEHICLE_LIGHTS_STATE(int p0, int p1, int p2);
	int IS_VEHICLE_TYRE_BURST(int vehicle, int wheelID, int p2);
	void SET_VEHICLE_FORWARD_SPEED(int vehicle, float speed);
	void _0xCBC7D3C8(int p0, int p1, int p2, int p3);
	void _0x943A6CFC(int p0, int p1);
	int SET_PED_ENABLED_BIKE_RINGTONE(int p0, int p1);
	int _0x593143B9(int p0);
	int _0x70DD5E25(int p0);
	int _0xFBF5536A(int p0, int p1);
	void _0x20AB5783(int p0, int p1);
	void _0x0F11D01F(int p0);
	void _0xAE040377(int p0, int p1);
	void _0x4C0E4031(int p0, int p1);
	int _0x6346B7CC(int p0);
	void _0xCCB41A55(int p0, int p1);
	void SET_VEHICLE_TYRE_BURST(int p0, int p1, int p2, int p3);
	void SET_VEHICLE_DOORS_SHUT(int vehicle, int index);
	void SET_VEHICLE_TYRES_CAN_BURST(int vehicle, int value);
	int GET_VEHICLE_TYRES_CAN_BURST(int vehicle);
	void SET_VEHICLE_WHEELS_CAN_BREAK(int vehicle, int enabled);
	void SET_VEHICLE_DOOR_OPEN(int vehicle, int doorIndex, int loose, int openInstantly);
	void REMOVE_VEHICLE_WINDOW(int vehicle, int windowIndex);
	void ROLL_DOWN_WINDOWS(int vehicle);
	void ROLL_DOWN_WINDOW(int vehicle, int windowIndex);
	void ROLL_UP_WINDOW(int vehicle, int windowIndex);
	void SMASH_VEHICLE_WINDOW(int vehicle, int index);
	void FIX_VEHICLE_WINDOW(int vehicle, int index);
	void _DETACH_VEHICLE_WINDSCREEN(int vehicleHandle);
	void _0xFDA7B6CA(int p0, int p1, int p2, int p3);
	void SET_VEHICLE_LIGHTS(int p0, int p1);
	void _0x4221E435(int p0, int p1);
	void SET_VEHICLE_ALARM(int vehicle, int state);
	void START_VEHICLE_ALARM(int vehicle);
	int IS_VEHICLE_ALARM_ACTIVATED(int vehicle);
	void SET_VEHICLE_INTERIORLIGHT(int vehicle, int Toggle);
	void SET_VEHICLE_LIGHT_MULTIPLIER(int vehicle, float multiplier);
	void ATTACH_VEHICLE_TO_TRAILER(int p0, int p1, int p2);
	void _0x12AC1A16(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void _0x40C4763F(int p0, int p1, int p2);
	void DETACH_VEHICLE_FROM_TRAILER(int p0);
	int IS_VEHICLE_ATTACHED_TO_TRAILER(int vehicle);
	void _0xE74E85CE(int p0, int p1);
	void _0x06C47A6F(int p0);
	void SET_VEHICLE_TYRE_FIXED(int vehicle, int tyreIndex);
	void SET_VEHICLE_NUMBER_PLATE_TEXT(int vehicle, char* plateText);
	char* GET_VEHICLE_NUMBER_PLATE_TEXT(int vehicle);
	int GET_NUMBER_OF_VEHICLE_NUMBER_PLATES();
	void SET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(int vehicle, int PlateType);
	int GET_VEHICLE_NUMBER_PLATE_TEXT_INDEX(int vehicle);
	void SET_RANDOM_TRAINS(int p0);
	int CREATE_MISSION_TRAIN(int p0, int p1, int p2, int p3, int p4);
	void SWITCH_TRAIN_TRACK(int p0, int p1);
	void _0xD5774FB7(int p0, int p1);
	void DELETE_ALL_TRAINS();
	void SET_TRAIN_SPEED(int p0, int p1);
	void SET_TRAIN_CRUISE_SPEED(int p0, int p1);
	void SET_RANDOM_BOATS(int p0);
	void SET_GARBAGE_TRUCKS(int p0);
	int DOES_VEHICLE_HAVE_STUCK_VEHICLE_CHECK(int p0);
	int GET_VEHICLE_RECORDING_ID(int p0, int p1);
	void REQUEST_VEHICLE_RECORDING(int p0, int p1);
	int HAS_VEHICLE_RECORDING_BEEN_LOADED(int p0, int p1);
	void REMOVE_VEHICLE_RECORDING(int p0, int p1);
	Vector3 _0xF31973BB(int p0, int p1);
	Vector3 GET_POSITION_OF_VEHICLE_RECORDING_AT_TIME(int p0, int p1, int p2);
	Vector3 _0x4D1C15C2(int p0, int p1);
	Vector3 GET_ROTATION_OF_VEHICLE_RECORDING_AT_TIME(int p0, int p1, int p2);
	int GET_TOTAL_DURATION_OF_VEHICLE_RECORDING_ID(int p0);
	int GET_TOTAL_DURATION_OF_VEHICLE_RECORDING(int p0, int p1);
	int GET_POSITION_IN_RECORDING(int p0);
	int GET_TIME_POSITION_IN_RECORDING(int p0);
	void START_PLAYBACK_RECORDED_VEHICLE(int p0, int p1, int p2, int p3);
	void START_PLAYBACK_RECORDED_VEHICLE_WITH_FLAGS(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x01B91CD0(int p0, int p1);
	void STOP_PLAYBACK_RECORDED_VEHICLE(int p0);
	void PAUSE_PLAYBACK_RECORDED_VEHICLE(int p0);
	void UNPAUSE_PLAYBACK_RECORDED_VEHICLE(int p0);
	int IS_PLAYBACK_GOING_ON_FOR_VEHICLE(int p0);
	int IS_PLAYBACK_USING_AI_GOING_ON_FOR_VEHICLE(int p0);
	int GET_CURRENT_PLAYBACK_FOR_VEHICLE(int p0);
	void SKIP_TO_END_AND_STOP_PLAYBACK_RECORDED_VEHICLE(int p0);
	void SET_PLAYBACK_SPEED(int p0, float speed);
	void START_PLAYBACK_RECORDED_VEHICLE_USING_AI(int p0, int p1, int p2, int p3, int p4);
	void SKIP_TIME_IN_PLAYBACK_RECORDED_VEHICLE(int p0, int p1);
	void SET_PLAYBACK_TO_USE_AI(int p0, int p1);
	void SET_PLAYBACK_TO_USE_AI_TRY_TO_REVERT_BACK_LATER(int p0, int p1, int p2, int p3);
	void _0x943A58EB(int p0, int p1, int p2, int p3, int p4);
	void _0x5C9F477C(int p0, int p1, int p2, int p3);
	void _0xCD83C393(int p0, int p1, int p2, int p3);
	void _0x2EF8435C(int p0, int p1);
	void EXPLODE_VEHICLE_IN_CUTSCENE(int p0, int p1);
	void ADD_VEHICLE_STUCK_CHECK_WITH_WARP(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_VEHICLE_MODEL_IS_SUPPRESSED(int p0, int p1);
	int GET_RANDOM_VEHICLE_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5);
	int GET_RANDOM_VEHICLE_FRONT_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6);
	int GET_RANDOM_VEHICLE_BACK_BUMPER_IN_SPHERE(float p0, float p1, float p2, float p3, int p4, int p5, int p6);
	int GET_CLOSEST_VEHICLE(float x, float y, float z, float radius, int hash, int unk1);
	int GET_TRAIN_CARRIAGE(int p0, int p1);
	void DELETE_MISSION_TRAIN(int p0);
	void SET_MISSION_TRAIN_AS_NO_LONGER_NEEDED(int p0, int p1);
	void SET_MISSION_TRAIN_COORDS(int p0, int p1, int p2, int p3);
	int IS_THIS_MODEL_A_BOAT(int model);
	int IS_THIS_MODEL_A_PLANE(int model);
	int IS_THIS_MODEL_A_HELI(int model);
	int IS_THIS_MODEL_A_CAR(int model);
	int IS_THIS_MODEL_A_TRAIN(int model);
	int IS_THIS_MODEL_A_BIKE(int model);
	int IS_THIS_MODEL_A_BICYCLE(int model);
	int IS_THIS_MODEL_A_QUADBIKE(int model);
	void SET_HELI_BLADES_FULL_SPEED(int p0);
	void SET_HELI_BLADES_SPEED(int vehicle, float speed);
	void _0x1128A45B(int p0, int p1, int p2);
	void SET_VEHICLE_CAN_BE_TARGETTED(int vehicle, int state);
	void _0x486C1280(int p0, int p1);
	void SET_VEHICLE_CAN_BE_VISIBLY_DAMAGED(int vehicle, int state);
	void _0x009AB49E(int p0, int p1);
	void _0x758C5E2E(int p0, int p1);
	float GET_VEHICLE_DIRT_LEVEL(int vehicle);
	void SET_VEHICLE_DIRT_LEVEL(int Vehicle, float DirtLVL);
	int _0xDAC523BC(int p0);
	int IS_VEHICLE_DOOR_FULLY_OPEN(int vehicle, int doorIndex);
	void SET_VEHICLE_ENGINE_ON(int veh, int engineState, int p3);
	void SET_VEHICLE_UNDRIVEABLE(int vehicle, int state);
	void SET_VEHICLE_PROVIDES_COVER(int p0, int p1);
	void SET_VEHICLE_DOOR_CONTROL(int p0, int p1, int p2, int p3);
	void SET_VEHICLE_DOOR_LATCHED(int p0, int p1, int p2, int p3, int p4);
	int GET_VEHICLE_DOOR_ANGLE_RATIO(int p0, int p1);
	void SET_VEHICLE_DOOR_SHUT(int vehicle, int doorIndex, int closeInstantly);
	void SET_VEHICLE_DOOR_BROKEN(int veh, int doorIndex, int unk);
	void SET_VEHICLE_CAN_BREAK(int vehicle, int Toggle);
	int DOES_VEHICLE_HAVE_ROOF(int vehicle);
	int IS_BIG_VEHICLE(int vehicle);
	int GET_NUMBER_OF_VEHICLE_COLOURS(int p0);
	void SET_VEHICLE_COLOUR_COMBINATION(int p0, int p1);
	int GET_VEHICLE_COLOUR_COMBINATION(int p0);
	void SET_VEHICLE_IS_CONSIDERED_BY_PLAYER(int p0, int p1);
	void _0xA6D8D7A5(int p0, int p1);
	void _0xACAB8FF3(int p0, int p1);
	void _0xF0E5C41D(int p0, int p1);
	void _0x2F98B4B7(int p0, int p1);
	void GET_RANDOM_VEHICLE_MODEL_IN_MEMORY(int b0, int* p1, int* p2);
	int GET_VEHICLE_DOOR_LOCK_STATUS(int p0);
	int IS_VEHICLE_DOOR_DAMAGED(int veh, int doorID);
	void _0x065B92B3(int p0, int p1, int p2);
	int _0xB3A2CC4F(int p0, int p1);
	int IS_VEHICLE_BUMPER_BROKEN_OFF(int p0, int p1);
	int IS_COP_VEHICLE_IN_AREA_3D(int x1, int x2, int y1, int y2, int z1, int z2);
	int IS_VEHICLE_ON_ALL_WHEELS(int vehicle);
	int GET_VEHICLE_LAYOUT_HASH(int p0);
	void SET_RENDER_TRAIN_AS_DERAILED(int p0, int p1);
	void SET_VEHICLE_EXTRA_COLOURS(int p0, int p1, int p2);
	void GET_VEHICLE_EXTRA_COLOURS(int p0, int p1, int p2);
	void STOP_ALL_GARAGE_ACTIVITY();
	void SET_VEHICLE_FIXED(int Vehicle);
	void SET_VEHICLE_DEFORMATION_FIXED(int Vehicle);
	void _0x88F0F7E7(int p0, int p1);
	void _0x90D6EE57(int p0, int p1);
	void _0xC40192B5(int p0, int p1);
	void SET_DISABLE_VEHICLE_PETROL_TANK_DAMAGE(int p0, int p1);
	void _0x1784BA1A(int p0, int p1);
	void _0x40C323AE(int p0, int p1);
	void _0x847F1304(int p0, int p1);
	void _0xCBD98BA1(int p0, int p1);
	void REMOVE_VEHICLES_FROM_GENERATORS_IN_AREA(int x1, int x2, int y1, int y2, int z1, int z2);
	void SET_VEHICLE_STEER_BIAS(int p0, int p1);
	int IS_VEHICLE_EXTRA_TURNED_ON(int p0, int p1);
	void SET_VEHICLE_EXTRA(int vehicle, int ExtraID, int Toggle);
	int DOES_EXTRA_EXIST(int p0, int p1);
	void SET_CONVERTIBLE_ROOF(int p0, int p1);
	void LOWER_CONVERTIBLE_ROOF(int p0, int p1);
	void RAISE_CONVERTIBLE_ROOF(int p0, int p1);
	int GET_CONVERTIBLE_ROOF_STATE(int p0);
	int IS_VEHICLE_A_CONVERTIBLE(int p0, int p1);
	int IS_VEHICLE_STOPPED_AT_TRAFFIC_LIGHTS(int p0);
	void SET_VEHICLE_DAMAGE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	float GET_VEHICLE_ENGINE_HEALTH(int vehicle);
	void SET_VEHICLE_ENGINE_HEALTH(int vehicle, float health);
	float GET_VEHICLE_PETROL_TANK_HEALTH(int vehicle);
	void SET_VEHICLE_PETROL_TANK_HEALTH(int vehicle, float health);
	int IS_VEHICLE_STUCK_TIMER_UP(int p0, int p1, int p2);
	void RESET_VEHICLE_STUCK_TIMER(int p0, int p1);
	int IS_VEHICLE_DRIVEABLE(int p0, int p1);
	void SET_VEHICLE_HAS_BEEN_OWNED_BY_PLAYER(int p0, int p1);
	void SET_VEHICLE_NEEDS_TO_BE_HOTWIRED(int p0, int p1);
	void START_VEHICLE_HORN(int p0, int p1, int p2, int p3);
	void _0x968E5770(int p0, int p1);
	void SET_VEHICLE_HAS_STRONG_AXLES(int p0, int p1);
	int GET_DISPLAY_NAME_FROM_VEHICLE_MODEL(int p0);
	Vector3 GET_VEHICLE_DEFORMATION_AT_POS(int p0, int p1, int p2, int p3);
	void SET_VEHICLE_LIVERY(int vehicle, int LiveryIndex);
	int GET_VEHICLE_LIVERY(int p0);
	int GET_VEHICLE_LIVERY_COUNT(int p0);
	int IS_VEHICLE_WINDOW_INTACT(int p0, int p1);
	int _0xBB619744(int p0);
	int _0x648E685A(int p0);
	void RESET_VEHICLE_WHEELS(int p0, int p1);
	int IS_HELI_PART_BROKEN(int p0, int p1, int p2, int p3);
	int _0xF01E2AAB(int p0);
	int _0xA41BC13D(int p0);
	int _0x8A68388F(int p0);
	int WAS_COUNTER_ACTIVATED(int p0, int p1);
	void SET_VEHICLE_NAME_DEBUG(int p0, int p1);
	void SET_VEHICLE_EXPLODES_ON_HIGH_EXPLOSION_DAMAGE(int p0, int p1);
	void _0xC306A9A3(int p0, int p1);
	void _0x95A9ACCB(int vehicle, int p1);
	void _0x24F873FB(int p0, int p1);
	int _0xA6F02670(int p0);
	int IS_ANY_VEHICLE_NEAR_POINT(int p0, int x, int y, int z);
	void REQUEST_VEHICLE_HIGH_DETAIL_MODEL(int p0);
	void REMOVE_VEHICLE_HIGH_DETAIL_MODEL(int p0);
	int IS_VEHICLE_HIGH_DETAIL(int p0);
	void REQUEST_VEHICLE_ASSET(int VehicleHash, int p1);
	int HAS_VEHICLE_ASSET_LOADED(int p0);
	void REMOVE_VEHICLE_ASSET(int p0);
	void _0x88236E22(int p0, int p1);
	void ATTACH_VEHICLE_TO_TOW_TRUCK(int entity, int entity2, int instant, float x, float y, float z);
	void DETACH_VEHICLE_FROM_TOW_TRUCK(int p0, int p1);
	int DETACH_VEHICLE_FROM_ANY_TOW_TRUCK(int p0);
	int IS_VEHICLE_ATTACHED_TO_TOW_TRUCK(int p0, int p1);
	int GET_ENTITY_ATTACHED_TO_TOW_TRUCK(int p0);
	int SET_VEHICLE_AUTOMATICALLY_ATTACHES(int p0, int p1, int p2);
	void _0xED23C8A3(int p0, int p1, int p2);
	void _0xB1A52EF7(int p0, int p1, int p2);
	void _0xF30C566F(int p0, int p1);
	void _0xA7DF64D7(int p0, int p1);
	void _0xDD7936F5(int p0, int p1);
	int _0x34E02FCD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void SET_VEHICLE_BURNOUT(int p0, int p1);
	int IS_VEHICLE_IN_BURNOUT(int vehicle);
	void SET_VEHICLE_REDUCE_GRIP(int Vehicle, int Toggle);
	void SET_VEHICLE_INDICATOR_LIGHTS(int vehicle, int turnSignal, int Toggle);
	void SET_VEHICLE_BRAKE_LIGHTS(int vehicle, int Toggle);
	void SET_VEHICLE_HANDBRAKE(int vehicle, int Toggle);
	void _0x37BC6ACB();
	int _0x71D898EF();
	void _0x0B0523B0(int p0);
	int GET_VEHICLE_TRAILER_VEHICLE(int p0, int p1);
	void _0x0B200CE2(int p0, int p1);
	void SET_VEHICLE_RUDDER_BROKEN(int p0, int p1);
	void _0x0858678C(int p0, int p1);
	int _0x7D1A0616(int p0);
	int GET_VEHICLE_MAX_BRAKING(int p0);
	int GET_VEHICLE_MAX_TRACTION(int p0);
	int GET_VEHICLE_ACCELERATION(int p0);
	int _0x8F291C4A(int p0);
	int GET_VEHICLE_MODEL_MAX_BRAKING(int p0);
	int _0xF3A7293F(int p0);
	int GET_VEHICLE_MODEL_MAX_TRACTION(int p0);
	int GET_VEHICLE_MODEL_ACCELERATION(int p0);
	int _0x37FBA7BC(int p0);
	int _0x95BB67EB(int p0);
	int _0x87C5D271(int p0);
	int _0xCE67162C(int p0);
	int GET_VEHICLE_CLASS_MAX_TRACTION(int p0);
	int GET_VEHICLE_CLASS_MAX_AGILITY(int p0);
	int GET_VEHICLE_CLASS_MAX_ACCELERATION(int p0);
	int GET_VEHICLE_CLASS_MAX_BRAKING(int p0);
	int _0xD6685803(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x0C0332A6(int p0);
	void _0x6574041D(int p0);
	void _0xF8EC5751(int p0);
	int IS_VEHICLE_SEARCHLIGHT_ON(int vehicle);
	void SET_VEHICLE_SEARCHLIGHT(int p0, int p1, int p2);
	int _0xAB0E79EB(int p0, int p1, int p2, int p3, int p4);
	int CAN_SHUFFLE_SEAT(int p0, int p1);
	int GET_NUM_MOD_KITS(int p0);
	void SET_VEHICLE_MOD_KIT(int vehicle, int unknown);
	int GET_VEHICLE_MOD_KIT(int p0);
	int GET_VEHICLE_MOD_KIT_TYPE(int p0);
	int GET_VEHICLE_WHEEL_TYPE(int vehicle);
	void SET_VEHICLE_WHEEL_TYPE(int vehicle, int WheelType);
	int GET_NUM_MOD_COLORS(int p0, int p1);
	void SET_VEHICLE_MOD_COLOR_1(int vehicle, int r, int g, int b);
	void SET_VEHICLE_MOD_COLOR_2(int p0, int p1, int p2);
	void GET_VEHICLE_MOD_COLOR_1(int p0, int p1, int p2, int p3);
	void GET_VEHICLE_MOD_COLOR_2(int p0, int p1, int p2);
	int _0x9A0840FD(int p0, int p1);
	int _0x9BDC0B49(int p0);
	int _0x112D637A(int p0);
	void SET_VEHICLE_MOD(int vehicle, int ModType, int ModIndex, int Variation);
	int GET_VEHICLE_MOD(int vehicle, int Modtype);
	int GET_VEHICLE_MOD_VARIATION(int vehicle, int ModType);
	int GET_NUM_VEHICLE_MODS(int vehicle, int ModType);
	void REMOVE_VEHICLE_MOD(int p0, int p1);
	void TOGGLE_VEHICLE_MOD(int vehicle, int Mod, int Toggle);
	int IS_TOGGLE_MOD_ON(int p0, int p1);
	char* GET_MOD_TEXT_LABEL(int vehicle, int ModType, int ModValue);
	char* GET_MOD_SLOT_NAME(int vehicle, int ModType);
	int GET_LIVERY_NAME(int p0, int p1);
	int GET_VEHICLE_MOD_MODIFIER_VALUE(int p0, int p1, int p2);
	int _0x94850968(int p0, int p1, int p2);
	void PRELOAD_VEHICLE_MOD(int p0, int p1, int p2);
	int HAS_PRELOAD_MODS_FINISHED(int p0);
	void RELEASE_PRELOAD_MODS(int p0);
	void SET_VEHICLE_TYRE_SMOKE_COLOR(int vehicle, int r, int g, int b);
	void GET_VEHICLE_TYRE_SMOKE_COLOR(int vehicle, int R, int G, int B);
	void SET_VEHICLE_WINDOW_TINT(int vehicle, int Tint);
	int GET_VEHICLE_WINDOW_TINT(int vehicle);
	int GET_NUM_VEHICLE_WINDOW_TINTS();
	void GET_VEHICLE_COLOR(int p0, int p1, int p2, int p3);
	int _0x749DEEA2(int p0);
	int GET_VEHICLE_CAUSE_OF_DESTRUCTION(int p0);
	int _0xA0777943(int p0);
	int _0xF178390B(int p0);
	void _0xE943B09C(int vehicle, int multiplier);
	void _0xDF594D8D(int p0, int p1);
	void _0x4D840FC4(int p0, int p1);
	int _0x5AB26C2B(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0xEF05F807(int p0);
	int _0xD656E7E5(int p0);
	void _0x642DA5AA(int vehicle, float p1);
	void _0x04F5546C(int p0, int p1);
	void SET_VEHICLE_IS_WANTED(int p0, int p1);
	void _0xA25CCB8C(int p0, int p1);
	void _0x00966934(int p0, int p1);
	void _0x113DF5FD(int p0, int p1);
	int _0x7C8D6464(int p0);
	void DISABLE_PLANE_AILERON(int p0, int p1, int p2);
	int _0x7DC6D022(int p0);
	void _0xA03E42DF(int p0, int p1);
	void _0x15D40761(int p0, int p1, int p2);
	void _0x1984F88D(int p0, int p1);
	void _0x3FBE904F(int p0);
	void _0xD1B71A25(int p0);
	int _0xFEB0C0C8();
	void _0x08CD58F9(int p0, int p1);
	void _0x8C4B63E2(int p0, int p1);
	void SET_VEHICLE_LOD_MULTIPLIER(int p0, int p1);
	void _0x1604C2F5(int p0, int p1);
	int _0x8CDB0C09(int p0);
	int _0xABC99E21(int p0);
	void _0x900C878C(int p0, int p1);
	void _0xB3200F72(int p0, int p1);
	void _0xBAE491C7(int p0, int p1);
	void _0xF0E59BC1();
	void _0x929801C6(int p0);
	void SET_VEHICLE_SHOOT_AT_TARGET(int p0, int p1, int p2, int p3, int p4);
	int _0x4A557117(int p0, int p1);
	void _0xE0FC6A32(int p0, int p1);
	void _0x7D0DE7EA(int p0, int p1);
	int GET_VEHICLE_PLATE_TYPE(int vehicle);
	void TRACK_VEHICLE_VISIBILITY(int p0);
	int IS_VEHICLE_VISIBLE(int p0);
	void SET_VEHICLE_GRAVITY(int Vehicle, int Toggle);
	void _0xD2B8ACBD(int p0);
	int _0xA4A75FCF(int p0);
	void _0x50F89338(int p0, int p1);
	void _0xEB7D7C27(int p0, int p1);
	int _0x5EB00A6A(int p0);
	void SET_VEHICLE_ENGINE_CAN_DEGRADE(int p0, int p1);
	void _0x5BD8D82D(int p0, int p1, int p2);
	void _0x450AD03A(int p0);
	int _0xBD085DCA(int p0);
	int _0xABBDD5C6(int p0);
	void _0x9B581DE7(int p0, int p1);
	int IS_VEHICLE_STOLEN(int p0);
	void SET_VEHICLE_IS_STOLEN(int vehicle, int isStolen);
	void _0xED159AE6(int p0, int p1);
	int _0xAF8CB3DF(int p0);
	void _0x45F72495(int p0);
	void DETACH_VEHICLE_FROM_CARGOBOB(int p0, int p1);
	int DETACH_VEHICLE_FROM_ANY_CARGOBOB(int p0);
	int IS_VEHICLE_ATTACHED_TO_CARGOBOB(int p0, int p1);
	int GET_VEHICLE_ATTACHED_TO_CARGOBOB(int p0);
	void ATTACH_VEHICLE_TO_CARGOBOB(int entity, int entity2, int instant, float X, float y, float z);
	int _0xAF769B81(int p0);
	void _0x4D3C9A99(int p0);
	void GET_CLOSEST_VEHICLE_TURNING_BLOODSPRAY(int p0);
	void GET_VEHICLE_HAS_BACK_RECURSIVE(int p0, int p1, int p2, int p3);
	int DOES_VEHICLE_HAVE_WEAPONS(int vehicle);
	void _0x2EC19A8B(int p0, int p1);
	void DISABLE_VEHICLE_WEAPON(int p0, int p1, int p2, int p3);
	void _0x123E5B90(int p0, int p1);
	void _0xEBC225C1(int p0, int p1);
	int GET_VEHICLE_CLASS(int vehicle);
	int GET_VEHICLE_CLASS_FROM_NAME(int p0);
	void SET_PLAYERS_LAST_VEHICLE(int vehicle);
	void _0x5130DB1E(int p0, int p1);
	void _0xB6BE07E0(int p0, int p1);
	void _0x4BB5605D(int p0, int p1);
	void _0x51E0064F(int p0, int p1);
	void _0xAEF9611C(int p0, int p1);
	void _0x585E49B6(int p0, int p1);
	void _0x6E67FD35(int p0, int p1);
	void SET_VEHICLE_FRICTION_OVERRIDE(int p0, int p1);
	void SET_VEHICLE_MAX_STR_TRAP(int p0, int p1);
	void GET_VEHICLE_DEFORMATION_GET_TREE(int p0, int p1);
	void _0xBC649C49(int p0, int p1);
	void _0x8DD9AA0C(int p0);
	int DOES_VEHICLE_EXIST_WITH_DECORATOR(int p0);
	void _0xAA8BD440(int p0, int p1);
	void _0x004926A3(int p0, int p1);
	void _0xC195803B(int p0, int p1);
	void _0xB5CC548B(int p0);
	int _0x2B2FCC28(int p0);
	void _0x920C2517(int p0, int p1);
	int _0xB73A1486(int p0);
}

namespace OBJECT
{
	int CREATE_OBJECT(int objectHash, float XCoord, float YCoord, float ZCoord, int p4, int p5, int dynamic);
	int CREATE_OBJECT_NO_OFFSET(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void DELETE_OBJECT(int* object);
	int PLACE_OBJECT_ON_GROUND_PROPERLY(int object);
	int SLIDE_OBJECT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_OBJECT_TARGETTABLE(int object, int targettable);
	void _0x483C5C88(int p0, int p1);
	int GET_CLOSEST_OBJECT_OF_TYPE(float x, float y, float z, float p3, int type, int p5);
	int HAS_OBJECT_BEEN_BROKEN(int p0);
	int HAS_CLOSEST_OBJECT_OF_TYPE_BEEN_BROKEN(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x7DB578DD(int p0, int p1, int p2, int p3, int p4, int p5);
	Vector3 _0x87A42A12(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0x65213FC3(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_STATE_OF_CLOSEST_DOOR_OF_TYPE(int type, float x, float y, float z, int locked, float heading, int p6);
	void GET_STATE_OF_CLOSEST_DOOR_OF_TYPE(int type, float x, float y, float z, int locked, float* heading);
	void _0x4E0A260B(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void ADD_DOOR_TO_SYSTEM(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void REMOVE_DOOR_FROM_SYSTEM(int door);
	void _0xDF83DB47(int p0, float p1, int p2, int p3);
	int _0xD42A41C2(int p0);
	int _0xD649B7E1(int p0);
	void _0x4F44AF21(int p0, int p1, int p2, int p3);
	void _0x47531446(int p0, int p1, int p2, int p3);
	void _0x34883DE3(int p0, int p1, int p2, int p3);
	int _0xB74C3BD7(int p0);
	void _0xB4A9A558(int p0, int p1, int p2, int p3);
	void _0xECE58AE0(int p0, int p1);
	void _0xF736227C(int p0, int p1);
	int _0x5AFCD8A1(int p0);
	int IS_DOOR_CLOSED(int door);
	void _0x9BF33E41(int p0);
	void _0xF592AD10();
	int _0x17FF9393(int p0);
	int _0xE9AE494F(int p0, int p1, int p2, int p3, int p4);
	int IS_GARAGE_EMPTY(int p0, int p1, int p2);
	int _0xC33ED360(int p0, int p1, int p2, int p3);
	int _0x41924877(int p0, int p1, int p2);
	int _0x4BD59750(int p0, int p1, int p2, int p3, int p4);
	int _0x7B44D659(int p0, int p1, int p2, int p3, int p4);
	int _0x142C8F76(int p0, int p1, int p2, int p3);
	int _0x95A9AB2B(int p0, int p1, int p2);
	void _0xA565E27E(int p0, int p1, int p2, int p3, int p4);
	void _0x43BB7E48(int p0, int p1);
	void _0x6158959E();
	int DOES_OBJECT_OF_TYPE_EXIST_AT_COORDS(int p0, int p1, int p2, int p3, int p4, int p5);
	int IS_POINT_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void _0x19B17769(int p0, int p1);
	void SET_OBJECT_PHYSICS_PARAMS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int GET_OBJECT_FRAGMENT_DAMAGE_HEALTH(int p0, int p1);
	void SET_ACTIVATE_OBJECT_PHYSICS_AS_SOON_AS_IT_IS_UNFROZEN(int p0, int p1);
	int IS_ANY_OBJECT_NEAR_POINT(int p0, int p1, int p2, int p3, int p4);
	int IS_OBJECT_NEAR_POINT(int p0, int p1, int p2, int p3, int p4);
	void _0xE3261B35(int p0);
	void _0x1E82C2AE(int p0, int p1, int p2);
	void TRACK_OBJECT_VISIBILITY(int p0);
	int IS_OBJECT_VISIBLE(int p0);
	void _0xF4A1A14A(int p0, int p1);
	void _0xAF016CC1(int p0, int p1);
	void _0x3A68AA46(int p0, int p1);
	int _0xA286DE96(int p0, int p1, int p2, int p3, int p4);
	void _0x21F51560(int p0, int p1);
	int _0xF1B8817A(int p0);
	int _0xE08C834D(int p0);
	int _0x020497DE(int p0);
	int CREATE_PICKUP(int typeHash, float posX, float posY, float posZ, int p4, int amount, int p6, int customModelHash);
	int CREATE_PICKUP_ROTATE(int typeHash, float posX, float posY, float posZ, float rotX, float rotY, float rotZ, int p7, int amount, int p9, int p10, int customModelHash);
	int CREATE_AMBIENT_PICKUP(int AmbientHash, Vector3 pos, int p4, int amount, int modelHash, int p7, int p8);
	int CREATE_PORTABLE_PICKUP(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x56A02502(int p0, int p1, int p2, int p3, int p4, int p5);
	void ATTACH_PORTABLE_PICKUP_TO_PED(int p0, int p1);
	void DETACH_PORTABLE_PICKUP_FROM_PED(int p0);
	void _0x7EFBA039(int p0, int p1);
	void _0xA3CDF152(int p0);
	Vector3 GET_SAFE_PICKUP_COORDS(int X, int Y, int Z, int p3, int p4);
	Vector3 GET_PICKUP_COORDS(int p0);
	void REMOVE_ALL_PICKUPS_OF_TYPE(int p0);
	int HAS_PICKUP_BEEN_COLLECTED(int p0);
	void REMOVE_PICKUP(int p0);
	void CREATE_MONEY_PICKUPS(float* XCoord, float* YCoord, float* ZCoord, int Vaule, int p4, int p5);
	int DOES_PICKUP_EXIST(int p0);
	int DOES_PICKUP_OBJECT_EXIST(int p0);
	int _0x6052E62E(int p0);
	int _0xF139681B(int p0, int p1, int p2, int p3, int p4);
	void SET_PICKUP_REGENERATION_TIME(int p0, int p1);
	void _0x7FADB4B9(int p0, int p1, int p2);
	void _0x3A8F1BF7(int p0, int p1);
	void SET_TEAM_PICKUP_OBJECT(int p0, int p1, int p2);
	void _0xCBB5F9B6(int p0, int p1, int p2);
	void _0x276A7807(int p0, int p1, int p2);
	int _0x000E92DC(int p0);
	void _0x9879AC51(int p0);
	void _0xDB18FA01(int p0);
	void _0xA7E936FD(int p0, int p1);
	void _0xB241806C();
	void _0xD1BAAFB7(int p0);
	void _0x63B02FAD(int p0, int p1, int p2, int p3);
	void _0x132B6D92(int p0, int p1);
	int _0xEDD01937(int p0);
	int _0x6AE36192(int p0);
	void SET_FORCE_OBJECT_THIS_FRAME(int p0, int p1, int p2, int p3);
	void _0x2048A7DD(int p0);
}

namespace AI
{
	void TASK_PAUSE(int p0, int p1);
	void TASK_STAND_STILL(int p0, int p1);
	void TASK_JUMP(int  pedHandle, int p1);
	void TASK_COWER(int  pedHandle, int time);
	void TASK_HANDS_UP(int  pedHandle, int time, int p2, int p3, int p4);
	void _0x3AA39BE9(int p0, int p1);
	void TASK_OPEN_VEHICLE_DOOR(int p0, int p1, int p2, int p3, int p4);
	void TASK_ENTER_VEHICLE(int  pedHandle, int vehicleHandle, int timeout, int seat, float p4, int p5, int p6);
	void TASK_LEAVE_VEHICLE(int  pedHandle, int vehicleHandle, int flags);
	void TASK_SKY_DIVE(int p0);
	void TASK_PARACHUTE(int p0, int p1);
	void TASK_PARACHUTE_TO_TARGET(int p0, int p1, int p2, int p3);
	void SET_PARACHUTE_TASK_TARGET(int p0, int p1, int p2, int p3);
	void SET_PARACHUTE_TASK_THRUST(int p0, int p1);
	void TASK_RAPPEL_FROM_HELI(int p0, int p1);
	void TASK_VEHICLE_DRIVE_TO_COORD(int  pedHandle, int vehicleHandle, float x, float y, float z, float speed, int p6, int vehicleModel, int drivingMode, int p9, int p10);
	void TASK_VEHICLE_DRIVE_TO_COORD_LONGRANGE(int  driver, int vehicle, float x, float y, float z, float speed, int driving_mode, int stop_range);
	void TASK_VEHICLE_DRIVE_WANDER(int  driver, int vehicle, float unk1, int unk2);
	void TASK_FOLLOW_TO_OFFSET_OF_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void TASK_GO_STRAIGHT_TO_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void TASK_GO_STRAIGHT_TO_COORD_RELATIVE_TO_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_ACHIEVE_HEADING(int p0, int p1, int p2);
	void TASK_FLUSH_ROUTE();
	void TASK_EXTEND_ROUTE(int p0, int p1, int p2);
	void TASK_FOLLOW_POINT_ROUTE(int p0, int p1, int p2);
	void TASK_GO_TO_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_SMART_FLEE_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void TASK_SMART_FLEE_PED(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_REACT_AND_FLEE_PED(int p0, int p1);
	void TASK_SHOCKING_EVENT_REACT(int p0, int p1);
	void TASK_WANDER_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_WANDER_STANDARD(int  pedHandle, int p1, int p2);
	void TASK_VEHICLE_PARK(int  pedHandle, int vehicleHandle, float x, float y, float z, float heading, int p6, int p7, int p8);
	void TASK_STEALTH_KILL(int  killer, int  target, int killType, float p3, int p4);
	void TASK_PLANT_BOMB(int p0, float x, float y, float z, float degreeAngle);
	void TASK_FOLLOW_NAV_MESH_TO_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void SET_PED_PATH_CAN_USE_CLIMBOVERS(int  ped, int Toggle);
	void SET_PED_PATH_CAN_USE_LADDERS(int  ped, int Toggle);
	void SET_PED_PATH_CAN_DROP_FROM_HEIGHT(int ped, int Toggle);
	void _0x55E06443(int p0, float p1);
	void SET_PED_PATHS_WIDTH_PLANT(int p0, int p1);
	void SET_PED_PATH_PREFER_TO_AVOID_WATER(int p0, int p1);
	void SET_PED_PATH_AVOID_FIRE(int p0, int p1);
	void _0x2AFB14B8(int p0);
	int GET_NAVMESH_ROUTE_DISTANCE_REMAINING(int p0, int p1, int p2);
	int GET_NAVMESH_ROUTE_RESULT(int p0);
	void TASK_GO_TO_COORD_ANY_MEANS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x094B75EF(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void _0x86DC03F9(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void TASK_PLAY_ANIM(int Handle, char* AnimSet, char* AnimationName, float Speed, float unk, int Loop, int LastAnimation, float PlaybackRate, int xLock, int yLock, int zLock);
	void _0x3DDEB0E6(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14, int p15);
	void STOP_ANIM_TASK(int p0, int p1, int p2, int p3);
	void TASK_SCRIPTED_ANIMATION(int p0, int p1, int p2, int p3, int p4, int p5);
	void PLAY_ENTITY_SCRIPTED_ANIM(int p0, int p1, int p2, int p3, int p4, int p5);
	void STOP_ANIM_PLAYBACK(int p0, int p1, int p2);
	void SET_ANIM_WEIGHT(int p0, int p1, int p2, int p3, int p4);
	void SET_ANIM_RATE(int p0, int p1, int p2, int p3);
	void SET_ANIM_LOOPED(int p0, int p1, int p2, int p3);
	void _0x1582162C(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0x500B6805(int p0);
	int _0x7B72AFD1(int p0);
	int _0xEF8C3959(int p0);
	void TASK_VEHICLE_PLAY_ANIM(int p0, int p1, int p2);
	void TASK_LOOK_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_LOOK_AT_ENTITY(int p0, int p1, int p2, int p3, int p4);
	void TASK_CLEAR_LOOK_AT(int p0);
	void OPEN_SEQUENCE_TASK(int* taskSequence);
	void CLOSE_SEQUENCE_TASK(int taskSequence);
	void TASK_PERFORM_SEQUENCE(int  ped, int taskSequence);
	void CLEAR_SEQUENCE_TASK(int* taskSequence);
	void SET_SEQUENCE_TO_REPEAT(int p0, int p1);
	int GET_SEQUENCE_PROGRESS(int p0);
	int GET_IS_TASK_ACTIVE(int p0, int p1);
	int GET_SCRIPT_TASK_STATUS(int p0, int p1);
	int _0xAFA914EF(int p0);
	void TASK_LEAVE_ANY_VEHICLE(int p0, int p1, int p2);
	void TASK_AIM_GUN_SCRIPTED(int p0, int p1, int p2, int p3);
	void TASK_AIM_GUN_SCRIPTED_WITH_TARGET(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x67E73525(int p0, int p1, float p2, float p3, float p4, int p5);
	int _0x249EB4EB(int p0);
	void TASK_AIM_GUN_AT_ENTITY(int  pedHandle, int entityHandle, int duration, int unknown);
	void TASK_TURN_PED_TO_FACE_ENTITY(int  pedHandle, int entityHandle, int duration);
	void TASK_AIM_GUN_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_SHOOT_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_SHUFFLE_TO_NEXT_VEHICLE_SEAT(int p0, int p1);
	void CLEAR_PED_TASKS(int  pedHandle);
	void CLEAR_PED_SECONDARY_TASK(int  pedHandle);
	void TASK_EVERYONE_LEAVE_VEHICLE(int p0);
	void TASK_GOTO_ENTITY_OFFSET(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_GOTO_ENTITY_OFFSET_XY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void TASK_TURN_PED_TO_FACE_COORD(int p0, int p1, int p2, int p3, int p4);
	void TASK_VEHICLE_TEMP_ACTION(int p0, int p1, int p2, int p3);
	void TASK_VEHICLE_MISSION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void TASK_VEHICLE_MISSION_PED_TARGET(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void TASK_VEHICLE_MISSION_COORS_TARGET(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void TASK_VEHICLE_ESCORT(int  pedHandle, int vehicle, int targetVehicle, int p3, float speed, int p5, float minDistance, int p7, float p8);
	void TASK_VEHICLE_CHASE(int  pedHandle, int  targetEntHandle);
	void TASK_VEHICLE_HELI_PROTECT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x2A83083F(int p0, int p1, int p2);
	void _0x04FD3EE7(int p0, int p1);
	void TASK_HELI_CHASE(int p0, int p1, int p2, int p3, int p4);
	void TASK_PLANE_CHASE(int p0, int p1, float p2, float p3, float p4);
	void TASK_PLANE_LAND(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void TASK_HELI_MISSION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14);
	void TASK_PLANE_MISSION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void TASK_BOAT_MISSION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void TASK_DRIVE_BY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void SET_DRIVEBY_TASK_TARGET(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x9B76F7E6(int  ped);
	int _0xB23F46E6(int  ped);
	int _0x500D9244(int p0);
	void _0x98713C68(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x291E938C(int p0);
	void TASK_USE_MOBILE_PHONE(int p0, int p1);
	void TASK_USE_MOBILE_PHONE_TIMED(int p0, int p1);
	void TASK_CHAT_TO_PED(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void ADD_FOLLOW_NAVMESH_TO_PHONE_TASK(int p0, int p1, int p2, int p3, int p4);
	void TASK_WARP_PED_INTO_VEHICLE(int p0, int p1, int p2);
	void TASK_SHOOT_AT_ENTITY(int p0, int entity, int p2, int p3);
	void TASK_CLIMB(int p0, int p1);
	void TASK_CLIMB_LADDER(int p0, int p1);
	void CLEAR_PED_TASKS_IMMEDIATELY(int Handle);
	void TASK_PERFORM_SEQUENCE_FROM_PROGRESS(int p0, int p1, int p2, int p3);
	void SET_NEXT_DESIRED_MOVE_STATE(int p0);
	void SET_PED_DESIRED_MOVE_BLEND_RATIO(int p0, int p1);
	int GET_PED_DESIRED_MOVE_BLEND_RATIO(int p0);
	void TASK_GOTO_ENTITY_AIMING(int p0, int p1, int p2, int p3);
	void TASK_SET_DECISION_MAKER(int p0, int p1);
	void TASK_SET_SPHERE_DEFENSIVE_AREA(int p0, int p1, int p2, int p3, int p4);
	void TASK_CLEAR_DEFENSIVE_AREA(int p0);
	void TASK_PED_SLIDE_TO_COORD(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_PED_SLIDE_TO_COORD_HDG_RATE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int ADD_COVER_POINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void REMOVE_COVER_POINT(int p0);
	int _IS_COVER_POINT_AT_COORDS(float x, float y, float z);
	Vector3 _0xC6B6CCC1(int p0);
	void TASK_COMBAT_PED(int  pedHandle, int p1, int p2, int p3);
	void TASK_COMBAT_PED_TIMED(int p0, int p1, int p2, int p3);
	void TASK_SEEK_COVER_FROM_POS(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_SEEK_COVER_FROM_PED(int p0, int p1, int p2, int p3);
	void TASK_SEEK_COVER_TO_COVER_POINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_SEEK_COVER_TO_COORDS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void TASK_PUT_PED_DIRECTLY_INTO_COVER(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void TASK_EXIT_COVER(int p0, int p1, int p2, int p3, int p4);
	void TASK_PUT_PED_DIRECTLY_INTO_MELEE(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_TOGGLE_DUCK(int p0, int p1);
	void TASK_GUARD_CURRENT_POSITION(int p0, int p1, int p2, int p3);
	void _0x7AF0133D(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void TASK_GUARD_SPHERE_DEFENSIVE_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void TASK_STAND_GUARD(int p0, int p1, int p2, int p3, int p4, int p5);
	void SET_DRIVE_TASK_CRUISE_SPEED(int p0, int p1);
	void SET_DRIVE_TASK_MAX_CRUISE_SPEED(int p0, int p1);
	void SET_DRIVE_TASK_DRIVING_STYLE(int DRIVER_PED, int DRIVING_STYLE);
	void ADD_COVER_BLOCKING_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void REMOVE_ALL_COVER_BLOCKING_AREAS();
	void TASK_START_SCENARIO_IN_PLACE(int p0, char* p1, int p2, int p3);
	void TASK_START_SCENARIO_AT_POSITION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void TASK_USE_NEAREST_SCENARIO_TO_COORD(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_USE_NEAREST_SCENARIO_TO_COORD_WARP(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_USE_NEAREST_SCENARIO_CHAIN_TO_COORD_WARP(int p0, int p1, int p2, int p3, int p4, int p5);
	int DOES_SCENARIO_EXIST_IN_AREA(int p0, int p1, int p2, int p3, int p4);
	int _0x0FB138A5(int p0, int p1, int p2, int p3, int p4, int p5);
	int IS_SCENARIO_OCCUPIED(int p0, int p1, int p2, int p3, int p4);
	int _0x9BE9C691(int p0);
	void _0x1984A5D1(int p0, int p1, int p2);
	int DOES_SCENARIO_GROUP_EXIST(int p0);
	int IS_SCENARIO_GROUP_ENABLED(int p0);
	void SET_SCENARIO_GROUP_ENABLED(int p0, int p1);
	void _0xBF55025D();
	void SET_EXCLUSIVE_SCENARIO_GROUP(int p0);
	void RESET_EXCLUSIVE_SCENARIO_GROUP();
	int IS_SCENARIO_TYPE_ENABLED(int p0);
	void SET_SCENARIO_TYPE_ENABLED(int p0, int p1);
	void _0xF58FDEB4();
	int IS_PED_ACTIVE_IN_SCENARIO(int p0);
	void TASK_COMBAT_HATED_TARGETS_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	void TASK_COMBAT_HATED_TARGETS_AROUND_PED(int p0, float AreaToAttack, int p2);
	void TASK_COMBAT_HATED_TARGETS_AROUND_PED_TIMED(int p0, int p1, int p2, int p3);
	void TASK_THROW_PROJECTILE(int p0, int p1, int p2, int p3);
	void TASK_SWAP_WEAPON(int p0, int p1);
	void TASK_RELOAD_WEAPON(int p0, int p1);
	int IS_PED_GETTING_UP(int p0);
	void TASK_WRITHE(int p0, int p1, int p2, int p3);
	int IS_PED_IN_WRITHE(int p0);
	void OPEN_PATROL_ROUTE(int p0);
	void CLOSE_PATROL_ROUTE();
	void ADD_PATROL_ROUTE_NODE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void ADD_PATROL_ROUTE_LINK(int p0, int p1);
	void CREATE_PATROL_ROUTE();
	void DELETE_PATROL_ROUTE(int p0);
	void TASK_PATROL(int p0, int p1, int p2, int p3, int p4);
	void TASK_STAY_IN_COVER(int p0);
	void _0x50779A2C(int  ped, float x, float y, float z);
	void ADD_VEHICLE_SUBTASK_ATTACK_PED(int p0, int p1);
	void TASK_VEHICLE_SHOOT_AT_PED(int p0, int p1, int p2);
	void TASK_VEHICLE_AIM_AT_PED(int p0, int p1);
	void TASK_VEHICLE_SHOOT_AT_COORD(int p0, int p1, int p2, int p3, int p4);
	void TASK_VEHICLE_AIM_AT_COORD(int p0, int p1, int p2, int p3);
	void TASK_VEHICLE_GOTO_NAVMESH(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void TASK_GO_TO_COORD_WHILE_AIMING_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14);
	void TASK_GO_TO_COORD_WHILE_AIMING_AT_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void TASK_GO_TO_COORD_AND_AIM_AT_HATED_ENTITIES_NEAR_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14);
	void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void TASK_GO_TO_ENTITY_WHILE_AIMING_AT_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void SET_HIGH_FALL_TASK(int p0, int p1, int p2, int p3);
	void REQUEST_WAYPOINT_RECORDING(int p0);
	int _0x87125F5D(int p0);
	void REMOVE_WAYPOINT_RECORDING(int p0);
	int _0xF5F9B71E(int p0, int p1);
	int _0x19266913(int p0, int p1, int p2);
	int _0xC765633A(int p0, int p1);
	int _0xC4CD35AF(int p0, int p1, int p2, int p3, int p4);
	void TASK_FOLLOW_WAYPOINT_RECORDING(int p0, int p1, int p2, int p3, int p4);
	int IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_PED(int p0);
	int GET_PED_WAYPOINT_PROGRESS(int p0);
	int GET_PED_WAYPOINT_DISTANCE(int p0);
	int SET_PED_WAYPOINT_ROUTE_OFFSET(int p0, int p1, int p2, int p3);
	int _0xE8422AC4(int p0, int p1);
	int WAYPOINT_PLAYBACK_GET_IS_PAUSED(int p0);
	void WAYPOINT_PLAYBACK_PAUSE(int p0, int p1, int p2);
	void WAYPOINT_PLAYBACK_RESUME(int p0, int p1, int p2, int p3);
	void WAYPOINT_PLAYBACK_OVERRIDE_SPEED(int p0, int p1, int p2);
	void WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(int p0);
	void _0x4DFD5FEC(int p0, int p1, int p2, int p3);
	void WAYPOINT_PLAYBACK_START_AIMING_AT_PED(int p0, int p1, int p2);
	void WAYPOINT_PLAYBACK_START_AIMING_AT_COORD(int p0, int p1, int p2, int p3, int p4);
	void WAYPOINT_PLAYBACK_START_SHOOTING_AT_PED(int p0, int p1, int p2, int p3);
	void WAYPOINT_PLAYBACK_START_SHOOTING_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5);
	void WAYPOINT_PLAYBACK_STOP_AIMING_OR_SHOOTING(int p0);
	void ASSISTED_MOVEMENT_REQUEST_ROUTE(char* route);
	void ASSISTED_MOVEMENT_REMOVE_ROUTE(int p0);
	int _0x79B067AF(int p0);
	void _0x01CAAFCC(int p0, int p1);
	void _0x8FB923EC(int p0);
	void TASK_VEHICLE_FOLLOW_WAYPOINT_RECORDING(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int IS_WAYPOINT_PLAYBACK_GOING_ON_FOR_VEHICLE(int p0);
	int GET_VEHICLE_WAYPOINT_PROGRESS(int p0);
	int GET_VEHICLE_WAYPOINT_TARGET_POINT(int p0);
	void VEHICLE_WAYPOINT_PLAYBACK_PAUSE(int p0);
	void VEHICLE_WAYPOINT_PLAYBACK_RESUME(int p0);
	void VEHICLE_WAYPOINT_PLAYBACK_USE_DEFAULT_SPEED(int p0);
	void VEHICLE_WAYPOINT_PLAYBACK_OVERRIDE_SPEED(int p0, int p1);
	void TASK_SET_BLOCKING_OF_NON_TEMPORARY_EVENTS(int p0, int p1);
	void TASK_FORCE_MOTION_STATE(int p0, int p1, int p2);
	void _0x6F5D215F(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x71A5C5DB(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int _0x902656EB(int p0);
	int _0x92FDBAE6(int p0);
	int _0x885724DE(int p0, int p1);
	int _0x96C0277B(int p0);
	void _0xA79BE783(int p0, int p1, int p2);
	void _0xF3538041(int p0, int p1, int p2);
	int _0x1EBB6F3D(int p0, int p1);
	int _0x72FA5EF2(int p0, int p1);
	int _0xE9DAF877(int p0);
	int _0xD21639A8(int p0);
	int _0xE76A2353(int p0);
	int _0xDD616893(int p0);
	int IS_PED_STILL(int p0);
	int IS_PED_WALKING(int p0);
	int IS_PED_RUNNING(int p0);
	int IS_PED_SPRINTING(int p0);
	int IS_PED_STRAFING(int p0);
	void TASK_SYNCHRONIZED_SCENE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0x4D210467(int  ped, char* anim, char* p2, char* p3, char* p4, int p5, int vehicle, int p7, int p8);
	void _0xF65F0F4F(int  ped, int vehicle);
	void _0x1683FE66(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void _0x6345EC80(int p0, int p1, int p2, int p3);
	void TASK_ARREST_PED(int p0, int p1);
	int IS_PED_RUNNING_ARREST_TASK(int p0);
	int IS_PED_BEING_ARRESTED(int p0);
	void UNCUFF_PED(int p0);
	int IS_PED_CUFFED(int p0);
}

namespace GAMEPLAY
{
	int GET_ALLOCATED_STACK_SIZE();
	int _SET_ALLOCATED_STACK_SIZE(int StackSize);
	void SET_RANDOM_SEED(int p0);
	void SET_TIME_SCALE(float Time);
	void SET_MISSION_FLAG(int p0);
	int GET_MISSION_FLAG();
	void SET_RANDOM_EVENT_FLAG(int p0);
	int GET_RANDOM_EVENT_FLAG();
	void _0x8B2DE971(int p0);
	void _0xE77199F7(int p0);
	int _0xA8171E9E();
	int _0x353E8056();
	int IS_PREV_WEATHER_TYPE(int p0);
	int IS_NEXT_WEATHER_TYPE(int p0);
	void SET_WEATHER_TYPE_PERSIST(char* WeatherType);
	void SET_WEATHER_TYPE_NOW_PERSIST(char* WeatherType);
	void SET_WEATHER_TYPE_NOW(char* WeatherType);
	void _SET_WEATHER_TYPE_OVER_TIME(char* WeatherType, float Time);
	void SET_RANDOM_WEATHER_TYPE();
	void CLEAR_WEATHER_TYPE_PERSIST();
	void _0x9A5C1D56(int p0, int p1, int p2);
	void _0x5CA74040(int p0, int p1, int p2);
	void SET_OVERRIDE_WEATHER(char* WeatherType);
	void CLEAR_OVERRIDE_WEATHER();
	void _0x625181DC(int p0);
	void _0xBEBBFDC8(int p0);
	void _0x6926AB03(int p0);
	void _0xD447439D(int p0);
	void _0x584E9C59(int p0);
	void _0x5656D578(int p0);
	void _0x0DE40C28(int p0);
	void _0x98C9138B(int p0);
	void _0xFB1A9CDE(int p0);
	void _0x1C0CAE89(int p0);
	void _0x4671AC2E(int p0);
	void _0xDA02F415(int p0);
	void _0x5F3DDEC0(int p0);
	void _0x63A89684(int p0);
	void SET_WIND(int p0);
	void SET_WIND_SPEED(float Speed);
	int GET_WIND_SPEED();
	void SET_WIND_DIRECTION(int p0);
	Vector3 GET_WIND_DIRECTION();
	int GET_RAIN_LEVEL();
	int GET_SNOW_LEVEL();
	void _0xDF38165E();
	void _0x8727A4C5(int p0);
	void _0x96B2FD08(int p0);
	void _0xED88FC61(char* p0, int p1);
	void _0xC9FA6E07(int p0, int p1);
	void _0x2D7787BC();
	int GET_GAME_TIMER();
	float* GET_FRAME_TIME();
	float* GET_FRAME_COUNT();
	float GET_RANDOM_FLOAT_IN_RANGE(float p0, float p1);
	int GET_RANDOM_INT_IN_RANGE(int StartRange, int EndRange);
	int GET_GROUND_Z_FOR_3D_COORD(float x, float y, float z, float* groundZ);
	int _0x64D91CED(int p0, int p1, int p2, int p3, int p4);
	int ASIN(int p0);
	int ACOS(int p0);
	int TAN(int p0);
	int ATAN(int p0);
	int ATAN2(int p0, int p1);
	int GET_DISTANCE_BETWEEN_COORDS(float x1, float y1, float z1, float x2, float y2, float z2, int unknown);
	int GET_ANGLE_BETWEEN_2D_VECTORS(int p0, int p1, int p2, int p3);
	int GET_HEADING_FROM_VECTOR_2D(int p0, int p1);
	int _0x89459F0A(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	Vector3 _0xCAECF37E(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int _0xC6CC812C(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void SET_BIT(int* var, int bit);
	void CLEAR_BIT(int* var, int bit);
	int GET_HASH_KEY(char* ToHash);
	void _0x87B92190(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int IS_AREA_OCCUPIED(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int IS_POSITION_OCCUPIED(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	int IS_POINT_OBSCURED_BY_A_MISSION_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void CLEAR_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x20E4FFD9(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void CLEAR_AREA_OF_VEHICLES(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void CLEAR_ANGLED_AREA_OF_VEHICLES(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void CLEAR_AREA_OF_OBJECTS(int p0, int p1, int p2, int p3, int p4);
	void CLEAR_AREA_OF_PEDS(float* XCoord, float* YCoord, float* zCoord, float Area, int p4);
	void CLEAR_AREA_OF_COPS(int p0, int p1, int p2, int p3, int p4);
	void CLEAR_AREA_OF_PROJECTILES(int p0, int p1, int p2, int p3, int p4);
	void SET_SAVE_MENU_ACTIVE(int p0);
	int _0x39771F21();
	void SET_CREDITS_ACTIVE(int p0);
	void _0x75B06B5A(int p0);
	int _0x2569C9A7();
	void TERMINATE_ALL_SCRIPTS_WITH_THIS_NAME(char* ScriptName);
	void NETWORK_SET_SCRIPT_IS_SAFE_FOR_NETWORK_GAME();
	int ADD_HOSPITAL_RESTART(int p0, int p1, int p2, int p3, int p4);
	void DISABLE_HOSPITAL_RESTART(int p0, int p1);
	int ADD_POLICE_RESTART(int p0, int p1, int p2, int p3, int p4);
	void DISABLE_POLICE_RESTART(int p0, int p1);
	void _0x296574AE(int p0);
	void IGNORE_NEXT_RESTART(int p0);
	void _0xC9F6F0BC(int p0);
	void _0xCB074B9D(int p0);
	void SET_FADE_IN_AFTER_DEATH_ARREST(int p0);
	void SET_FADE_IN_AFTER_LOAD(int p0);
	int REGISTER_SAVE_HOUSE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_SAVE_HOUSE(int p0, int p1, int p2);
	int OVERRIDE_SAVE_HOUSE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0xC4D71AB4(int p0, int p1, int p2, int p3);
	void DO_AUTO_SAVE();
	int _0xA8546914();
	int IS_AUTO_SAVE_IN_PROGRESS();
	int _0x78350773();
	void _0x5A45B11A();
	void BEGIN_REPLAY_STATS(int p0, int p1);
	void _0x81216EE0(int p0);
	void END_REPLAY_STATS();
	int _0xC58250F1();
	int _0x50C39926();
	int _0x710E5D1E();
	int _0xC7BD1AF0();
	int _0x22BE2423(int p0);
	void CLEAR_REPLAY_STATS();
	int _0xF62B3C48();
	int _0x3589452B();
	int _0x144AAF22();
	int IS_MEMORY_CARD_IN_USE();
	void SHOOT_SINGLE_BULLET_BETWEEN_COORDS(float* StartPositionX, float* StartPositionY, float* StartPositionZ, float* HitPositionX, float* HitPositionY, float* HitPositionZ, int p6, int p7, int WeaponHash, int Handle, int p10, int p11, float Speed);
	void _0x52ACCB7B(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void GET_MODEL_DIMENSIONS(int entity, float* Minimum, float* Maximum);
	void SET_FAKE_WANTED_LEVEL(int p0);
	int _0x0022A430();
	int IS_BIT_SET(int var, int bit);
	void USING_MISSION_CREATOR(int p0);
	void _0x082BA6F2(int p0);
	void SET_MINIGAME_IN_PROGRESS(int p0);
	int IS_MINIGAME_IN_PROGRESS();
	int IS_THIS_A_MINIGAME_SCRIPT();
	int IS_SNIPER_INVERTED();
	int GET_CURRENT_LANGUAGE();
	int _0xBAF17315();
	int GET_PROFILE_SETTING(int p0);
	int ARE_STRINGS_EQUAL(char* string1, char* string2);
	int COMPARE_STRINGS(int p0, int p1, int p2, int p3);
	int ABSI(int p0);
	int ABSF(int p0);
	int IS_SNIPER_BULLET_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	int IS_PROJECTILE_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int IS_PROJECTILE_TYPE_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int IS_PROJECTILE_TYPE_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0xBE81F1E2(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x1A40454B(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0x6BDE5CE4(int p0, int p1, int p2, int p3, int p4);
	int _0x507BC6F7(int p0, int p1, int p2, int p3, int p4, int p5);
	int IS_BULLET_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int IS_BULLET_IN_AREA(int p0, int p1, int p2, int p3, int p4);
	int IS_BULLET_IN_BOX(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int HAS_BULLET_IMPACTED_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	int HAS_BULLET_IMPACTED_IN_BOX(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int IS_ORBIS_VERSION();
	int IS_DURANGO_VERSION();
	int IS_XBOX360_VERSION();
	int IS_PS3_VERSION();
	int IS_PC_VERSION();
	int IS_AUSSIE_VERSION();
	int IS_STRING_NULL(int p0);
	int IS_STRING_NULL_OR_EMPTY(int p0);
	int STRING_TO_INT(char* string, int* ToStore);
	void SET_BITS_IN_RANGE(int p0, int p1, int p2, int p3);
	int GET_BITS_IN_RANGE(int p0, int p1, int p2);
	int ADD_STUNT_JUMP(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14, int p15, int p16);
	int ADD_STUNT_JUMP_ANGLED(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14, int p15, int p16, int p17, int p18);
	void DELETE_STUNT_JUMP(int p0);
	void ENABLE_STUNT_JUMP_SET(int p0);
	void DISABLE_STUNT_JUMP_SET(int p0);
	void _0x3C806A2D(int p0);
	int IS_STUNT_JUMP_IN_PROGRESS();
	int _0x021636EE();
	int _0x006F9BA2();
	void CANCEL_STUNT_JUMP();
	void SET_GAME_PAUSED(int Paused);
	void SET_THIS_SCRIPT_CAN_BE_PAUSED(int p0);
	void SET_THIS_SCRIPT_CAN_REMOVE_BLIPS_CREATED_BY_ANY_SCRIPT(int p0);
	int _0xFF6191E1(int p0, int p1);
	void _0x721B2492(int p0);
	void _0xE202879D(int p0);
	int IS_FRONTEND_FADING();
	void POPULATE_NOW();
	int GET_INDEX_OF_CURRENT_LEVEL();
	void SET_GRAVITY_LEVEL(int p0);
	void START_SAVE_DATA(int p0, int p1, int p2);
	void STOP_SAVE_DATA();
	int _0x9EF0BC64(int p0);
	void REGISTER_INT_TO_SAVE(int p0, int p1);
	void _0x9B38374A(int p0, int p1);
	void REGISTER_FLOAT_TO_SAVE(int p0, int p1);
	void REGISTER_BOOL_TO_SAVE(int p0, int p1);
	void REGISTER_TEXT_LABEL_TO_SAVE(int p0, int p1);
	void _0xE2089749(int p0, int p1);
	void _0xF91B8C33(int p0, int p1);
	void _0x74E8FAD9(int p0, int p1);
	void _0x6B4335DD(int p0, int p1);
	void _0xFB45728E(int p0, int p1, int p2);
	void STOP_SAVE_STRUCT();
	void _0x893A342C(int p0, int p1, int p2);
	void STOP_SAVE_ARRAY();
	void _0x0B710A51(int p0, int p1);
	void _0xE0F0684F(int p0, int p1);
	int _0x3CE5BF6B(int p0);
	int CREATE_INCIDENT(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int CREATE_INCIDENT_WITH_ENTITY(int p0, int p1, int p2, int p3, int p4);
	void DELETE_INCIDENT(int p0);
	int IS_INCIDENT_VALID(int p0);
	void _0x0242D88E(int p0, int p1, int p2);
	void _0x1F38102E(int p0, int p1);
	int FIND_SPAWN_POINT_IN_DIRECTION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0x42BF09B3(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0xFBDBE374(int p0, int p1);
	void ENABLE_TENNIS_MODE(int p0, int p1, int p2);
	int IS_TENNIS_MODE(int p0);
	void _0xC20A7D2B(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x8501E727(int p0);
	int _0x1A332D2D(int p0);
	void _0x0C8865DF(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x49F977A9(int p0, int p1, int p2);
	void _0x6F009E33(int p0, int p1, int p2);
	void RESET_DISPATCH_IDEAL_SPAWN_DISTANCE();
	void SET_DISPATCH_IDEAL_SPAWN_DISTANCE(int p0);
	void RESET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(int p0);
	void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS(int p0, int p1);
	void SET_DISPATCH_TIME_BETWEEN_SPAWN_ATTEMPTS_MULTIPLIER(int p0, int p1);
	int _0xF557BAF9(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void REMOVE_DISPATCH_SPAWN_BLOCKING_AREA(int p0);
	void RESET_DISPATCH_SPAWN_BLOCKING_AREAS();
	void _0xE0C9307E();
	void _0xA0D8C749(int p0, int p1);
	void _0x24A4E0B2(int p0, int p1, int p2);
	void _0x66C3C59C();
	void _0xD9660339(int p0);
	void _0xD2688412(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void DISPLAY_ONSCREEN_KEYBOARD(int p0, char* windowTitle, char* p2, char* defaultText, char* defaultConcat1, char* defaultConcat2, char* defaultConcat3, int maxInputLength);
	int UPDATE_ONSCREEN_KEYBOARD();
	char* GET_ONSCREEN_KEYBOARD_RESULT();
	void _0x3301EA47(int p0);
	void _0x42B484ED(int p0, int p1);
	void _0x8F60366E(int p0, int p1);
	void SET_EXPLOSIVE_AMMO_THIS_FRAME(int player);
	void SET_FIRE_AMMO_THIS_FRAME(int player);
	void SET_EXPLOSIVE_MELEE_THIS_FRAME(int player);
	void SET_SUPER_JUMP_THIS_FRAME(int player);
	int _0xC3C10FCC();
	void _0x054EC103();
	int _0x46B5A15C();
	void _0x5D209F25();
	void _0x2D33F15A(int p0, int p1, int p2, int p3);
	void _0xDF99925C();
	void _0xA27F4472(int p0, int p1, int p2, int p3);
	int _0x07FF553F(int p0, int p1, int p2);
}

namespace AUDIO
{
	void PLAY_PED_RINGTONE(int p0, int p1, int p2);
	int IS_PED_RINGTONE_PLAYING(int p0);
	void STOP_PED_RINGTONE(int p0);
	int IS_MOBILE_PHONE_CALL_ONGOING();
	int _0x16FB88B5();
	void CREATE_NEW_SCRIPTED_CONVERSATION();
	void ADD_LINE_TO_CONVERSATION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void ADD_PED_TO_CONVERSATION(int p0, int p1, int p2);
	void _0x73C6F979(int p0, int p1, int p2, int p3);
	void _0x88203DDA(int p0, int p1);
	void SET_MICROPHONE_POSITION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0x1193ED6E(int p0);
	void START_SCRIPT_PHONE_CONVERSATION(int p0, int p1);
	void PRELOAD_SCRIPT_PHONE_CONVERSATION(int p0, int p1);
	void START_SCRIPT_CONVERSATION(int p0, int p1, int p2, int p3);
	void PRELOAD_SCRIPT_CONVERSATION(int p0, int p1, int p2, int p3);
	void START_PRELOADED_CONVERSATION();
	int _0x336F3D35();
	int IS_SCRIPTED_CONVERSATION_ONGOING();
	int IS_SCRIPTED_CONVERSATION_LOADED();
	int GET_CURRENT_SCRIPTED_CONVERSATION_LINE();
	void PAUSE_SCRIPTED_CONVERSATION(int p0);
	void RESTART_SCRIPTED_CONVERSATION();
	int STOP_SCRIPTED_CONVERSATION(int p0);
	void SKIP_TO_NEXT_SCRIPTED_CONVERSATION_LINE();
	void INTERRUPT_CONVERSATION(int p0, int p1, int p2);
	int _0xB58B8FF3(int p0);
	void _0x789D8C6C(int p0);
	void REGISTER_SCRIPT_WITH_AUDIO(int p0);
	void UNREGISTER_SCRIPT_WITH_AUDIO();
	int REQUEST_MISSION_AUDIO_BANK(int p0, int p1);
	int REQUEST_AMBIENT_AUDIO_BANK(int p0, int p1);
	int REQUEST_SCRIPT_AUDIO_BANK(int p0, int p1);
	int HINT_AMBIENT_AUDIO_BANK(int p0, int p1);
	int HINT_SCRIPT_AUDIO_BANK(int p0, int p1);
	void RELEASE_MISSION_AUDIO_BANK();
	void RELEASE_AMBIENT_AUDIO_BANK();
	void RELEASE_NAMED_SCRIPT_AUDIO_BANK(int p0);
	void RELEASE_SCRIPT_AUDIO_BANK();
	void _0xA58BBF4F();
	int GET_SOUND_ID();
	void RELEASE_SOUND_ID(int p0);
	void PLAY_SOUND(int p0, int p1, int p2, int p3, int p4);
	void PLAY_SOUND_FRONTEND(int p0, char* SoundFrom, char* SoundSet);
	void _0xC70E6CFA(int p0, int p1);
	void PLAY_SOUND_FROM_ENTITY(int p0, char* p1, int entity, char* p3, int p4, int p5);
	void PLAY_SOUND_FROM_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void STOP_SOUND(int p0);
	int GET_NETWORK_ID_FROM_SOUND_ID(int p0);
	int _0xD064D4DC(int p0);
	void SET_VARIABLE_ON_SOUND(int p0, int p1, int p2);
	void SET_VARIABLE_ON_STREAM(int p0, int p1);
	void OVERRIDE_UNDERWATER_STREAM(int p0, int p1);
	void _0x62D026BE(int p0, int p1);
	int HAS_SOUND_FINISHED(int p0);
	void _PLAY_AMBIENT_SPEECH1(int  pedHandle, char* speechName, char* speechParam);
	void _PLAY_AMBIENT_SPEECH2(int  pedHandle, char* speechName, char* speechParam);
	void _0x8386AE28(int p0, int p1, int p2, int p3, int p4);
	void _0xA1A1402E(int p0, int p1, int p2, int p3, int p4, int p5);
	void OVERRIDE_TREVOR_RAGE(int p0);
	void RESET_TREVOR_RAGE();
	void SET_PLAYER_ANGRY(int p0, int p1);
	void PLAY_PAIN(int p0, int p1, int p2);
	void RELEASE_WEAPON_AUDIO();
	void _0x59A3A17D(int p0);
	void _0x0E387BFE(int p0);
	void SET_AMBIENT_VOICE_NAME(int p0, char* p1);
	void STOP_CURRENT_PLAYING_AMBIENT_SPEECH(int p0);
	int IS_AMBIENT_SPEECH_PLAYING(int p0);
	int IS_SCRIPTED_SPEECH_PLAYING(int p0);
	int IS_ANY_SPEECH_PLAYING(int p0);
	int _0x8BD5F11E(int p0, int p1, int p2);
	int IS_PED_IN_CURRENT_CONVERSATION(int p0);
	void SET_PED_IS_DRUNK(int p0, int p1);
	void _0x498849F3(int p0, int p1, int p2);
	int _0x0CBAF2EF(int p0);
	void SET_ANIMAL_MOOD(int p0, int p1);
	int IS_MOBILE_PHONE_RADIO_ACTIVE();
	void SET_MOBILE_PHONE_RADIO_STATE(int p0);
	int GET_PLAYER_RADIO_STATION_INDEX();
	int GET_PLAYER_RADIO_STATION_NAME();
	int GET_RADIO_STATION_NAME(int radioStation);
	int GET_PLAYER_RADIO_STATION_GENRE();
	int IS_RADIO_RETUNING();
	void _0x53DB6994();
	void _0xD70ECC80();
	void SET_RADIO_TO_STATION_NAME(char* radioStation);
	void SET_VEH_RADIO_STATION(int hVehicle, char* radioStation);
	void _0x7ABB89D2(int p0);
	void SET_EMITTER_RADIO_STATION(int p0, int p1);
	void SET_STATIC_EMITTER_ENABLED(int p0, int p1);
	void SET_RADIO_TO_STATION_INDEX(int p0);
	void SET_FRONTEND_RADIO_ACTIVE(int p0);
	void UNLOCK_MISSION_NEWS_STORY(int p0);
	int GET_NUMBER_OF_PASSENGER_VOICE_VARIATIONS(int p0);
	int GET_AUDIBLE_MUSIC_TRACK_TEXT_ID();
	void PLAY_END_CREDITS_MUSIC(int p0);
	void SKIP_RADIO_FORWARD();
	void FREEZE_RADIO_STATION(int p0);
	void UNFREEZE_RADIO_STATION(int p0);
	void SET_RADIO_AUTO_UNFREEZE(int p0);
	void SET_INITIAL_PLAYER_STATION(int p0);
	void SET_USER_RADIO_CONTROL_ENABLED(int p0);
	void SET_RADIO_TRACK(int p0, int p1);
	void SET_VEHICLE_RADIO_LOUD(int p0, int p1);
	int _0xCBA99F4A(int p0);
	void SET_MOBILE_RADIO_ENABLED_DURING_GAMEPLAY(int Toggle);
	int _0x46B0C696();
	int _0x2A3E5E8B();
	void SET_VEHICLE_RADIO_ENABLED(int p0, int p1);
	void _0x128C3873(int p0, int p1, int p2);
	void _0x1D766976(int p0);
	int _0xCC91FCF5();
	int FIND_RADIO_STATION_INDEX(int p0);
	void _0xB1FF7137(int p0, int p1);
	void _0xC8B514E2(int p0);
	void _0xBE998184(int p0, int p1);
	void _0x8AFC488D(int p0, int p1);
	void SET_AMBIENT_ZONE_STATE(int p0, int p1, int p2);
	void CLEAR_AMBIENT_ZONE_STATE(int p0, int p1);
	void SET_AMBIENT_ZONE_LIST_STATE(int p0, int p1, int p2);
	void CLEAR_AMBIENT_ZONE_LIST_STATE(int p0, int p1);
	void SET_AMBIENT_ZONE_STATE_PERSISTENT(int p0, int p1, int p2);
	void SET_AMBIENT_ZONE_LIST_STATE_PERSISTENT(int p0, int p1, int p2);
	int IS_AMBIENT_ZONE_ENABLED(int p0);
	void SET_CUTSCENE_AUDIO_OVERRIDE(int p0);
	void GET_PLAYER_HEADSET_SOUND_ALTERNATE(int p0, int p1);
	int PLAY_POLICE_REPORT(char* p0, float p1);
	void BLIP_SIREN(int p0);
	void OVERRIDE_VEH_HORN(int p0, int p1, int p2);
	int IS_HORN_ACTIVE(int p0);
	void SET_AGGRESSIVE_HORNS(int p0);
	void _0x3C395AEE(int p0);
	void _0x8CE63FA1(int p0, int p1);
	int IS_STREAM_PLAYING();
	int GET_STREAM_PLAY_TIME();
	int LOAD_STREAM(int p0, int p1);
	int LOAD_STREAM_WITH_START_OFFSET(int p0, int p1, int p2);
	void _0xA1D7FABE(int p0);
	void PLAY_STREAM_FROM_VEHICLE(int p0);
	void PLAY_STREAM_FROM_OBJECT(int p0);
	void PLAY_STREAM_FRONTEND();
	void SPECIAL_FRONTEND_EQUAL(int p0, int p1, int p2);
	void STOP_STREAM();
	void STOP_PED_SPEAKING(int p0, int p1);
	void DISABLE_PED_PAIN_AUDIO(int p0, int p1);
	int IS_AMBIENT_SPEECH_DISABLED(int p0);
	void SET_SIREN_WITH_NO_DRIVER(int p0, int p1);
	void _0xDE8BA3CD(int p0);
	void SET_HORN_ENABLED(int p0, int p1);
	void SET_AUDIO_VEHICLE_PRIORITY(int p0, int p1);
	void _0x2F0A16D1(int p0, int p1);
	void USE_SIREN_AS_HORN(int p0, int p1);
	void _0x33B0B007(int p0, int p1);
	void _0x1C0C5E4C(int p0, int p1, int p2);
	int _0x6E660D3F(int p0);
	void _0x23BE6432(int p0, int p1);
	void _0xE81FAC68(int p0, int p1);
	void _0x9365E042(int p0, int p1);
	void _0x2A60A90E(int p0, int p1);
	void SET_VEHICLE_BOOST_ACTIVE(int vehicle, int Toggle);
	void _0x934BE749(int p0, int p1);
	void _0xE61110A2(int p0, int p1);
	void PLAY_VEHICLE_DOOR_OPEN_SOUND(int p0, int p1);
	void PLAY_VEHICLE_DOOR_CLOSE_SOUND(int p0, int p1);
	void _0x563B635D(int p0, int p1);
	int IS_GAME_IN_CONTROL_OF_MUSIC();
	void SET_GPS_ACTIVE(int p0);
	void PLAY_MISSION_COMPLETE_AUDIO(char* p0);
	int IS_MISSION_COMPLETE_PLAYING();
	int _0xCBE09AEC();
	void _0xD2858D8A(int p0);
	int START_AUDIO_SCENE(int p0);
	void STOP_AUDIO_SCENE(int p0);
	void STOP_AUDIO_SCENES();
	int IS_AUDIO_SCENE_ACTIVE(int p0);
	void SET_AUDIO_SCENE_VARIABLE(int p0, int p1, int p2);
	void _0xE812925D(int p0);
	void _0x2BC93264(int p0, int p1, int p2);
	void _0x308ED0EC(int p0, int p1);
	int AUDIO_IS_SCRIPTED_MUSIC_PLAYING();
	int PREPARE_MUSIC_EVENT(int p0);
	int CANCEL_MUSIC_EVENT(int p0);
	int TRIGGER_MUSIC_EVENT(int p0);
	int _0x2705C4D5();
	int GET_MUSIC_PLAYTIME();
	void _0x53FC3FEC(int p0, int p1, int p2, int p3);
	void CLEAR_ALL_BROKEN_GLASS();
	void _0x95050CAD(int p0, int p1);
	void _0xE64F97A0(int p0, int p1);
	void _0xD87AF337();
	int PREPARE_ALARM(int p0);
	void START_ALARM(int p0, int p1);
	void STOP_ALARM(int p0, int p1);
	void STOP_ALL_ALARMS(int p0);
	int IS_ALARM_PLAYING(int p0);
	int GET_VEHICLE_DEFAULT_HORN(int p0);
	int _0xFD4B5B3B(int p0);
	void RESET_PED_AUDIO_FLAGS(int p0);
	void _0xC307D531(int p0, int p1);
	void _0x13EB5861(int p0);
	void _0x7BED1872(int p0, int p1);
	void SET_AUDIO_FLAG(int p0, int p1);
	int PREPARE_SYNCHRONIZED_AUDIO_EVENT(int p0, int p1);
	int PREPARE_SYNCHRONIZED_AUDIO_EVENT_FOR_SCENE(int p0, int p1);
	int PLAY_SYNCHRONIZED_AUDIO_EVENT(int p0);
	int STOP_SYNCHRONIZED_AUDIO_EVENT(int p0);
	void _0x55A21772(int p0, int p1, int p2, int p3);
	void _0xA17F9AB0(int p0, int p1);
	void _0x62B43677(int p0);
	void _0x8AD670EC(int p0, int p1);
	void _0xD24B4D0C(int p0);
	void _0x7262B5BA();
	int _0x93A44A1F();
	void _0x13777A0B(int p0);
	void _0x1134F68B();
	void _0xE0047BFD(int p0);
}

namespace CUTSCENE
{
	void REQUEST_CUTSCENE(char* CutsceneName, int p1);
	void _0xD98F656A(int p0, int p1, int p2);
	void REMOVE_CUTSCENE();
	int HAS_CUTSCENE_LOADED();
	int HAS_THIS_CUTSCENE_LOADED(int p0);
	void _0x25A2CABC(int p0);
	int _0xDD8878E9();
	int _0x7B93CDAA(int p0);
	void _0x47DB08A9(int p0, int p1, int p2);
	void START_CUTSCENE(int p0);
	void START_CUTSCENE_AT_COORDS(int p0, int p1, int p2, int p3);
	void STOP_CUTSCENE(int p0);
	void STOP_CUTSCENE_IMMEDIATELY();
	void SET_CUTSCENE_ORIGIN(int p0, int p1, int p2, int p3, int p4);
	int GET_CUTSCENE_TIME();
	int GET_CUTSCENE_TOTAL_DURATION();
	int WAS_CUTSCENE_SKIPPED();
	int HAS_CUTSCENE_FINISHED();
	int IS_CUTSCENE_ACTIVE();
	int IS_CUTSCENE_PLAYING();
	int GET_CUTSCENE_SECTION_PLAYING();
	int GET_ENTITY_INDEX_OF_CUTSCENE_ENTITY(int p0, int p1);
	int _0x5AE68AE6();
	void REGISTER_ENTITY_FOR_CUTSCENE(int p0, int p1, int p2, int p3, int p4);
	int GET_ENTITY_INDEX_OF_REGISTERED_ENTITY(int p0, int p1);
	void SET_CUTSCENE_TRIGGER_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	int CAN_SET_ENTER_STATE_FOR_REGISTERED_ENTITY(int p0, int p1);
	int CAN_SET_EXIT_STATE_FOR_REGISTERED_ENTITY(int p0, int p1);
	int CAN_SET_EXIT_STATE_FOR_CAMERA(int p0);
	void _0x35721A08(int p0);
	void SET_CUTSCENE_FADE_VALUES(int p0, int p1, int p2, int p3);
	void _0x8338DA1D(int p0);
	void _0x04377C10(int p0);
	int _0xDBD88708();
	void _0x28D54A7F(int p0);
	void REGISTER_SYNCHRONISED_SCRIPT_SPEECH();
	void SET_CUTSCENE_PED_COMPONENT_VARIATION(int p0, int p1, int p2, int p3, int p4);
	void _0x1E7DA95E(int p0, int p1, int p2);
	int DOES_CUTSCENE_ENTITY_EXIST(int p0, int p1);
	void _0x22E9A9DE(int p0, int p1, int p2, int p3, int p4);
	int _0x4315A7C5();
}

namespace INTERIOR
{
	int GET_INTERIOR_GROUP_ID(int p0);
	Vector3 GET_OFFSET_FROM_INTERIOR_IN_WORLD_COORDS(int p0, int p1, int p2, int p3);
	int IS_INTERIOR_SCENE();
	int IS_VALID_INTERIOR(int p0);
	void CLEAR_ROOM_FOR_ENTITY(int p0);
	void FORCE_ROOM_FOR_ENTITY(int p0, int p1, int p2);
	int GET_ROOM_KEY_FROM_ENTITY(int p0);
	int GET_KEY_FOR_ENTITY_IN_ROOM(int p0);
	int GET_INTERIOR_FROM_ENTITY(int p0);
	void _0xE645E162(int p0, int p1);
	void _0xD79803B5(int p0, int p1);
	void _0x1F6B4B13(int p0);
	void _0x0E9529CC(int p0);
	int _0x4FF3D3F5();
	void _0x617DC75D();
	int GET_INTERIOR_AT_COORDS(int p0, int p1, int p2);
	void ADD_PICKUP_TO_INTERIOR_ROOM_BY_NAME(int p0, int p1);
	void _0x3ADA414E(int p0);
	void UNPIN_INTERIOR(int p0);
	int IS_INTERIOR_READY(int p0);
	int _0x96525B06(float x, float y, float z, char* interior);
	int _0x7762249C(int p0, int p1, int p2);
	int GET_INTERIOR_FROM_COLLISION(int p0, int p1, int p2);
	void _0xC80A5DDF(int p0, int p1);
	void _0xDBA768A1(int p0, int p1);
	int _0x39A3CC6F(int p0, int p1);
	void REFRESH_INTERIOR(int p0);
	void _0x1F375B4C(int p0);
	void DISABLE_INTERIOR(int p0, int p1);
	int IS_INTERIOR_DISABLED(int p0);
	void CAP_INTERIOR(int p0, int p1);
	int IS_INTERIOR_CAPPED(int p0);
	void _0x5EF9C5C2(int p0);
}

namespace CAM
{
	void RENDER_SCRIPT_CAMS(int p0, int p1, int p2, int p3, int p4);
	void _0xD3C08183(int p0, int p1, int p2);
	int CREATE_CAM(char* camName, int p1);
	int CREATE_CAM_WITH_PARAMS(char* camName, float* posX, float* posY, float* posZ, float* rotX, float* rotY, float* rotZ, float fov, int p8, int p9);
	int CREATE_CAMERA(int p0, int p1);
	int CREATE_CAMERA_WITH_PARAMS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void DESTROY_CAM(int p0, int p1);
	void DESTROY_ALL_CAMS(int p0);
	int DOES_CAM_EXIST(int p0);
	void SET_CAM_ACTIVE(int p0, int p1);
	int IS_CAM_ACTIVE(int p0);
	int IS_CAM_RENDERING(int p0);
	int GET_RENDERING_CAM();
	Vector3 GET_CAM_COORD(int p0);
	Vector3 GET_CAM_ROT(int p0, int p1);
	int GET_CAM_FOV(int Camera_handle);
	int GET_CAM_NEAR_CLIP(int p0);
	int GET_CAM_FAR_CLIP(int p0);
	int GET_CAM_FAR_DOF(int p0);
	void SET_CAM_PARAMS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void SET_CAM_COORD(int p0, int p1, int p2, int p3);
	void SET_CAM_ROT(int p0, Vector3 p1, int p2);
	void SET_CAM_FOV(char* camName, float FovVaule);
	void SET_CAM_NEAR_CLIP(int p0, int p1);
	void SET_CAM_FAR_CLIP(int p0, int p1);
	void SET_CAM_NEAR_DOF(int p0, int p1);
	void SET_CAM_FAR_DOF(int p0, int p1);
	void SET_CAM_DOF_STRENGTH(int p0, int p1);
	void SET_CAM_DOF_PLANES(int p0, int p1, int p2, int p3, int p4);
	void _0x8306C256(int p0, int p1);
	void SET_CAM_MOTION_BLUR_STRENGTH(int p0, int p1);
	void _0x8BBF2950();
	void ATTACH_CAM_TO_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5);
	void ATTACH_CAM_TO_PED_BONE(int CameraHandle, int Handle, int BoneIndex, float X, float Y, float Z, float Heading);
	void DETACH_CAM(char* camName);
	void SET_CAM_INHERIT_ROLL_VEHICLE(int p0, int p1);
	void POINT_CAM_AT_COORD(int p0, int p1, int p2, int p3);
	void POINT_CAM_AT_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5);
	void POINT_CAM_AT_PED_BONE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void STOP_CAM_POINTING(int p0);
	void _0x0C74F9AF(int p0, int p1);
	void _0xE1A0B2F1(int p0, int p1);
	void _0x43220969(int p0, int p1);
	void SET_CAM_DEBUG_NAME(int p0, int p1);
	void ADD_CAM_SPLINE_NODE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0x30510511(int p0, int p1, int p2, int p3);
	void _0xBA6C085B(int p0, int p1, int p2, int p3);
	void _0xB4737F03(int p0, int p1, int p2);
	void SET_CAM_SPLINE_PHASE(int p0, int p1);
	int GET_CAM_SPLINE_PHASE(int p0);
	int GET_CAM_SPLINE_NODE_PHASE(int p0);
	void SET_CAM_SPLINE_DURATION(int p0, int p1);
	void _0x15E141CE(int p0, int p1);
	int GET_CAM_SPLINE_NODE_INDEX(int p0);
	void _0x21D275DA(int p0, int p1, int p2, int p3);
	void _0xA3BD9E94(int p0, int p1, int p2);
	void OVERRIDE_CAM_SPLINE_VELOCITY(int p0, int p1, int p2, int p3);
	void OVERRIDE_CAM_SPLINE_MOTION_BLUR(int p0, int p1, int p2, int p3);
	void _0xC90B2DDC(int p0, int p1, int p2);
	int IS_CAM_SPLINE_PAUSED(int p0);
	void SET_CAM_ACTIVE_WITH_INTERP(int camTo, int camFrom, int duration, int unk0, int unk1);
	int IS_CAM_INTERPOLATING(int p0);
	void SHAKE_CAM(int p0, int p1, int p2);
	void ANIMATED_SHAKE_CAM(int p0, int p1, int p2, int p3, int p4);
	int IS_CAM_SHAKING(int p0);
	void SET_CAM_SHAKE_AMPLITUDE(int p0, int p1);
	void STOP_CAM_SHAKING(int p0, int p1);
	void _0x2B0F05CD(int p0, int p1);
	void _0xCB75BD9C(int p0, int p1, int p2, int p3);
	int _0x6AEFE6A5();
	void _0x26FCFB96(int p0);
	int PLAY_CAM_ANIM(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	int IS_CAM_PLAYING_ANIM(int p0, int p1, int p2);
	void SET_CAM_ANIM_CURRENT_PHASE(int p0, int p1);
	int GET_CAM_ANIM_CURRENT_PHASE(int p0);
	int PLAY_SYNCHRONIZED_CAM_ANIM(int p0, int p1, int p2, int p3);
	void _0x56F9ED27(int p0, int p1, int p2, int p3);
	void _0x71570DBA(int p0, int p1);
	void _0x60B345DE(int p0, int p1, int p2, int p3);
	void _0x44473EFC(int p0);
	int _0xDA931D65(int p0);
	int IS_SCREEN_FADED_OUT();
	int IS_SCREEN_FADED_IN();
	int IS_SCREEN_FADING_OUT();
	int IS_SCREEN_FADING_IN();
	void DO_SCREEN_FADE_IN(int ticks);
	void DO_SCREEN_FADE_OUT(int ticks);
	void SET_WIDESCREEN_BORDERS(int p0, int p1);
	Vector3 GET_GAMEPLAY_CAM_COORD();
	Vector3 GET_GAMEPLAY_CAM_ROT(int p0);
	int GET_GAMEPLAY_CAM_FOV();
	void _0xA6E73135(int p0);
	void _0x1126E37C(int p0);
	int GET_GAMEPLAY_CAM_RELATIVE_HEADING();
	void SET_GAMEPLAY_CAM_RELATIVE_HEADING(float heading);
	int GET_GAMEPLAY_CAM_RELATIVE_PITCH();
	void SET_GAMEPLAY_CAM_RELATIVE_PITCH(float x, float Value2);
	void SHAKE_GAMEPLAY_CAM(int p0, int p1);
	int IS_GAMEPLAY_CAM_SHAKING();
	void SET_GAMEPLAY_CAM_SHAKE_AMPLITUDE(int p0);
	void STOP_GAMEPLAY_CAM_SHAKING(int p0);
	void _0x7D3007A2(int p0);
	int IS_GAMEPLAY_CAM_RENDERING();
	int _0xC0B00C20();
	int _0x60C23785();
	void _0x20BFF6E5(int p0);
	void _0xA61FF9AC();
	int IS_GAMEPLAY_CAM_LOOKING_BEHIND();
	void _0x2701A9AD(int p0);
	void _0xC4736ED3(int p0);
	void _0x6B0E9D57();
	int IS_SPHERE_VISIBLE(int p0, int p1, int p2, int p3);
	int IS_FOLLOW_PED_CAM_ACTIVE();
	int SET_FOLLOW_PED_CAM_CUTSCENE_CHAT(int p0, int p1);
	void _0x8DC53629(int p0, int p1);
	void _0x1F9DE6E4();
	void _CLAMP_GAMEPLAY_CAM_YAW(float minimum, float maximum);
	void _CLAMP_GAMEPLAY_CAM_PITCH(float minimum, float maximum);
	void _ANIMATE_GAMEPLAY_CAM_ZOOM(float p0, float _distance);
	void _0x4B22C5CB(int p0, int p1);
	int GET_FOLLOW_PED_CAM_ZOOM_LEVEL();
	int GET_FOLLOW_PED_CAM_VIEW_MODE();
	void SET_FOLLOW_PED_CAM_VIEW_MODE(int p0);
	int IS_FOLLOW_VEHICLE_CAM_ACTIVE();
	void _0x9DB5D391(int p0);
	void _0x92302899(int p0, int p1);
	int GET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL();
	void SET_FOLLOW_VEHICLE_CAM_ZOOM_LEVEL(int p0);
	int GET_FOLLOW_VEHICLE_CAM_VIEW_MODE();
	void SET_FOLLOW_VEHICLE_CAM_VIEW_MODE(int p0);
	int _0xF3B148A6(int p0);
	void _0x1DEBCB45(int p0, int p1);
	int IS_AIM_CAM_ACTIVE();
	int _0x8F320DE4();
	int IS_FIRST_PERSON_AIM_CAM_ACTIVE();
	void _0x1BAA7182();
	int _0x33951005();
	void _0x9F4AF763(float p0);
	void _0x68BA0730(int p0, int p1);
	void _0x2F29F0D5(int p0, int p1);
	void _0x76DAC96C(int p0, int p1);
	void _0x0E21069D(int p0);
	void _0x71E9C63E(int p0);
	void _0xD1EEBC45(int p0);
	Vector3 _0x9C84BDA0();
	Vector3 _0x1FFBEFC5(int p0);
	Vector3 _0xACADF916(int p0, int p1);
	int _0x721B763B();
	int _0x23E3F106(int p0);
	int _0x457AE195();
	int _0x46CB3A49();
	int _0x19297A7A();
	int _0xF24777CA();
	int _0x38992E83();
	void SET_GAMEPLAY_COORD_HINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_GAMEPLAY_PED_HINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_GAMEPLAY_VEHICLE_HINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x2ED5E2F8(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_GAMEPLAY_ENTITY_HINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int IS_GAMEPLAY_HINT_ACTIVE();
	void STOP_GAMEPLAY_HINT(int p0);
	void _0xCAFEE798(int p0);
	void SET_GAMEPLAY_HINT_FOV(int p0);
	void _0x72E8CD3A(int p0);
	void _0x79472AE3(int p0);
	void _0xFC7464A0(int p0);
	void _0x3554AA0E(int p0);
	void GET_IS_MULTIPLAYER_BRIEF(int p0);
	void SET_CINEMATIC_BUTTON_ACTIVE(int p0);
	int IS_CINEMATIC_CAM_RENDERING();
	void SHAKE_CINEMATIC_CAM(int p0, int p1);
	int IS_CINEMATIC_CAM_SHAKING();
	void SET_CINEMATIC_CAM_SHAKE_AMPLITUDE(int p0);
	void STOP_CINEMATIC_CAM_SHAKING(int p0);
	void _0x5AC6DAC9();
	void _0x837F8581();
	void _0x65DDE8AF();
	void _0xD75CDD75();
	int _0x96A07066();
	void CREATE_CINEMATIC_SHOT(int p0, int p1, int p2, int p3);
	int IS_CINEMATIC_SHOT_ACTIVE(int p0);
	void STOP_CINEMATIC_SHOT(int p0);
	void _0xFBB85E02(int p0);
	void _0x4938C82F();
	void SET_CINEMATIC_MODE_ACTIVE(int p0);
	int _0x6739AD55();
	void STOP_CUTSCENE_CAM_SHAKING(int p0);
	void _0x067BA6F5(int p0);
	int _0xFD99BE2B(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0xE206C450();
	void _0xB06CCD38(int p0);
}

namespace WEAPON
{
	void ENABLE_LASER_SIGHT_RENDERING(int p0);
	int _0x324FA47A(int p0);
	int GET_WEAPONTYPE_MODEL(int p0);
	int GET_WEAPONTYPE_SLOT(int p0);
	int GET_WEAPONTYPE_GROUP(int p0);
	void SET_CURRENT_PED_WEAPON(int Handle, int WeaponHash, int EquipNow);
	int GET_CURRENT_PED_WEAPON(int  ped, int* weapHash, int p2);
	int _0x5D73CD20(int p0);
	int GET_BEST_PED_WEAPON(int p0, int p1);
	int SET_CURRENT_PED_VEHICLE_WEAPON(int p0, int p1);
	int GET_CURRENT_PED_VEHICLE_WEAPON(int p0, int p1);
	int IS_PED_ARMED(int p0, int p1);
	int IS_WEAPON_VALID(int WeapHash);
	int HAS_PED_GOT_WEAPON(int p0, int p1, int p2);
	int _0x02A32CB0(int p0);
	int GET_PED_WEAPONTYPE_IN_SLOT(int p0, int p1);
	int GET_AMMO_IN_PED_WEAPON(int p0, int p1);
	void ADD_AMMO_TO_PED(int  handle, int weaponHash, int ammo);
	void SET_PED_AMMO(int Handle, int WeaponHash, int ammo);
	void SET_PED_INFINITE_AMMO(int  Handle, int Toggle, int WeaponHash);
	void SET_PED_INFINITE_AMMO_CLIP(int Handle, int Toggle);
	void GIVE_WEAPON_TO_PED(int pedHandle, int weaponAssetHash, int ammoCount, int equipNow, int isAmmoLoaded);
	void GIVE_DELAYED_WEAPON_TO_PED(int  pedHandle, int weaponHash, int time, int p3);
	void REMOVE_ALL_PED_WEAPONS(int Handle, int Toggle);
	void REMOVE_WEAPON_FROM_PED(int  Handle, int WeaponHash);
	void HIDE_PED_WEAPON_FOR_SCRIPTED_CUTSCENE(int Handle, int Toggle);
	void SET_PED_CURRENT_WEAPON_VISIBLE(int p0, int p1, int p2, int p3);
	void SET_PED_DROPS_WEAPONS_WHEN_DEAD(int p0, int p1);
	int HAS_PED_BEEN_DAMAGED_BY_WEAPON(int p0, int p1, int p2);
	void CLEAR_PED_LAST_WEAPON_DAMAGE(int Handle);
	int HAS_ENTITY_BEEN_DAMAGED_BY_WEAPON(int p0, int p1, int p2);
	void CLEAR_ENTITY_LAST_WEAPON_DAMAGE(int p0);
	void SET_PED_DROPS_WEAPON(int p0);
	void SET_PED_DROPS_INVENTORY_WEAPON(int p0, int p1, int p2, int p3, int p4, int p5);
	int GET_MAX_AMMO_IN_CLIP(int  ped, int WeapHash, int p2);
	int GET_AMMO_IN_CLIP(int  Handle, int WeaponHash, int p2);
	int SET_AMMO_IN_CLIP(int  Handle, int WeaponHash, int ammo);
	int GET_MAX_AMMO(int  ped, int WeapHash, int* ammo);
	void SET_PED_AMMO_BY_TYPE(int p0, int p1, int p2);
	int GET_PED_AMMO_BY_TYPE(int p0, int p1);
	void SET_PED_AMMO_TO_DROP(int p0, int p1);
	void _0xD6460EA2(int p0);
	int _0x09337863(int p0, int p1);
	int GET_PED_LAST_WEAPON_IMPACT_COORD(int  Handle, float* Coords);
	void SET_PED_GADGET(int p0, int p1, int p2);
	int _0x8DDD0B5B(int p0, int p1);
	int GET_SELECTED_PED_WEAPON(int p0);
	void EXPLODE_PROJECTILES(int p0, int p1, int p2);
	void REMOVE_ALL_PROJECTILES_OF_TYPE(int p0, int p1);
	int _0x3612110D(int p0);
	int _0xB2B2BBAA(int p0);
	int HAS_VEHICLE_GOT_PROJECTILE_ATTACHED(int p0, int p1, int p2, int p3);
	void GIVE_WEAPON_COMPONENT_TO_PED(int p0, int p1, int p2);
	void REMOVE_WEAPON_COMPONENT_FROM_PED(int p0, int p1, int p2);
	int HAS_PED_GOT_WEAPON_COMPONENT(int p0, int p1, int p2);
	int IS_PED_WEAPON_COMPONENT_ACTIVE(int p0, int p1, int p2);
	int _0x82EEAF0F(int p0);
	int MAKE_PED_RELOAD(int p0);
	void REQUEST_WEAPON_ASSET(int p0, int p1, int p2);
	int HAS_WEAPON_ASSET_LOADED(int p0);
	void REMOVE_WEAPON_ASSET(int p0);
	int CREATE_WEAPON_OBJECT(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void GIVE_WEAPON_COMPONENT_TO_WEAPON_OBJECT(int p0, int p1);
	void REMOVE_WEAPON_COMPONENT_FROM_WEAPON_OBJECT(int p0, int p1);
	int HAS_WEAPON_GOT_WEAPON_COMPONENT(int p0, int p1);
	void GIVE_WEAPON_OBJECT_TO_PED(int p0, int p1);
	int _0xB1817BAA(int p0, int p1);
	int GET_WEAPON_OBJECT_FROM_PED(int p0);
	void SET_PED_WEAPON_TINT_INDEX(int Handle, int WeaponHash, int ColorIndex);
	int GET_PED_WEAPON_TINT_INDEX(int p0, int p1);
	void SET_WEAPON_OBJECT_TINT_INDEX(int p0, int p1);
	int GET_WEAPON_OBJECT_TINT_INDEX(int p0);
	int GET_WEAPON_TINT_COUNT(int p0);
	int GET_WEAPON_HUD_STATS(int p0, int p1);
	int GET_WEAPON_COMPONENT_HUD_STATS(int p0, int p1);
	int GET_WEAPON_CLIP_SIZE(int p0);
	void _0xB4F44C6E(int p0, int p1, int p2);
	int _0xEC2E5304(int p0, int p1);
	void _0xE3BD00F9(int p0);
	int _0xBAF7BFBE(int p0);
	int SET_WEAPON_SMOKEGRENADE_ASSIGNED(int p0);
	int _0xB0127EA7(int p0);
	void SET_WEAPON_ANIMATION_OVERRIDE(int p0, int p1);
	int GET_WEAPON_DAMAGE_TYPE(int p0);
	void _0x64646F1D(int p0);
	int _0x135E7AD4(int p0);
}

namespace ITEMSET
{
	int CREATE_ITEMSET(int p0);
	void DESTROY_ITEMSET(int p0);
	int IS_ITEMSET_VALID(int p0);
	int ADD_TO_ITEMSET(int p0, int p1);
	void REMOVE_FROM_ITEMSET(int p0, int p1);
	int GET_ITEMSET_SIZE(int p0);
	int GET_INDEXED_ITEM_IN_ITEMSET(int p0, int p1);
	int IS_IN_ITEMSET(int p0, int p1);
	void CLEAN_ITEMSET(int p0);
}

namespace STREAMING
{
	void LOAD_ALL_OBJECTS_NOW();
	void LOAD_SCENE(int p0, int p1, int p2);
	int NETWORK_UPDATE_LOAD_SCENE();
	void NETWORK_STOP_LOAD_SCENE();
	int IS_NETWORK_LOADING_SCENE();
	void SET_INTERIOR_ACTIVE(int p0, int p1);
	void REQUEST_MODEL(int model);
	void _0x48CEB6B4(int p0);
	int HAS_MODEL_LOADED(int model);
	void _0x939243FB(int p0, int p1);
	void SET_MODEL_AS_NO_LONGER_NEEDED(int Model);
	int IS_MODEL_IN_CDIMAGE(int p0);
	int IS_MODEL_VALID(int p0);
	int IS_MODEL_A_VEHICLE(int p0);
	void REQUEST_COLLISION_AT_COORD(float x, float y, float z);
	void REQUEST_COLLISION_FOR_MODEL(int vehicleHash);
	int HAS_COLLISION_FOR_MODEL_LOADED(int p0);
	void REQUEST_ADDITIONAL_COLLISION_AT_COORD(int p0, int p1, int p2);
	int _0xCD31C872(int p0);
	void REQUEST_ANIM_DICT(char* AminSet);
	int HAS_ANIM_DICT_LOADED(char* AminSet);
	void REMOVE_ANIM_DICT(int p0);
	void REQUEST_ANIM_SET(int p0);
	int HAS_ANIM_SET_LOADED(int p0);
	void REMOVE_ANIM_SET(int p0);
	void REQUEST_CLIP_SET(char* p0);
	int HAS_CLIP_SET_LOADED(char* p0);
	void REMOVE_CLIP_SET(char* p0);
	void REQUEST_IPL(char* iplName);
	void REMOVE_IPL(char* iplName);
	int IS_IPL_ACTIVE(char* iplName);
	void SET_STREAMING(int p0);
	void SET_GAME_PAUSES_FOR_STREAMING(int p0);
	void SET_REDUCE_PED_MODEL_BUDGET(int p0);
	void SET_REDUCE_VEHICLE_MODEL_BUDGET(int p0);
	void SET_DITCH_POLICE_MODELS(int p0);
	int GET_NUMBER_OF_STREAMING_REQUESTS();
	void REQUEST_PTFX_ASSET();
	int HAS_PTFX_ASSET_LOADED();
	void REMOVE_PTFX_ASSET();
	void _REQUEST_DLC_PTFX_ASSET(char* FX);
	int _HAS_DLC_PTFX_LOADED(char* FX);
	void _REMOVE_DLC_PTFX_ASSET(char* FX);
	void SET_VEHICLE_POPULATION_BUDGET(int p0);
	void SET_PED_POPULATION_BUDGET(int p0);
	void CLEAR_FOCUS();
	void _0x14680A60(int p0, int p1, int p2, int p3, int p4, int p5);
	void SET_FOCUS_ENTITY(int p0);
	int IS_ENTITY_FOCUS(int p0);
	void _0x403CD434(int p0, int p1);
	void _0xA07BAEB9(int p0);
	int _0x10B6AB36(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x72344191(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0xC0157255(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0xE80F8ABE(int p0);
	int _0x1B3521F4(int p0);
	int _0x42CFE9C0(int p0);
	int _0x56253356();
	int NEW_LOAD_SCENE_START(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0xFA037FEB(int p0, int p1, int p2, int p3, int p4);
	void NEW_LOAD_SCENE_STOP();
	int IS_NEW_LOAD_SCENE_ACTIVE();
	int IS_NEW_LOAD_SCENE_LOADED();
	int _0xEAA51103();
	void START_PLAYER_SWITCH(int p0, int p1, int p2, int p3);
	void STOP_PLAYER_SWITCH();
	int STOP_PLAYER_REMAIN_ARCADE();
	int GET_PLAYER_SWITCH_TYPE();
	int GET_IDEAL_PLAYER_SWITCH_TYPE(int p0, int p1, int p2, int p3, int p4, int p5);
	int GET_PLAYER_SWITCH_STATE();
	int GET_PLAYER_SHORT_SWITCH_STATE();
	void _0xF0BD420D(int p0);
	int _0x02BA7AC2();
	void _0x47352E14(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x279077B0(int p0);
	void _0x55CB21F9();
	void _0x1084F2F4();
	void _0x5B1E995D();
	void _0x4B4B9A13();
	int _0x408F7148();
	void _0xFB4D062D(int p0, int p1, int p2);
	void _0x2349373B(int p0);
	int _0x74C16879();
	int SET_PLAYER_INVERTED_UP();
	int _0xC7A3D279();
	int DESTROY_PLAYER_IN_PAUSE_MENU();
	int _0x7154B6FD();
	void _0xE5612C1A(int p0);
	void _0x9CD6A451(int p0, int p1, int p2, int p3);
	void _0x4267DA87();
	void _0x9FA4AF99(int p0);
	void _0x9EF0A9CF(int p0, int p1);
	void _0xF2CDD6A8();
	int _0x17B0A1CD();
	void _0x3DA7AA5D();
	int _0xDAB4BAC0();
	void PREFETCH_SRL(int p0);
	int IS_SRL_LOADED();
	void BEGIN_SRL();
	void END_SRL();
	void SET_SRL_TIME(int p0);
	void _0x814D0752(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x62F02485(int p0, int p1, int p2, int p3);
	void _0xA6459CAA(int p0);
	void _0xF8F515E4(int p0);
	void SET_HD_AREA(int p0, int p1, int p2, int p3);
	void CLEAR_HD_AREA();
	void _0xE243B2AF();
	void _0x897A510F();
	int _0xC0E83320(int p0);
	void _0x1C576388(int p0);
	int _0x3E9C4CBE();
}

namespace SCRIPT
{
	void REQUEST_SCRIPT(char* ScriptName);
	void SET_SCRIPT_AS_NO_LONGER_NEEDED(char* ScriptName);
	int HAS_SCRIPT_LOADED(char* ScriptName);
	int DOES_SCRIPT_EXIST(char* ScriptName);
	void _0x1C68D9DC(int p0);
	void _0x96C26F66(int p0);
	int _0x06674818(int p0);
	void TERMINATE_THREAD(int ThreadID);
	int IS_THREAD_ACTIVE(int ThreadID);
	char* _GET_THREAD_NAME(int ThreadID);
	void _0xBB4E2F66();
	int _0x1E28B28F();
	int GET_ID_OF_THIS_THREAD();
	void TERMINATE_THIS_THREAD();
	int _0x029D3841(int ScriptHash);
	char* GET_THIS_SCRIPT_NAME();
	int _0x2BEE1F45();
	int GET_NUMBER_OF_EVENTS(int p0);
	int GET_EVENT_EXISTS(int p0, int p1);
	int GET_EVENT_AT_INDEX(int p0, int p1);
	int GET_EVENT_DATA(int p0, int p1, int p2, int p3);
	void TRIGGER_SCRIPT_EVENT(int p0, int p1, int p2, int p3);
	void SHUTDOWN_LOADING_SCREEN();
	void SET_NO_LOADING_SCREEN(int p0);
	void _0xB03BCCDF();
}

namespace UI
{
	void _0xCB7C8994(char* p0);
	void _0x903F5EE4(int p0);
	void _0x94119534();
	void _0x71077FBD();
	int _0xB8B3A5D0();
	void _0xA7C8594B(int p0);
	void _0x1DA7E41A(int p0);
	void _0x1E63088A();
	void _0x5205C6F5();
	void _0xECA8ACB9(int p0);
	void _0x520FCB6D();
	void _0xC8BAB2F2();
	void _0x4D0449C6();
	void _0xD3F40140();
	int _0xC5223796();
	void _0x709B4BCB();
	void _0x4A4A40A4();
	int _0x294405D4();
	void _0xF881AB87();
	void _0x1D6859CA();
	void _0xCF14D7F2(int p0, int p1, int p2, int p3);
	void _0x24A97AF8(int p0);
	void _0x44018EDB(int p0);
	void _0xA4524B23();
	void _0xAFA1148B();
	void _0x3CD4307C();
	void _0x574EE85C(char* p0);
	void _0x829A799(char* p0);
	void _0x8F7AF78(int p0, bool p1);
	int _0xED130FA1(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0xE7E3C98B(char *picName1, char *picName2, bool flash, int iconType, char *sender, char *subject);
	int _0x0EB382B7(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0x3E807FE3(char *p0, char *p1, bool p2, int p3, char *p4, char *p5, float p6, char *p7);
	int _0xDEB491C8(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _DRAW_NOTIFICATION(int blink, int p1);
	int _0x57B8D0D4(int p0, int p1);
	int _0x02BCAF9B(int p0, int p1);
	int _0x02DED2B8(int p0, int p1, int p2, int p3, int p4);
	int _0xA9CCEF66(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int _0x88B9B909(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	int _0xE05E7052(int p0, int p1, int p2);
	int _0x4FA43BA4(int p0, int p1, int p2, int p3);
	int _0x8C90D22F(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x8E319AB8(int p0, int p1);
	int _0x76FB0F21(int p0, int p1, int p2, int p3);
	int _0x5E93FBFA(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0xF42C43C7(char* p0);
	void _0x27A244D8(char* p0);
	void _0x38F82261(int Time, int unk);
	void _0xDD524A11(int p0);
	int _0x672EFB45();
	void _SET_TEXT_ENTRY(char* text);
	void _DRAW_TEXT(float x, float y);
	void _0x51E7A037(int p0);
	int _0xD12A643A(int p0);
	void _0x94B82066(int p0);
	int _0xAA318785(int p0, int p1);
	void _0xB245FC10(int p0);
	void _0xB59B530D(int p0, int p1, int p2, int p3);
	void _0x00E20F2D(int p0);
	int _0xF63A13EC(int p0);
	void _0xF4C211F6(int p0);
	void _0xE8E59820(int p0);
	void _0x0E103475(int p0);
	void _0x2944A6C5(int p0);
	void _0x550665AE(int p0);
	void _0x67785AF2();
	void _0xBF855650(int p0);
	void _0x6E7FDA1C(int p0);
	void ADD_TEXT_COMPONENT_INTEGER(int text);
	void ADD_TEXT_COMPONENT_FLOAT(float text, int DecimalPlaces);
	void _0xDCE05406(int p0);
	void _0x150E03B6(int p0);
	void _0x5DE98F0A(int p0);
	void _ADD_TEXT_COMPONENT_STRING(char* text);
	void ADD_TEXT_COMPONENT_SUBSTRING_TIME(int p0, int p1);
	void _0x12929BDF(int p0, int p1);
	void _0x65E1D404(int p0, int p1);
	void _ADD_TEXT_COMPONENT_STRING2(char* text);
	void _ADD_TEXT_COMPONENT_STRING3(char* text);
	void _0x6F1A1901(int p0);
	int _0x34A396EE(int p0, int p1, int p2);
	int _0x0183A66C(int p0, int p1, int p2, int p3);
	int _0xFA6373BB(int p0, int p1, int p2);
	int _0x95C4B5AD(int p0);
	void CLEAR_PRINTS();
	void CLEAR_BRIEF();
	void CLEAR_ALL_HELP_MESSAGES();
	void CLEAR_THIS_PRINT(int p0);
	void CLEAR_SMALL_PRINTS();
	int DOES_TEXT_BLOCK_EXIST(int p0);
	void REQUEST_ADDITIONAL_TEXT(int p0, int p1);
	void _0xF4D27EBE(int p0, int p1);
	int HAS_ADDITIONAL_TEXT_LOADED(int p0);
	void CLEAR_ADDITIONAL_TEXT(int p0, int p1);
	int IS_STREAMING_ADDITIONAL_TEXT(int p0);
	int HAS_THIS_ADDITIONAL_TEXT_LOADED(int p0, int p1);
	int IS_MESSAGE_BEING_DISPLAYED();
	int DOES_TEXT_LABEL_EXIST(int p0);
	int GET_LENGTH_OF_STRING_WITH_THIS_TEXT_LABEL(int p0);
	int GET_LENGTH_OF_LITERAL_STRING(char* string);
	int _0x7DBC0764(int p0);
	int GET_STREET_NAME_FROM_HASH_KEY(int p0);
	int IS_HUD_PREFERENCE_SWITCHED_ON();
	int IS_RADAR_PREFERENCE_SWITCHED_ON();
	int IS_SUBTITLE_PREFERENCE_SWITCHED_ON();
	void DISPLAY_HUD(int Toggle);
	void _0xC380AC85();
	void _0xC47AB1B0();
	void DISPLAY_RADAR(int Toggle);
	int IS_HUD_HIDDEN();
	int IS_RADAR_HIDDEN();
	void SET_BLIP_ROUTE(int blip, int enabled);
	void SET_BLIP_ROUTE_COLOUR(int p0, int p1);
	void ADD_NEXT_MESSAGE_TO_PREVIOUS_BRIEFS(int p0);
	void _0x9854485F(int p0);
	void RESPONDING_AS_TEMP(int p0);
	void SET_RADAR_ZOOM(int p0);
	void _0x25EC28C0(int p0, int p1);
	void _0x09CF1CE5(int p0);
	void _0xE8D3A910();
	void GET_HUD_COLOUR(int p0, int p1, int p2, int p3, int p4);
	void _0x0E41E45C(int p0, int p1, int p2, int p3);
	void _0x6BE3ACA8(int p0, int p1, int p2, int p3);
	void _0x3B216749(int p0, int p1);
	void _0xF6E7E92B(int p0, int p1, int p2, int p3, int p4);
	void FLASH_ABILITY_BAR(int p0);
	void SET_ABILITY_BAR_VALUE(int p0, int p1);
	void FLASH_WANTED_DISPLAY(int p0);
	int _0x3330175B(int p0, int p1);
	void SET_TEXT_SCALE(float p0, float p1);
	void SET_TEXT_COLOUR(int R, int G, int B, int A);
	void SET_TEXT_CENTRE(int p0);
	void SET_TEXT_RIGHT_JUSTIFY(int p0);
	void _0x68CDFA60(int p0);
	void SET_TEXT_WRAP(float p0, float p1);
	void SET_TEXT_LEADING(int p0);
	void SET_TEXT_PROPORTIONAL(int p0);
	void SET_TEXT_FONT(int p0);
	void SET_TEXT_DROP_SHADOW();
	void SET_TEXT_DROPSHADOW(int p0, int p1, int p2, int p3, int p4);
	void SET_TEXT_OUTLINE();
	void SET_TEXT_EDGE(int p0, int p1, int p2, int p3, int p4);
	void SET_TEXT_RENDER_ID(int p0);
	int GET_DEFAULT_SCRIPT_RENDERTARGET_RENDER_ID();
	int REGISTER_NAMED_RENDERTARGET(int p0, int p1);
	int IS_NAMED_RENDERTARGET_REGISTERED(int p0);
	int RELEASE_NAMED_RENDERTARGET(int p0);
	void LINK_NAMED_RENDERTARGET(int p0);
	int GET_NAMED_RENDERTARGET_RENDER_ID(int p0);
	int IS_NAMED_RENDERTARGET_LINKED(int p0);
	void CLEAR_HELP(int Enable);
	int IS_HELP_MESSAGE_ON_SCREEN();
	int _0x812CBE0E();
	int IS_HELP_MESSAGE_BEING_DISPLAYED();
	int IS_HELP_MESSAGE_FADING_OUT();
	int _0x87871CE0();
	int _GET_BLIP_INFO_ID_ITERATOR();
	int GET_NUMBER_OF_ACTIVE_BLIPS();
	int GET_NEXT_BLIP_INFO_ID(int p0);
	int GET_FIRST_BLIP_INFO_ID(int p0);
	Vector3 GET_BLIP_INFO_ID_COORD(int p0);
	int GET_BLIP_INFO_ID_DISPLAY(int p0);
	int GET_BLIP_INFO_ID_TYPE(int p0);
	int GET_BLIP_INFO_ID_ENTITY_INDEX(int p0);
	int GET_BLIP_INFO_ID_PICKUP_INDEX(int p0);
	int GET_BLIP_FROM_ENTITY(int entity);
	int ADD_BLIP_FOR_RADIUS(int p0, int p1, int p2, int p3);
	int ADD_BLIP_FOR_ENTITY(int entity);
	int ADD_BLIP_FOR_PICKUP(int p0);
	int ADD_BLIP_FOR_COORD(float x, float y, float z);
	void _0xBF25E7B2(int p0, int p1, int p2, int p3, int p4);
	void _0xE7E1E32B(int p0);
	void SET_BLIP_COORDS(int p0, int p1, int p2, int p3);
	Vector3 GET_BLIP_COORDS(int p0);
	void SET_BLIP_SPRITE(int blip, int spriteId);
	int GET_BLIP_SPRITE(int p0);
	void SET_BLIP_NAME_FROM_TEXT_FILE(int BlipID, char* blipname);
	void SET_BLIP_NAME_TO_PLAYER_NAME(int p0, int p1);
	void SET_BLIP_ALPHA(int p0, int p1);
	int GET_BLIP_ALPHA(int p0);
	void SET_BLIP_FADE(int p0, int p1, int p2);
	void SET_BLIP_ROTATION(int p0, int p1);
	void SET_BLIP_FLASH_TIMER(int p0, int p1);
	void SET_BLIP_FLASH_INTERVAL(int p0, int p1);
	void SET_BLIP_COLOUR(int BlipID, int Color);
	void SET_BLIP_SECONDARY_COLOUR(int p0, int p1, int p2, int p3);
	int GET_BLIP_COLOUR(int p0);
	int GET_BLIP_HUD_COLOUR(int p0);
	int IS_BLIP_SHORT_RANGE(int p0);
	int IS_BLIP_ON_MINIMAP(int p0);
	int _0x3E47F357(int p0);
	void _0x43996428(int p0, int p1);
	void SET_BLIP_HIGH_DETAIL(int p0, int p1);
	void SET_BLIP_AS_MISSION_CREATOR_BLIP(int p0, int p1);
	int IS_MISSION_CREATOR_BLIP(int p0);
	int DISABLE_BLIP_NAME_FOR_VAR();
	int _0xC5EB849A();
	void _0xA2CAAB4F(int p0);
	void SET_BLIP_FLASHES(int p0, int p1);
	void SET_BLIP_FLASHES_ALTERNATE(int BlipID, int p1);
	int IS_BLIP_FLASHING(int p0);
	void SET_BLIP_AS_SHORT_RANGE(int p0, int p1);
	void SET_BLIP_SCALE(int BlipID, float Scale);
	void SET_BLIP_PRIORITY(int p0, int p1);
	void SET_BLIP_DISPLAY(int blip, int p1);
	void SET_BLIP_CATEGORY(int p0, int p1);
	void REMOVE_BLIP(int BlipID);
	void SET_BLIP_AS_FRIENDLY(int BlipID, int toggle);
	void PULSE_BLIP(int p0);
	void SHOW_NUMBER_ON_BLIP(int p0, int p1);
	void HIDE_NUMBER_ON_BLIP(int p0);
	void _0x1D99F676(int p0, int p1);
	void _0x3DCF0092(int p0, int p1);
	void _0xD1C3D71B(int p0, int p1);
	void _0x8DE82C15(int p0, int p1);
	void _0x4C8F02B4(int p0, int p1);
	void _0xABBE1E45(int p0, int p1);
	void _0x6AA6A1CC(int p0, int p1);
	void _0xC575F0BC(int p0, int p1);
	void _0x40E25DB8(int p0, int p1);
	int DOES_BLIP_EXIST(int p0);
	void SET_WAYPOINT_OFF();
	void _0x62BABF2C();
	void REFRESH_WAYPOINT();
	int IS_WAYPOINT_ACTIVE();
	void SET_NEW_WAYPOINT(int p0, int p1);
	void SET_BLIP_BRIGHT(int p0, int p1);
	void SET_BLIP_SHOW_CONE(int p0, int p1);
	void _0x41B0D022(int p0);
	int SET_MINIMAP_COMPONENT(int p0, int p1);
	int GET_MAIN_PLAYER_BLIP_ID();
	void HIDE_LOADING_ON_FADE_THIS_FRAME();
	void SET_RADAR_AS_INTERIOR_THIS_FRAME(int p0, int p1, int p2, int p3, int p4);
	void SET_RADAR_AS_EXTERIOR_THIS_FRAME();
	void _0x54E75C7D(int p0, int p1);
	int _0x199DED14();
	void _0x1A4318F7();
	void _0xCE36E3FE();
	void _0x334EFD46();
	void SET_WIDESCREEN_FORMAT(int p0);
	void DISPLAY_AREA_NAME(int p0);
	void DISPLAY_CASH(int p0);
	void DISPLAY_AMMO_THIS_FRAME(int p0);
	void DISPLAY_SNIPER_SCOPE_THIS_FRAME();
	void HIDE_HUD_AND_RADAR_THIS_FRAME();
	void _0x5476B9FD(int p0);
	void _0xF4F3C796();
	void _0x7BFFE82F();
	void SET_MULTIPLAYER_BANK_CASH();
	void REMOVE_MULTIPLAYER_BANK_CASH();
	void SET_MULTIPLAYER_HUD_CASH(int p0, int p1);
	void REMOVE_MULTIPLAYER_HUD_CASH();
	void HIDE_HELP_TEXT_THIS_FRAME();
	void DISPLAY_HELP_TEXT_THIS_FRAME(int p0, int p1);
	void _0x1EFFB02A(int forcedShow);
	void _0xB26FED2B();
	int _0x22E9F555();
	void _0x83B608A0(int p0);
	void _0xE70D1F43(int p0);
	void SET_GPS_FLAGS(int p0, int p1);
	void CLEAR_GPS_FLAGS();
	void _0xFB9BABF5(int p0);
	void CLEAR_GPS_RACE_TRACK();
	void _0x7F93799B(int p0, int p1, int p2);
	void _0xEEBDFE55(int p0, int p1, int p2);
	void _0xDA0AF00E(int p0, int p1, int p2);
	void _0xCF2E3E24();
	void _0xC3DCBEDB(int p0, int p1, int p2);
	void _0xFE485135(int p0, int p1, int p2);
	void _0xE87CBE4C(int p0);
	void _0x0D9969E4();
	void CLEAR_GPS_PLAYER_WAYPOINT();
	void SET_GPS_FLASHES(int p0);
	void FLASH_MINIMAP_DISPLAY();
	void _0x79A6CAF6(int p0);
	void TOGGLE_STEALTH_RADAR(int p0);
	void KEY_HUD_COLOUR(int p0, int p1);
	void SET_MISSION_NAME(int p0, int p1);
	void _0x8D9A1734(int p0, int p1);
	void _0xD2161E77(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void SET_MINIMAP_BLOCK_WAYPOINT(int p0);
	void _0x02F5F1D1(int p0);
	void _0xD8D77733(int p0);
	int _0xA4098ACC();
	int _0x65B705F6(int p0, int p1, int p2);
	void _0xE010F081(int p0, int p1, int p2);
	void _0x5133A750(int p0);
	void _0x20FD3E87();
	void LOCK_MINIMAP_ANGLE(int p0);
	void UNLOCK_MINIMAP_ANGLE();
	void LOCK_MINIMAP_POSITION(int p0, int p1);
	void UNLOCK_MINIMAP_POSITION();
	void _0x0308EDF6(int p0);
	void _0x7FB6FB2A(int p0, int p1, int p2);
	void _0xF07D8CEF(int p0);
	void _0x827F14DE(int p0);
	void _0x08EB83D2(int p0, int p1);
	int IS_HUD_COMPONENT_ACTIVE(int p0);
	int IS_SCRIPTED_HUD_COMPONENT_ACTIVE(int p0);
	void HIDE_SCRIPTED_HUD_COMPONENT_THIS_FRAME(int p0);
	int _0xE8C8E535(int p0);
	void HIDE_HUD_COMPONENT_THIS_FRAME(int p0);
	void SHOW_HUD_COMPONENT_THIS_FRAME(int p0);
	void _0x52746FE1();
	void RESET_RETICULE_VALUES();
	void RESET_HUD_COMPONENT_VALUES(int p0);
	void SET_HUD_COMPONENT_POSITION(int p0, int p1, int p2);
	Vector3 GET_HUD_COMPONENT_POSITION(int p0);
	void _0x5BBCC934();
	int _0xFE9A39F8(int p0, int p1, int p2, int p3, int p4);
	void _0x10DE5150();
	void _0x67649EE0();
	int _0x9D2C94FA();
	int _0x45472FD5(int p0);
	void _0x198F32D7(int p0, int p1, int p2);
	void _0x93045157(int p0, int p1, int p2, int p3);
	void _0x18B012B7(int p0, int p1, int p2, int p3);
	void _0x97852A82(int p0, int p1, int p2, int p3, int p4, int p5);
	void CLEAR_FLOATING_HELP(int p0, int p1);
	void _0xC969F2D0(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0xEFD2564A();
	int _0xF5CD2AA4(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x3D081FE4(int p0);
	int _0x60118951(int p0);
	int ADD_TREVOR_RANDOM_MODIFIER(int p0);
	void _0xD41DF479(int p0, int p1, int p2);
	void _0x767DED29(int p0, int p1);
	void _0xB01A5434(int p0, int p1);
	void _0x7E3AA40A(int p0, int p1, int p2);
	void _0x5777EC77(int p0, int p1);
	void _0xF4418611(int p0, int p1, int p2);
	void _0x0EBB003F(int p0, int p1);
	void _0x627A559B(int p0, int p1);
	int _0xF11414C4(int p0);
	void _0x939218AB(int p0, int p1);
	int _0xAB5B7C18();
	int GET_CURRENT_WEBSITE_ID();
	int _0xD217EE7E(int p0);
	void SET_WARNING_MESSAGE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void _0x2DB9EAB5(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void SET_DANCE_MAPPERS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int _0x94C834AD();
	void _0x2F9A309C();
	void _0xE4FD20D8(int p0);
	void _0x13E7A5A9(int p0);
	int _0x786CA0A2(int p0, int p1, int p2);
	void _0xCBEC9369();
	int _0x3F4AFB13();
	void _0x2F28F0A6(int p0);
	void _0x801D0D86();
	void _0x317775DF();
	void ACTIVATE_FRONTEND_MENU(int p0, int p1, int p2);
	void RESTART_FRONTEND_MENU(int p0, int p1);
	int _0x33D6868F();
	void SET_PAUSE_MENU_ACTIVE(int p0);
	void DISABLE_FRONTEND_THIS_FRAME();
	void _0x7F349900();
	void _0x630CD8EE();
	void SET_FRONTEND_ACTIVE(int p0);
	int IS_PAUSE_MENU_ACTIVE();
	int _0xC85C4487();
	int GET_PAUSE_MENU_STATE();
	int IS_PAUSE_MENU_RESTARTING();
	void _0x2DFD35C7(int p0);
	void _0x0A89336C(int p0);
	void _0xC84BE309();
	void _0x9FE8FD5E(int p0);
	void OBJECT_DECAL_TOGGLE(int p0);
	int _0xC51BC42F(int p0);
	int _0x016D7AF9();
	void ENABLE_DEATHBLOOD_SEETHROUGH(int p0);
	void _0x6C67131A(int p0, int p1, int p2);
	void _0x11D09737(int p0);
	int _0xD3BF3ABD();
	void _0xC06B763D();
	void _0xB9392CE7();
	int _0x92DAFA78();
	int _0x22CA9F2A();
	int _0xDA7951A2();
	int _0x7D95AFFF();
	int _0x96863460();
	void _0x8543AAC8(int p0, int p1);
	void _0x6025AA2F(int p0, int p1, int p2);
	void _0x30D72A4B(int p0, int p1);
	int _0x46794EB2(int p0, int p1, int p2);
	int SET_USERIDS_UIHIDDEN(int p0, int p1);
	int _0xD6CC4766(int p0, int p1, int p2, int p3);
	int _0x51972B04(int p0, int p1);
	int _0xD43BB56D(int p0, int p1);
	void CLEAR_PED_IN_PAUSE_MENU();
	void GIVE_PED_TO_PAUSE_MENU(int p0, int p1);
	void _0x127310EB(int p0);
	void _0x8F45D327(int p0);
	void _0x19FCBBB2();
	int _0x850690FF();
	int _0x9D4934F4();
	void _0x57218529();
	void _0x5F86AA39();
	void _0x7AD67C95(int p0);
	int _0xD4DA14EF();
	void _0xFF06772A(int p0);
	void _0x96C4C4DD(int p0, int p1);
	int DOES_PED_HAVE_AI_BLIP(int p0);
	void _0xD8E31B1A(int p0, int p1);
	void HIDE_SPECIAL_ABILITY_LOCKON_OPERATION(int p0, int p1);
	void _0xFFDF46F0(int p0, int p1);
	void _0xF9DC2AF7(int p0, int p1);
	int _0x06349065(int p0);
	int _0xCA52CF43(int p0);
}

namespace GRAPHICS
{
	void SET_DEBUG_LINES_AND_SPHERES_DRAWING_ACTIVE(int enabled);
	void DRAW_DEBUG_LINE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void DRAW_DEBUG_LINE_WITH_TWO_COLOURS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void DRAW_DEBUG_SPHERE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void DRAW_DEBUG_BOX(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0xB6DF3709(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void DRAW_DEBUG_TEXT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void DRAW_DEBUG_TEXT_2D(char* Text, float posX, float posY, float posZ, int R, int G, int B, int A);
	void DRAW_LINE(float posX1, float posY1, float posZ1, float posX2, float posY2, float posZ2, int R, int G, int B, int A);
	void DRAW_POLY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void _0xCD4D9DD5(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0xC44C2F44(int p0);
	int _0xBA9AD458();
	int _0xADBBA287();
	void _0x9E553002();
	int _0x56C1E488(int p0, int p1, int p2, int p3);
	int _0x226B08EA(int p0);
	int _0x1F3CADB0();
	int _0xA9DC8558();
	void _0x88EAF398();
	int _0x47B0C137();
	int MELEE_SEETHROUGH_SKIPPED();
	void _0x9CBA682A();
	int _0x3B15D33C(int p0);
	int _0xEC5D0317();
	int _0x25D569EB(int p0);
	int _0xCFCDC518(int p0);
	void _0x108F36CC();
	void _0xE9F2B68F(int p0, int p1);
	int GET_MAXIMUM_NUMBER_OF_PHOTOS();
	int _0x239272BD();
	int _0x21DBF0C9();
	int _0x199FABF0(int p0);
	int _0x596B900D(int p0);
	void _0xC9EF81ED();
	int _0x9D84554C(int p0);
	int _0x9C106AD9(int p0);
	int _0x762E5C5F(int p0);
	void DRAW_LIGHT_WITH_RANGE(float* XCoord, float* YCoord, float* ZCoord, int Red, int Green, int Blue, float Width, float Height);
	void DRAW_SPOT_LIGHT(float x, float y, float z, float dir_x, float dir_y, float dir_z, int r, int g, int b, float distance, float falloff, float p11, float radius, float p13);
	void _0x32BF9598(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14);
	void _0x93628786(int p0);
	void DRAW_MARKER(int type, float x, float y, float z, float dirX, float dirY, float dirZ, float rotX, float rotY, float rotZ, float scaleX, float scaleY, float scaleZ, int colorR, int colorG, int colorB, int alpha, int bobUpAndDown, int faceCamera, int p19, int rotate, char* textureDict, char* textureName, int drawOnEnts);
	int CREATE_CHECKPOINT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void _0x80151CCF(int p0, int p1);
	void SET_CHECKPOINT_CYLINDER_HEIGHT(int p0, int p1, int p2, int p3);
	void SET_CHECKPOINT_RGBA(int p0, int colorR, int colorG, int colorB, int colorA);
	void _0xA5456DBB(int p0, int p1, int p2, int p3, int p4);
	void _0x20EABD0F(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0x1E3A3126(int p0);
	void DELETE_CHECKPOINT(int p0);
	void _0x932FDB81(int p0);
	void _0x7E946E87(int p0);
	void REQUEST_STREAMED_TEXTURE_DICT(char* Type, int Toggle);
	int HAS_STREAMED_TEXTURE_DICT_LOADED(char* Type);
	void SET_STREAMED_TEXTURE_DICT_AS_NO_LONGER_NEEDED(char* Type);
	void DRAW_RECT(float posX, float posY, float scaleX, float scaleY, int R, int G, int B, int A);
	void _0xF8FBCC25(int p0);
	void _0xADF81D24(int p0);
	void _0x228A2598(int p0, int p1);
	void _0x3FE33BD6();
	void _0x76C641E4(int p0, int p1, int p2, int p3);
	int _0x3F0D1A6F();
	void DRAW_SPRITE(char* Type, char* IconType, float X, float Y, float width, float height, float rotation, int RED, int GREEN, int BLUE, int Alpha);
	int ADD_ENTITY_ICON(int p0, int p1);
	void SET_ENTITY_ICON_VISIBILITY(int p0, int p1);
	void SET_ENTITY_ICON_COLOR(int p0, int p1, int p2, int p3, int p4);
	void SET_DRAW_ORIGIN(int p0, int p1, int p2, int p3);
	void CLEAR_DRAW_ORIGIN();
	void ATTACH_TV_AUDIO_TO_ENTITY(int p0);
	void SET_TV_AUDIO_FRONTEND(int p0);
	int LOAD_MOVIE_MESH_SET(int p0);
	void RELEASE_MOVIE_MESH_SET(int p0);
	int _0x9D5D9B38(int p0);
	void GET_SCREEN_RESOLUTION(int* p0, int* p1);
	int GET_IS_WIDESCREEN();
	int GET_IS_HIDEF();
	void SET_NIGHTVISION(int Toggle);
	int _0x62619061();
	void SET_NOISEOVERIDE(int p0);
	void SET_NOISINESSOVERIDE(int p0);
	int _0x1F950E4B(int p0, int p1, int p2, int p3, int p4);
	Vector3 GET_TEXTURE_RESOLUTION(int p0, int p1);
	void _0x455F1084(int p0);
	void SET_FLASH(int p0, int p1, int p2, int p3, int p4);
	void _0x0DCC0B8B();
	void _0xAA2A0EAF(int p0);
	int CREATE_TRACKED_POINT();
	void SET_TRACKED_POINT_INFO(int point, int x, int y, int z, float radius);
	int IS_TRACKED_POINT_VISIBLE(int p0);
	void DESTROY_TRACKED_POINT(int p0);
	void _0x72B36815();
	void _0xD820ADD4();
	void _0x48F16186();
	void _0x13D4ABC0(int p0);
	void _0xD2157428(int p0);
	void _0xC07C64C9(int p0);
	void _0xFE903D0F(int p0);
	void _0xDE10BA1F(int p0);
	void _0x9F470BE3(int p0);
	void _0x4A124267(int p0);
	void _0xB19B2764(float p0);
	void _0x342FA2B4(int p0);
	void _0x5D3BFFC9(int p0);
	void _0xD9653728(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x72BA8A14(int p0, int p1, int p2);
	void _0x804F444C(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void _0xBB1A1294(int p0, int p1);
	void _0x1A1A72EF(int p0);
	void _0x3BB12B75(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x4EA70FB4(int p0, int p1, int p2, int p3, int p4);
	void _0x0D830DC7(int p0);
	int _0xA08B46AD();
	Vector3 _0xECD470F0(int p0);
	void SET_SEETHROUGH(int Toggle);
	int _0x1FE547F2();
	void SEETHROUGH_RESET();
	void _0x654F0287(int p0, int p1);
	void _0xF6B837F0(int p0);
	int _0xD906A3A9();
	void _0xD34A6CBA(int p0);
	void _0xD8CC7221(int p0);
	int _0x5604B890(int p0);
	int _0x46617502(int p0);
	void _0xDB7AECDA();
	int IS_PARTICLE_FX_DELAYED_BLINK();
	int _0x926B8734();
	void _0x30ADE541(int p0);
	void _0x0113EAE4();
	void _0xDCBA251B();
	void _0x513D444B(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0xB2410EAB(int p0);
	int _0x5AB94128();
	int _0xD63FCB3E(int p0, int p1);
	int START_PARTICLE_FX_NON_LOOPED_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	int _START_FWPARTICLE_FX_NON_LOOPED_AT_COORD(char* FWType, float* xCoord, float* yCoord, float* zCoord, float unk, float unk2, float size, int unk3, int unk4, int unk5, int unk6);
	int START_PARTICLE_FX_NON_LOOPED_ON_PED_BONE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int _0x161780C1(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int START_PARTICLE_FX_NON_LOOPED_ON_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void _0x7B689E20(int Red, int Green, int Blue);
	void SET_PARTICLE_FX_NON_LOOPED_ALPHA(int p0);
	int START_PARTICLE_FX_LOOPED_AT_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int START_PARTICLE_FX_LOOPED_ON_PED_BONE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int START_PARTICLE_FX_LOOPED_ON_ENTITY(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int _0x110752B2(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void STOP_PARTICLE_FX_LOOPED(int p0, int p1);
	void REMOVE_PARTICLE_FX(int p0, int p1);
	void REMOVE_PARTICLE_FX_FROM_ENTITY(int p0);
	void REMOVE_PARTICLE_FX_IN_RANGE(int p0, int p1, int p2, int p3);
	int DOES_PARTICLE_FX_LOOPED_EXIST(int p0);
	void SET_PARTICLE_FX_LOOPED_OFFSETS(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_PARTICLE_FX_LOOPED_EVOLUTION(int p0, int p1, int p2);
	void SET_PARTICLE_FX_LOOPED_COLOUR(int p0, int p1, int p2, int p3, int p4);
	void SET_PARTICLE_FX_LOOPED_ALPHA(int p0, int p1);
	void SET_PARTICLE_FX_LOOPED_SCALE(int p0, int p1);
	void _0x233DE879(int p0, int p1);
	void SET_PARTICLE_FX_CAM_INSIDE_VEHICLE(int p0);
	void _0x6B125A02(int p0, int p1);
	void _0xD938DEE0(int p0);
	void _0xD6844637();
	void SET_PARTICLE_FX_BLOOD_SCALE(int p0);
	void SET_CAMERA_ENDTIME(int p0);
	void _0xCE8B8748(int p0);
	void _0xC1AD5DDF(int p0);
	void _0x3968E915(int p0);
	void _0x64BA4648(int p0);
	void _0x8BE3D47F(int p0);
	void _0xE3880F5A(int p0);
	void _0x9C720B61(int p0);
	void _0xC92719A7(int p0, int p1);
	void _0x9E8D8B72(int p0);
	void WASH_DECALS_IN_RANGE(int p0, int p1, int p2, int p3, int p4);
	void WASH_DECALS_FROM_VEHICLE(int p0, int p1);
	void FADE_DECALS_IN_RANGE(int p0, int p1, int p2, int p3, int p4);
	void REMOVE_DECALS_IN_RANGE(int p0, int p1, int p2, int p3);
	void REMOVE_DECALS_FROM_OBJECT(int p0);
	void REMOVE_DECALS_FROM_OBJECT_FACING(int p0, int p1, int p2, int p3);
	void REMOVE_DECALS_FROM_VEHICLE(int p0);
	int ADD_DECAL(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13, int p14, int p15, int p16, int p17, int p18, int p19);
	int ADD_PETROL_DECAL(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0xE3938B0B(int p0);
	void _0xBAEC6ADD(int p0, int p1, int p2, int p3);
	void SET_CAMERA_CAMERA_FORWARD();
	void REMOVE_DECAL(int p0);
	int IS_DECAL_ALIVE(int p0);
	int GET_DECAL_WASH_LEVEL(int p0);
	void _0xEAB6417C();
	void _0xC2703B88();
	void _0xA706E84D();
	int _0x242C6A04(int p0, int p1, int p2, int p3);
	void _0x335695CF(int p0, int p1, int p2);
	void _0x7B786555(int p0);
	void MOVE_VEHICLE_DECALS(int p0, int p1);
	int _0x12077738(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void _0x667046A8(int p0);
	int _0x4F4D76E8(int p0);
	int _0x6D58F73B(int p0);
	void _0x9BABCBA4(int p0);
	void _0xFDF6D8DA(int p0);
	void _0x2056A015(int p0);
	void _0x0F486429(int p0);
	void _0xD87CC710(int p0);
	void _0xE29EE145();
	void DISABLE_VEHICLE_DISTANTLIGHTS(int p0);
	void _0x60F72371(int p0);
	void _0xC53576CA(int p0);
	void _0x7158B1EA(int p0);
	void SET_TIMECYCLE_MODIFIER(char* CycleType);
	void SET_TIMECYCLE_MODIFIER_STRENGTH(int p0);
	void SET_TRANSITION_TIMECYCLE_MODIFIER(int p0, int p1);
	void _0x56345F6B(int p0);
	void CLEAR_TIMECYCLE_MODIFIER();
	int GET_TIMECYCLE_MODIFIER_INDEX();
	int _0x03C44E4B();
	void PUSH_TIMECYCLE_MODIFIER();
	void POP_TIMECYCLE_MODIFIER();
	void _0x85BA15A4(int p0);
	void _0x9559BB38(int p0);
	void _0x554BA16E(int p0);
	void _0xE8F538B5(int p0, int p1);
	void _0x805BAB08(int p0);
	void _0x908A335E(int p0);
	void _0x6776720A();
	int REQUEST_SCALEFORM_MOVIE(char* p0);
	int DRAW_SCALEFORM_MOVIE_FULLSCREEN(int scaleform, int red, int green, int blue, int alpha, bool unk);
	int _POP_SCALEFORM_MOVIE_FUNCTION_VOID();
	void _BEGIN_TEXT_COMPONENT(char *componentType);
	void _END_TEXT_COMPONENT();
	int _0x7CC8057D(int p0);
	int HAS_SCALEFORM_MOVIE_LOADED(int p0);
	int _0x1DFE8D8A(int p0);
	void SET_SCALEFORM_MOVIE_AS_NO_LONGER_NEEDED(int p0);
	void _0x18C9DE8D(int p0, int p1);
	void DRAW_SCALEFORM_MOVIE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x7B48E696(int p0, int p1, int p2, int p3, int p4);
	void _0x9C59FC06(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0xC4F63A89(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void _0x899933C8(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void _0x7AB77B57(int p0, int p1);
	void _0x557EDA1D(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0x91A7FCEB(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0x6EAF56DE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int _0x5D66CE1E(int p0, int p1);
	int _0x215ABBE8(int p0, int p1);
	int _0xF6015178(int p0);
	int _0x5E219B67(int p0);
	void _0x02DBF2D7();
	int _0x2F38B526();
	int _0x5CD7C3C0(int p0);
	int _0x2CFB0E6D(int p0);
	int SITTING_TV(int p0);
	void _0x716777CB(int p0);
	void _0x9A01FFDA(int p0);
	void _0x0D4AE8CB(int p0);
	void _0x3AC9CB55(int p0);
	void _0x386CE0B8();
	void _0x2E80DB52();
	void _0x4DAAD55B(int p0);
	void _0xCCBF0334(int p0);
	int _0x91A081A1(int p0);
	void _0x83A9811D(int p0);
	void _0x7AF85862(int p0);
	int _0x79B43255(int p0);
	void _0x03D87600(int p0);
	int _0xE9183D3A(int p0);
	void SET_TV_CHANNEL(int p0);
	int GET_TV_CHANNEL();
	void SET_TV_VOLUME(int p0);
	int GET_TV_VOLUME();
	void DRAW_TV_CHANNEL(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0xB262DE67(int p0, int p1, int p2);
	void _0x78C4DCBE(int p0, int p1, int p2);
	void _0xCBE7068F(int p0);
	int _0x4D1EB0FB(int p0);
	void _0x796DE696(int p0);
	void _0xD99EC000(int p0);
	void ENABLE_MOVIE_SUBTITLES(int p0);
	int _0xE40A0F1A();
	int _0x2E7D9B98(int p0);
	int _0x9A0E3BFE(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x6BBDE6CD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void _0x431AA036();
	void _0x24A7A7F6(int p0);
	void _0xA1CB6C94(int p0);
	void _0x3B637AA7(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	void _0xDF552973(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	void _0x1D980479(char* p0, int p1, int p2);
	void _0x06BB5CDA(int p0);
	int _0x089D5921(int p0);
	void _0x4E6D875B();
	int _PUSH_SCALEFORM_MOVIE_FUNCTION(int scaleform, const char *functionName);
	void _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_INT(int p0);
	void _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_FLOAT(float p0);
	void _PUSH_SCALEFORM_MOVIE_FUNCTION_PARAMETER_BOOL(bool p0);
}

namespace STATS
{
	int _0x84BDD475(int p0);
	int STAT_LOAD(int p0);
	int STAT_SAVE(int p0, int p1, int p2);
	void _0xC62406A6(int p0);
	int STAT_LOAD_PENDING(int p0);
	int STAT_SAVE_PENDING();
	int _0xA3407CA3();
	int STAT_DELETE_SLOT(int p0);
	int _0x7A299C13(int p0);
	int _0x0BF0F4B2(int p0);
	int _0xCE6B62B5(int p0);
	void _0xCE7A2411(int p0);
	int _0x22804C20(int p0);
	void _0x395D18B1(int p0);
	int _0xED7000C8();
	int _0x099FCC86();
	int STAT_SET_INT(int statName, int value, int save);
	int STAT_SET_FLOAT(int statName, float value, int save);
	int STAT_SET_BOOL(int statName, int value, int save);
	int _0xC1224AA7(int p0, int p1, int p2);
	int STAT_SET_DATE(int p0, int p1, int p2, int p3);
	int STAT_SET_STRING(int statName, char* value, int save);
	int STAT_SET_POS(int p0, int p1, int p2, int p3, int p4);
	int STAT_SET_MASKED_INT(int p0, int p1, int p2, int p3, int p4);
	int STAT_SET_USER_ID(int p0, int p1, int p2);
	int _0xA286F015(int p0, int p1);
	int STAT_GET_INT(int statHash, int* valuePointer, int p2);
	int STAT_GET_FLOAT(int statHash, float* valuePointer, int p2);
	int STAT_GET_BOOL(int statHash, int* valuePointer, int p2);
	int STAT_GET_DATE(int p0, int p1, int p2, int p3);
	int STAT_GET_STRING(int p0, int p1);
	int STAT_GET_POS(int p0, int p1, int p2, int p3, int p4);
	int STAT_GET_MASKED_INT(int p0, int p1, int p2, int p3, int p4);
	int STAT_GET_USER_ID(int p0);
	int _0x1544B29F(int p0);
	int _0x3507D253(int p0, int p1);
	void STAT_INCREMENT(char* statName, int Value);
	int _0x46F21343();
	int _0x02F283CE();
	int _0xC4110917(int p0, int p1, int p2);
	void _0x343B27E2(int p0);
	void _0xE3247582(int p0);
	int _0xFD66A429(int p0);
	int _0x9B431236(int p0);
	int _0x347B4436(int p0);
	int _0x2C1D6C31(int p0);
	void _0x24DD4929(int p0, int p1);
	int _0xDFC25D66(int p0);
	int _0xCA160BCC(int p0);
	int _0xB5BF87B2(int p0, int p1, int p2, int p3);
	int _0x1F938864(int p0, int p1, int p2, int p3);
	int _0x3F8E893B(int p0, int p1, int p2, int p3);
	int _0xFB93C5A2(int p0, int p1, int p2, int p3);
	int STAT_GET_BOOL_MASKED(int p0, int p1, int p2);
	int STAT_SET_BOOL_MASKED(int p0, int p1, int p2, int p3);
	void _0x61ECC465(int p0, int p1);
	void PLAYSTATS_NPC_INVITE(int p0);
	void PLAYSTATS_AWARD_XP(int p0, int p1, int p2);
	void PLAYSTATS_RANK_UP(int p0);
	void _0x896CDF8D();
	void _0x1A66945F(int p0, int p1);
	void _0xC960E161(int p0, int p1, int p2, int p3, int p4);
	void PLAYSTATS_MISSION_STARTED(int p0, int p1, int p2, int p3);
	void PLAYSTATS_MISSION_OVER(int p0, int p1, int p2, int p3, int p4, int p5);
	void PLAYSTATS_MISSION_CHECKPOINT(int p0, int p1, int p2, int p3);
	void _0xAC2C7C63(int p0, int p1, int p2, int p3);
	void _0x413539BC(int p0, int p1, int p2, int p3);
	void PLAYSTATS_RACE_CHECKPOINT(int p0, int p1, int p2, int p3, int p4);
	int _0x489E27E7(int p0, int p1);
	void PLAYSTATS_MATCH_STARTED(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void PLAYSTATS_SHOP_ITEM(int p0, int p1, int p2, int p3, int p4);
	void _0x6602CED6(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x759E0EC9(int p0, int p1, int p2, int p3);
	void _0x62073DF7(int p0, int p1, int p2, int p3);
	void _0x30558CFD(int p0, int p1, int p2);
	void _0x06CE3692(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void _0x8D5C7B37(int p0);
	void _0x37D152BB(int p0, int p1);
	void PLAYSTATS_FRIEND_ACTIVITY(int p0, int p1);
	void PLAYSTATS_ODDJOB_DONE(int p0, int p1, int p2);
	void PLAYSTATS_PROP_CHANGE(int p0, int p1, int p2, int p3);
	void PLAYSTATS_CLOTH_CHANGE(int p0, int p1, int p2, int p3, int p4);
	void _0x79716890(int p0, int p1, int p2);
	void PLAYSTATS_CHEAT_APPLIED(int p0);
	void _0x04181752(int p0, int p1, int p2, int p3);
	void _0x31002201(int p0, int p1, int p2, int p3);
	void _0xDDD1F1F3(int p0, int p1, int p2, int p3);
	void _0x66FEB701(int p0, int p1);
	void _0x9E2B9522(int p0);
	int LEADERBOARDS_GET_NUMBER_OF_COLUMNS(int p0, int p1);
	int LEADERBOARDS_GET_COLUMN_ID(int p0, int p1, int p2);
	int LEADERBOARDS_GET_COLUMN_TYPE(int p0, int p1, int p2);
	int LEADERBOARDS_READ_CLEAR_ALL();
	int LEADERBOARDS_READ_CLEAR(int p0, int p1, int p2);
	int LEADERBOARDS_READ_PENDING(int p0, int p1, int p2);
	int _0x1789437B();
	int LEADERBOARDS_READ_SUCCESSFUL(int p0, int p1, int p2);
	int LEADERBOARDS2_READ_FRIENDS_BY_ROW(int p0, int p1, int p2, int p3, int p4, int p5);
	int LEADERBOARDS2_READ_BY_HANDLE(int p0, int p1);
	int LEADERBOARDS2_READ_BY_ROW(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int LEADERBOARDS2_READ_BY_RANK(int p0, int p1, int p2);
	int LEADERBOARDS2_READ_BY_RADIUS(int p0, int p1, int p2);
	int LEADERBOARDS2_READ_BY_SCORE_INT(int p0, int p1, int p2);
	int LEADERBOARDS2_READ_BY_SCORE_FLOAT(int p0, int p1, int p2);
	int _0x9BEC3401(int p0, int p1, int p2);
	int _0xC977D6E2(int p0);
	void _0xF2DB6A82();
	int _0x766A74FE(int p0, int p1);
	int _0x6B90E730(int p0, int p1);
	int _0x509A286F(int p0, int p1);
	int LEADERBOARDS2_WRITE_DATA(int p0);
	void _0x7524E27B(int p0, int p1, int p2);
	void _0x1C5CCC3A(int p0, int p1, int p2);
	int LEADERBOARDS_CACHE_DATA_ROW(int p0);
	void LEADERBOARDS_CLEAR_CACHE_DATA();
	void _0x88AE9667(int p0);
	int LEADERBOARDS_GET_CACHE_EXISTS(int p0);
	int LEADERBOARDS_GET_CACHE_TIME(int p0);
	int _0xCE7CB520(int p0);
	int LEADERBOARDS_GET_CACHE_DATA_ROW(int p0, int p1, int p2);
	void _0x4AC39C6C(int p0, int p1, int p2);
	void _0x3E69E7C3(int p0, int p1, int p2);
	void _0x2FFD2FA5(int p0, int p1, int p2, int p3);
	int _0x23D70C39();
	void _0x0AD43306();
	void _0xC7DE5C30();
	void _0xA3DAC790(int p0);
	void _0x726FAE66(int p0);
	void _0xF03895A4(int p0);
	void _0x4C39CF10(int p0, int p1);
	void _0x2180AE13(int p0, int p1);
	void _0xEE292B91(int p0, int p1);
	void _0xA063CABD();
	int _0x62C19A3D(int p0, int p1);
	void _0x3B4EF322();
	int _0x54E775E0();
	int _0xE3F0D62D(int p0);
}

namespace BRAIN
{
	void ADD_SCRIPT_TO_RANDOM_PED(int p0, int p1, int p2, int p3);
	void REGISTER_OBJECT_SCRIPT_BRAIN(int p0, int p1, int p2, int p3, int p4, int p5);
	int IS_OBJECT_WITHIN_BRAIN_ACTIVATION_RANGE(int p0);
	void REGISTER_WORLD_POINT_SCRIPT_BRAIN(int p0, int p1, int p2);
	int IS_WORLD_POINT_WITHIN_BRAIN_ACTIVATION_RANGE();
	void ENABLE_SCRIPT_BRAIN_SET(int p0);
	void DISABLE_SCRIPT_BRAIN_SET(int p0);
	void _0x19B27825();
	void _0xF3A3AB08();
	void _0x949FE53E(int p0);
	void _0x29CE8BAA(int p0);
}

namespace MOBILE
{
	void CREATE_MOBILE_PHONE(int p0);
	void DESTROY_MOBILE_PHONE();
	void SET_MOBILE_PHONE_SCALE(int p0);
	void SET_MOBILE_PHONE_ROTATION(int p0, int p1, int p2, int p3);
	void GET_MOBILE_PHONE_ROTATION(int p0, int p1);
	void SET_MOBILE_PHONE_POSITION(int p0, int p1, int p2);
	void GET_MOBILE_PHONE_POSITION(int p0);
	void SCRIPT_IS_MOVING_MOBILE_PHONE_OFFSCREEN(int p0);
	int CAN_PHONE_BE_SEEN_ON_SCREEN();
	void CELL_CAM_ACTIVATE(int p0, int p1);
	void _0x4479B304(int p0);
	void _0xC273BB4D(int p0);
	void _0x66DCD9D2(int p0);
	int CELL_CAM_IS_CHAR_VISIBLE_NO_FACE_CHECK(int p0);
	void GET_MOBILE_PHONE_RENDER_ID(int p0);
}

namespace APP
{
	int APP_DATA_VALID();
	int APP_GET_INT(int p0);
	int APP_GET_FLOAT(int p0);
	int APP_GET_STRING(int p0);
	void APP_SET_INT(int p0, int p1);
	void APP_SET_FLOAT(int p0, int p1);
	void APP_SET_STRING(int p0, int p1);
	void APP_SET_APP(int p0);
	void APP_SET_BLOCK(int p0);
	void APP_CLEAR_BLOCK();
	void APP_CLOSE_APP();
	void APP_CLOSE_BLOCK();
	int _0xD368BA15();
	int APP_HAS_SYNCED_DATA(int p0);
	void APP_SAVE_DATA();
	int _0x784D550B();
	int APP_DELETE_APP_DATA(int p0);
}

namespace TIME
{
	void SET_CLOCK_TIME(int p0, int p1, int p2);
	void PAUSE_CLOCK(int p0);
	void _0x57B8DA7C(int p0, int p1, int p2);
	void ADD_TO_CLOCK_TIME(int p0, int p1, int p2);
	int GET_CLOCK_HOURS();
	int GET_CLOCK_MINUTES();
	int GET_CLOCK_SECONDS();
	void SET_CLOCK_DATE(int p0, int p1, int p2);
	int GET_CLOCK_DAY_OF_WEEK();
	int GET_CLOCK_DAY_OF_MONTH();
	int GET_CLOCK_MONTH();
	int GET_CLOCK_YEAR();
	int _0x3B74095C();
	void GET_POSIX_TIME(int p0, int p1, int p2, int p3, int p4, int p5);
	void GET_LOCAL_TIME(int p0, int p1, int p2, int p3, int p4, int p5);
}

namespace PATHFIND
{
	void SET_ROADS_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	void SET_ROADS_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void SET_PED_PATHS_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int GET_SAFE_COORD_FOR_PED(float x, float y, float z, int p3, int* outVector, int p5);
	int GET_CLOSEST_VEHICLE_NODE(float x, float y, float z, float* nodeX, int p4, float p5, float p6);
	int GET_CLOSEST_MAJOR_VEHICLE_NODE(int p0, int p1, int p2, int p3, int p4, int p5);
	int GET_CLOSEST_VEHICLE_NODE_WITH_HEADING(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int GET_NTH_CLOSEST_VEHICLE_NODE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int GET_NTH_CLOSEST_VEHICLE_NODE_ID(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int GET_NTH_CLOSEST_VEHICLE_NODE_WITH_HEADING(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int GET_NTH_CLOSEST_VEHICLE_NODE_ID_WITH_HEADING(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int GET_NTH_CLOSEST_VEHICLE_NODE_FAVOUR_DIRECTION(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int GET_VEHICLE_NODE_PROPERTIES(int p0, int p1, int p2, int p3, int p4);
	int IS_VEHICLE_NODE_ID_VALID(int p0);
	void GET_VEHICLE_NODE_POSITION(int p0, int p1);
	int _0xEE4B1219(int p0);
	int _0x56737A3C(int p0);
	int GET_CLOSEST_ROAD(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	int LOAD_ALL_PATH_NODES(int p0);
	void _0xD6A3B458(int p0);
	int _0x86E80A17(int p0, int p1, int p2, int p3);
	int _0x2CDA5012(int p0, int p1, int p2, int p3);
	void SET_ROADS_BACK_TO_ORIGINAL(int p0, int p1, int p2, int p3, int p4, int p5);
	void SET_ROADS_BACK_TO_ORIGINAL_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0x3C5085E4(int p0);
	void _0xD0F51299(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_PED_PATHS_BACK_TO_ORIGINAL(int p0, int p1, int p2, int p3, int p4, int p5);
	int GET_RANDOM_VEHICLE_NODE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void GET_STREET_NAME_AT_COORD(int p0, int p1, int p2, int p3, int p4);
	int GENERATE_DIRECTIONS_TO_COORD(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_IGNORE_NO_GPS_FLAG(int p0);
	void _0x90DF7A4C(int p0);
	void SET_GPS_DISABLED_ZONE(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x4B770634();
	int _0x286F82CC();
	int _0xF6422F9A(int p0, int p1, int p2, int p3, int p4);
	int IS_POINT_ON_ROAD(int p0, int p1, int p2, int p3);
	void ADD_NAVMESH_REQUIRED_REGION(int p0, int p1, int p2);
	void REMOVE_NAVMESH_REQUIRED_REGIONS();
	void DISABLE_NAVMESH_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int ARE_ALL_NAVMESH_REGIONS_LOADED();
	int IS_NAVMESH_LOADED_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	int ADD_NAVMESH_BLOCKING_OBJECT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void UPDATE_NAVMESH_BLOCKING_OBJECT(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void REMOVE_NAVMESH_BLOCKING_OBJECT(int p0);
	int _0x4B67D7EE(int p0);
	int _0x3FE8C5A0(int p0, int p1);
	int _0x3ED21C90(int p0, int p1, int p2, int p3);
	int _0xA07C5B7D(int p0, int p1);
	int _0x76751DD4(int p0, int p1, int p2, int p3);
	int CALCULATE_TRAVEL_DISTANCE_BETWEEN_POINTS(int p0, int p1, int p2, int p3, int p4, int p5);
}

namespace CONTROLS
{
	int IS_CONTROL_ENABLED(int Index, int Control);
	int IS_CONTROL_PRESSED(int Index, int Control);
	int IS_CONTROL_RELEASED(int Index, int Control);
	int IS_CONTROL_JUST_PRESSED(int Index, int Control);
	int IS_CONTROL_JUST_RELEASED(int Index, int Control);
	int GET_CONTROL_VALUE(int p0, int p1);
	int GET_CONTROL_NORMAL(int p0, int p1);
	int _0xC49343BB(int p0, int p1);
	int IS_DISABLED_CONTROL_PRESSED(int Index, int Control);
	int IS_DISABLED_CONTROL_JUST_PRESSED(int Index, int Control);
	int IS_DISABLED_CONTROL_JUST_RELEASED(int Index, int Control);
	int GET_DISABLED_CONTROL_NORMAL(int p0, int p1);
	int _0xF2A65A4C(int p0, int p1);
	int _0x0E8EF929(int p0);
	int _0x3551727A(int p0, int p1, int p2);
	int _0x3EE71F6A(int p0, int p1, int p2);
	void SET_PAD_SHAKE(int p0, int p1, int p2);
	void STOP_PAD_SHAKE(int p0);
	void _0x7D65EB6E(int p0, int p1);
	void SET_CONTROL_SHAKE(int p0, int p1, int p2);
	int IS_LOOK_INVERTED();
	int GET_LOCAL_PLAYER_AIM_STATE();
	void SET_PLAYERPAD_SHAKES_WHEN_CONTROLLER_DISABLED(int p0);
	void SET_INPUT_EXCLUSIVE(int Index, int Control);
	void DISABLE_CONTROL_ACTION(int Index, int Control);
	void ENABLE_CONTROL_ACTION(int Index, int Control);
	void DISABLE_ALL_CONTROL_ACTIONS(int Index);
	void ENABLE_ALL_CONTROL_ACTIONS(int Index);
	int _0xD2C80B2E(char* p0);
	int _0xBBFC9050(int p0);
	void _0x42140FF9();
	void _0x2CEDE6C5(int p0);
}

namespace DATAFILE
{
	void _0x621388FF(int p0);
	int _0xB41064A4(int p0);
	int _0x9DB63CFF(int p0);
	int _0xF09157B0(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0xD96860FC(int p0, int p1, int p2, int p3, int p4);
	int _0x459F2683(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0xDBB83E2B(int p0, int p1, int p2, int p3, int p4);
	int _0xBB6321BD(int p0, int p1, int p2);
	int _0xE8D56DA2(int p0);
	int _0xCB6A351E(int p0, int p1);
	int _0xA4D1B30E(int p0);
	int _0xB8515B2F(int p0);
	int _0x660C468E(int p0);
	void DATAFILE_CREATE();
	void DATAFILE_DELETE();
	void _0x4E03F632();
	void _0xF11F956F();
	int PRELOAD_FIND();
	int _0x768CBB35(int p0);
	int _0x0B4087F7(int p0);
	int _0x5DCD0796();
	void _0x9B29D99B(int p0, int p1, int p2);
	void _0xEFCF554A(int p0, int p1, int p2);
	void _0xE972CACF(int p0, int p1, int p2);
	void _0xD437615C(int p0, int p1, int p2);
	void _0x75FC6C3C(int p0, int p1, int p2, int p3, int p4);
	int _0x96A8E05F(int p0, int p1);
	int _0x03939B8D(int p0, int p1);
	int _0x8876C872(int p0, int p1);
	int _0xA6C68693(int p0, int p1);
	int _0xA92C1AF4(int p0, int p1);
	int _0x942160EC(int p0, int p1);
	Vector3 _0xE84A127A(int p0, int p1);
	int _0xC9C13D8D(int p0, int p1);
	int _0x1F2F7D00(int p0, int p1);
	int _0x2678342A(int p0, int p1);
	void _0x08174B90(int p0, int p1);
	void _0xF29C0B36(int p0, int p1);
	void _0xE4302123(int p0, int p1);
	void _0xF3C01350(int p0, int p1);
	void _0x16F464B6(int p0, int p1, int p2, int p3);
	int _0xC174C71B(int p0);
	int _0xA2E5F921(int p0, int p1);
	int _0xBB120CFC(int p0, int p1);
	int FOCUS_USE_SPLINE(int p0, int p1);
	int OVERIDE_TEXTURENAMES(int p0, int p1);
	Vector3 _0x80E3DA55(int p0, int p1);
	int _0xECE81278(int p0, int p1);
	int _0xA8A21766(int p0);
	int _0xFA2402C8(int p0, int p1);
}

namespace FIRE
{
	int START_SCRIPT_FIRE(int p0, int p1, int p2, int p3, int p4);
	void REMOVE_SCRIPT_FIRE(int p0);
	int START_ENTITY_FIRE(int entity);
	void STOP_ENTITY_FIRE(int entity);
	int IS_ENTITY_ON_FIRE(int p0);
	int GET_NUMBER_OF_FIRES_IN_RANGE(int p0, int p1, int p2, int p3);
	void STOP_FIRE_IN_RANGE(int p0, int p1, int p2, int p3);
	int GET_CLOSEST_FIRE_POS(int p0, int p1, int p2, int p3);
	void ADD_EXPLOSION(Vector3 pos, int ExplosionType, float ExplosionRadius, int isAudible, int isVisible, float CameraShake);
	void ADD_OWNED_EXPLOSION(int Handle, Vector3 pos, int ExlosionType, float ExplosionRadius, int IsAudible, int IsVisible, float CamerShake);
	void _0xCF358946(float* XCoord, float* YCoord, float* ZCoord, int unk, int ExplsionFX, float ExlosionRadius, int isAudible, int isVisible, float unk2);
	int IS_EXPLOSION_IN_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int IS_EXPLOSION_IN_SPHERE(int p0, int p1, int p2, int p3, int p4);
	int IS_EXPLOSION_IN_ANGLED_AREA(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0xAEC0D176(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
}

namespace DECISIONEVENT
{
	void SET_DECISION_MAKER(int p0, int p1);
	void CLEAR_DECISION_MAKER_EVENT_RESPONSE(int p0, int p1);
	void _0x57506EA6(int p0, int p1);
	void _0x62A3161D(int p0, int p1);
	int ADD_SHOCKING_EVENT_AT_POSITION(int p0, int p1, int p2, int p3, int p4);
	int ADD_SHOCKING_EVENT_FOR_ENTITY(int p0, int p1, int p2);
	int IS_SHOCKING_EVENT_IN_SPHERE(int p0, int p1, int p2, int p3, int p4);
	int REMOVE_SHOCKING_EVENT(int p0);
	void REMOVE_ALL_SHOCKING_EVENTS(int p0);
	void _0xA0CE89C8();
	void _0x4CC674B5();
	void _0xA0FDCB82(int p0);
	void _0x80340396();
}

namespace ZONE
{
	int GET_ZONE_AT_COORDS(float x, float y, float z);
	int _0x8EC68304(int p0);
	int GET_ZONE_POPSCHEDULE(int p0);
	char* GET_NAME_OF_ZONE(float x, float y, float z);
	void SET_ZONE_ENABLED(int p0, int p1);
	int GET_ZONE_SCUMMINESS(int p0);
	void _0x3F0A3680(int p0, int p1);
	void _0x7A72A24E(int p0);
	int _0xB5C5C99B(int p0, int p1, int p2);
}

namespace ROPE
{
	int ADD_ROPE(float position_x, float position_y, float position_z, float angle_x, float angle_y, float angle_z, float length, int type, float max_length, float min_length, float p10, int p11, int p12, int p13, float p14, int breakable, int p16);
	void DELETE_ROPE(int rope);
	void DELETE_CHILD_ROPE(int rope);
	int DOES_ROPE_EXIST(int rope);
	void _0x51523B8C(int p0, int p1);
	void LOAD_ROPE_DATA(int rope, char* rope_preset);
	void PIN_ROPE_VERTEX(int rople, int vertex, float x, float y, float z);
	void UNPIN_ROPE_VERTEX(int rope, int vertex);
	int GET_ROPE_VERTEX_COUNT(int rope);
	void ATTACH_ENTITIES_TO_ROPE(int rope, int ent1, int ent2, float ent1_x, float ent1_y, float ent1_z, float ent2_x, float ent2_y, float ent2_z, float length, int p10, int p11, int p12, int p13);
	void ATTACH_ROPE_TO_ENTITY(int rope, int entity, float x, float y, float z, int p5);
	void DETACH_ROPE_FROM_ENTITY(int rope, int entity);
	void _0xEAF291A0(int p0);
	void _0x80DB77A7(int p0, int p1);
	void _0xC67D5CF6(int p0, int p1);
	int _0x7A18BB9C(int p0);
	Vector3 GET_ROPE_LAST_VERTEX_COORD(int rope);
	Vector3 GET_ROPE_VERTEX_COORD(int rope, int vertex);
	void _0x5187BED3(int p0);
	void _0x46826B53(int p0);
	void _0xFC0DB4C3(int p0);
	void _0x2EEDB18F(int p0);
	void _0x43E92628(int p0);
	void ROPE_LOAD_TEXTURES();
	int _0x5FDC1047();
	void ROPE_UNLOAD_TEXTURES();
	int _0x67522E25(int p0);
	void _0x106BA127(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12, int p13);
	void _0x7C6F7668(int p0, int p1, int p2);
	void _0x686672DD(int p0, int p1);
	int _0xFD309DC8(int p0);
	void ROPE_FORCE_LENGTH(int rope, float length);
	void ROPE_RESET_LENGTH(int rope, float length);
	void _0xA2A5C9FE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void SET_DAMPING(int p0, int p1, int p2);
	void ACTIVATE_PHYSICS(int rope);
	void _0x59910AB2(int p0, int p1, int p2, int p3);
	Vector3 _0x49A11F0D(int p0);
	void _0xA5B55421(int p0);
	void BREAK_ENTITY_GLASS(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10);
	void SET_DISABLE_BREAKING(int rope, int enabled);
	void _0x97269DC8(int p0, int p1);
}

namespace WATER
{
	int GET_WATER_HEIGHT(float x, float y, float p2, float p3);
	int GET_WATER_HEIGHT_NO_WAVES(int p0, int p1, int p2, int p3);
	int _0xAA4AE00C(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	int _0x4A962D55(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7);
	int _0x4C71D143(int p0, int p1, int p2, int p3, int p4);
	void MODIFY_WATER(float p0, float p1, float p2, int p3);
}

namespace WORLDPROBE
{
	int _0xEFAF4BA6(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0x8251485D(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0xCEEAD94B(int p0, int p1, int p2);
	int _0x249BC876(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11, int p12);
	int _0x13BC46C0(int p0, int p1, int p2);
	int _0x591EA833(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int _0x4559460A(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	int _0xF3C2875A(int p0, int p1, int p2, int p3, int p4);
	int _0x4301E10C(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0xEC2AAF06(int p0);
}

namespace NETWORK
{
	int NETWORK_IS_SIGNED_IN();
	int NETWORK_IS_SIGNED_ONLINE();
	int _0x3FB40673();
	int NETWORK_IS_CLOUD_AVAILABLE();
	int _0x66EC713F();
	int _0x358D1D77();
	int NETWORK_IS_HOST();
	int NETWORK_HAVE_ONLINE_PRIVILEGES();
	int _0x1F88819D(int p0);
	int _0x2D817A5E(int p0, int p1);
	int _0xBB54AA3D(int p0, int p1, int p2);
	int _0xA79E5B05(int p0, int p1, int p2);
	int _0xEB864288();
	int _0xAB07CBBE();
	int _0x60E1FEDF();
	void NETWORK_BAIL();
	void _0x96E28FE2();
	int _0xA520B982(int p0);
	int _0x05518C0F();
	int NETWORK_CAN_ENTER_MULTIPLAYER();
	int NETWORK_SESSION_ENTER(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x4E53202A(int p0, int p1, int p2, int p3);
	int _0xD7624E6B(int p0, int p1, int p2, int p3, int p4);
	int _0x3F75CC38(int p0, int p1, int p2, int p3);
	int NETWORK_SESSION_HOST(int p0, int p1, int p2);
	int _0x8AC9EA19(int p0, int p1);
	int NETWORK_SESSION_HOST_FRIENDS_ONLY(int p0, int p1);
	int _0x56E75FE4();
	int _0xA95299B9();
	int _0x3D2C1916();
	int _0xDB67785D();
	int NETWORK_SESSION_END(int p0, int p1);
	void NETWORK_SESSION_KICK_PLAYER(int p0);
	int _0x8A559D26(int p0);
	void _0x3C3E2AB6(int p0);
	void _0x5F29A7E0(int p0, int p1);
	int _0x36EAD960(int p0);
	void _0x5BE529F7(int p0);
	void _0x454C7B67(int p0);
	void _0xE5961511(int p0);
	void _0xAE396263(int p0);
	void _0x913FD7D6(int p0);
	void _0xB3D9A67F(int p0);
	void _0x6CC062FC(int p0);
	void _0x57F9BC83();
	void _0xF3768F90(int p0);
	void _0x0EC62629(int p0, int p1);
	void _0x5E557307();
	void _0x74E8C53E(int p0, int p1, int p2);
	void _0x959E43A3(int p0);
	int _0x7771AB83(int p0);
	int _0xA13045D4(int p0, int p1, int p2, int p3);
	int NETWORK_IS_FINDING_GAMERS();
	int _0xBEDC4503();
	int NETWORK_GET_NUM_FOUND_GAMERS();
	int NETWORK_GET_FOUND_GAMER(int p0, int p1);
	void NETWORK_CLEAR_FOUND_GAMERS();
	int _0x42BD0780(int p0);
	int _0xBEB98840();
	int _0x08029970();
	int _0xC871E745();
	int _0xB5ABC4B4(int p0, int p1);
	void _0x3F7EDBBD();
	void NETWORK_IS_PLAYER_ANIMATION_DRAWING_SYNCHRONIZED();
	void NETWORK_SESSION_CANCEL_INVITE();
	void _0x3FD49D3B();
	int NETWORK_HAS_PENDING_INVITE();
	int _0xFBBAC350();
	int _0x0907A6BF();
	int _0x6A0BEA60();
	void NETWORK_SESSION_GET_INVITER(int p0);
	int _0x3EA9D44C();
	void NETWORK_SUPPRESS_INVITE(int p0);
	void NETWORK_BLOCK_INVITES(int p0);
	void _0x32B7A076();
	void _0x0FCE995D(int p0);
	void _0xA639DCA2(int p0);
	int _0x70ED476A();
	void _0x50507BED();
	void NETWORK_SESSION_HOST_SINGLE_PLAYER(int p0);
	void NETWORK_SESSION_LEAVE_SINGLE_PLAYER();
	int NETWORK_IS_GAME_IN_PROGRESS();
	int NETWORK_IS_SESSION_ACTIVE();
	int NETWORK_IS_IN_SESSION();
	int NETWORK_IS_SESSION_STARTED();
	int NETWORK_IS_SESSION_BUSY();
	int NETWORK_CAN_SESSION_END();
	void _0x7017257D(int p0);
	int _0x4977AC28();
	void _0xE6EEF8AF(int p0);
	void _0x6BB93227(int p0, int p1);
	int _0xE642F2FD();
	void NETWORK_SESSION_VOICE_HOST();
	void NETWORK_SESSION_VOICE_LEAVE();
	void _0x9DFD89E6(int p0);
	void NETWORK_SET_KEEP_FOCUSPOINT(int p0, int p1);
	void _0x6EFC2FD0(int p0);
	int _0x60AA4AA1();
	int _0x132CA01E();
	int NETWORK_SEND_TEXT_MESSAGE(char* Text, int* FreeMemPointer);
	void NETWORK_SET_ACTIVITY_SPECTATOR(int p0);
	int NETWORK_IS_ACTIVITY_SPECTATOR();
	void NETWORK_SET_ACTIVITY_SPECTATOR_MAX(int p0);
	int NETWORK_GET_ACTIVITY_PLAYER_NUM(int p0);
	int NETWORK_IS_ACTIVITY_SPECTATOR_FROM_HANDLE(int p0);
	int NETWORK_HOST_TRANSITION(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x2FF65C0B(int p0, int p1, int p2, int p3);
	int _0x47D61C99(int p0, int p1, int p2, int p3);
	int _0x5CE60A11(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x0D7E5CF9();
	void _0x36A5F2DA();
	int _0x95FFACF8();
	int _0xB97A966B();
	void _0x7EF353E1(int p0);
	void _0xF60986FC(int p0);
	void NETWORK_SET_TRANSITION_CREATOR_HANDLE(int p0);
	void NETWORK_CLEAR_TRANSITION_CREATOR_HANDLE();
	int NETWORK_INVITE_GAMERS_TO_TRANSITION(int p0, int p1);
	void NETWORK_SET_GAMER_INVITED_TO_TRANSITION(int p0);
	int NETWORK_LEAVE_TRANSITION();
	int NETWORK_LAUNCH_TRANSITION();
	void _0xB59D74CA();
	int NETWORK_DO_TRANSITION_TO_GAME(int p0, int p1);
	int NETWORK_DO_TRANSITION_TO_NEW_GAME(int p0, int p1, int p2);
	int NETWORK_DO_TRANSITION_TO_FREEMODE(int p0, int p1, int p2, int p3);
	int NETWORK_DO_TRANSITION_TO_NEW_FREEMODE(int p0, int p1, int p2, int p3, int p4);
	int NETWORK_IS_TRANSITION_TO_GAME();
	int NETWORK_GET_TRANSITION_MEMBERS(int p0, int p1);
	void _0xCEE79711(int p0, int p1);
	void _0xE0C28DB5(int p0, int p1, int p2);
	int NETWORK_SEND_TRANSITION_GAMER_INSTRUCTION(int p0, int p1, int p2, int p3, int p4);
	int NETWORK_MARK_TRANSITION_GAMER_AS_FULLY_JOINED(int p0);
	int NETWORK_IS_TRANSITION_HOST();
	int NETWORK_IS_TRANSITION_HOST_FROM_HANDLE(int p0);
	int NETWORK_GET_TRANSITION_HOST(int p0);
	int NETWORK_IS_IN_TRANSITION();
	int NETWORK_IS_TRANSITION_STARTED();
	int NETWORK_IS_TRANSITION_BUSY();
	int _0x8262C70E();
	void _0xC71E607B();
	void _0x82D32D07();
	int _0xC901AA9F();
	void _0xCCA9C022(int p0);
	void _0x1E5F6AEF(int p0, int p1);
	void _0x0532DDD2(int p0);
	int NETWORK_HAS_PLAYER_STARTED_TRANSITION(int p0);
	int _0xCDEBCCE7(int p0);
	int NETWORK_JOIN_TRANSITION(int p0);
	int _0x4F41DF6B(int p0);
	int NETWORK_IS_ACTIVITY_SESSION();
	void _0x18F03AFD(int p0);
	int _0x8B99B72B(int p0, int p1, int p2, int p3);
	int _0x877C0E1C(int p0, int p1, int p2, int p3);
	int _0x5E832444(int p0);
	int _0x3FDA00F3();
	int NETWORK_ACCEPT_PRESENCE_INVITE(int p0);
	int _0x93C665FA(int p0);
	int _0xD50DF46C(int p0);
	int _0x19EC65D9(int p0);
	int NETWORK_GET_PRESENCE_INVITE_HANDLE(int p0, int p1);
	int _0xC5E0C989(int p0);
	int _0xA4302183(int p0);
	int _0x51B2D848(int p0);
	int _0x4677C656(int p0);
	int _0xF5E3401C(int p0);
	int _0x7D593B4C(int p0);
	int _0xE96CFE7D();
	int _0xAB969F00();
	int _0x3242F952();
	void _0x9773F36A();
	void NETWORK_REMOVE_TRANSITION_INVITE(int p0);
	void _0xF7134E73();
	void _0xC47352E7();
	int NETWORK_INVITE_GAMERS(int p0, int p1, int p2, int p3);
	int _0xEC651BC0(int p0);
	int NETWORK_GET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(int p0);
	int NETWORK_SET_CURRENTLY_SELECTED_GAMER_HANDLE_FROM_INVITE_MENU(int p0);
	void _0x0808D4CC(int p0, int p1);
	void _0x11378777(int p0);
	int FILLOUT_PM_PLAYER_LIST(int p0, int p1, int p2);
	int FILLOUT_PM_PLAYER_LIST_WITH_NAMES(int p0, int p1, int p2, int p3);
	int USING_NETWORK_WEAPONTYPE(int p0);
	int _0xA812B6CB();
	int _0xF30E5814(int p0, int p1);
	int _0xC6609191();
	int _0x51367B34(int p0);
	int NETWORK_IS_IN_PARTY();
	int NETWORK_IS_PARTY_MEMBER(int p0);
	int _0x9156EFC0();
	int _0x8FA6EE0E();
	void _0x7F70C15A();
	void _0x8179C48A(int p0);
	void _0x41702C8A(int p0);
	int _0x208DD848();
	int _0xF9B6426D(int p0, int p1);
	int NETWORK_PLAYER_IS_CHEATER();
	int _0x1720ABA6();
	int _0xA19708E3();
	int _0xF9A51B92(int p0, int p1, int p2);
	int _0x4C2C6B6A(int p0, int p1, int p2);
	void _0x4818ACD0(int p0, int p1);
	void NETWORK_SET_THIS_SCRIPT_IS_NETWORK_SCRIPT(int p0, int p1, int p2);
	int NETWORK_GET_THIS_SCRIPT_IS_NETWORK_SCRIPT();
	int _0xCCD8C02D();
	int _0x3E25A3C5();
	int NETWORK_GET_SCRIPT_STATUS();
	void NETWORK_REGISTER_HOST_BROADCAST_VARIABLES(int p0, int p1);
	void NETWORK_REGISTER_PLAYER_BROADCAST_VARIABLES(int p0, int p1);
	void _0xA71A1D2A();
	int _0x0B739F53();
	int NETWORK_GET_PLAYER_INDEX(int Handle);
	int NETWORK_GET_PARTICIPANT_INDEX(int p0);
	int _0x40DBF464(int p0);
	int NETWORK_GET_NUM_CONNECTED_PLAYERS();
	int NETWORK_IS_PLAYER_CONNECTED(int p0);
	int _0xF4F13B06();
	int NETWORK_IS_PARTICIPANT_ACTIVE(int p0);
	int NETWORK_IS_PLAYER_ACTIVE(int p0);
	int NETWORK_IS_PLAYER_A_PARTICIPANT(int p0);
	int NET_BUT();
	int NETWORK_GET_HOST_OF_THIS_SCRIPT();
	int NETWORK_GET_HOST_OF_SCRIPT(int p0, int p1, int p2);
	void NETWORK_SET_MISSION_FINISHED();
	int NETWORK_IS_SCRIPT_ACTIVE(int p0, int p1, int p2, int p3);
	int _0x8F7D9F46(int p0, int p1, int p2);
	int _0xDB8B5D71();
	int _0xCEA55F4C(int p0, int p1, int p2);
	void _0x8DCFE77D();
	void _0x331D9A27();
	int PARTICIPANT_ID();
	int PARTICIPANT_ID_TO_INT();
	int NETWORK_GET_DESTROYER_OF_NETWORK_ID(int p0, int p1);
	int _0x28A45454(int p0, int p1, int p2);
	int NETWORK_GET_ENTITY_KILLER_OF_PLAYER(int p0, int p1);
	void NETWORK_RESURRECT_LOCAL_PLAYER(int p0, int p1, int p2, int p3, int p4, int p5);
	void NETWORK_SET_LOCAL_PLAYER_INVINCIBLE_TIME(int p0);
	int NETWORK_IS_LOCAL_PLAYER_INVINCIBLE();
	void _0x8D27280E(int p0, int p1);
	void _0xB72F086D(int p0);
	int _0xEDA68956(int p0);
	int NETWORK_GET_NETWORK_ID_FROM_ENTITY(int p0);
	int NETWORK_GET_ENTITY_FROM_NETWORK_ID(int p0);
	int _0xD7F934F4(int p0);
	int NETWORK_GET_ENTITY_IS_LOCAL(int p0);
	void _0x31A630A4(int p0);
	void _0x5C645F64(int p0);
	int NETWORK_DOES_NETWORK_ID_EXIST(int p0);
	int NETWORK_DOES_ENTITY_EXIST_WITH_NETWORK_ID(int p0);
	int NETWORK_REQUEST_CONTROL_OF_NETWORK_ID(int netID);
	int NETWORK_HAS_CONTROL_OF_NETWORK_ID(int entity);
	int NETWORK_REQUEST_CONTROL_OF_ENTITY(int entity);
	int NETWORK_REQUEST_CONTROL_OF_DOOR(int p0);
	int NETWORK_HAS_CONTROL_OF_ENTITY(int entity);
	int NETWORK_HAS_CONTROL_OF_PICKUP(int p0);
	int NETWORK_HAS_CONTROL_OF_DOOR(int p0);
	int VEH_TO_NET(int vehicle);
	int PED_TO_NET(int  ped);
	int OBJ_TO_NET(int object);
	int NET_TO_VEH(int p0);
	int NET_TO_PED(int p0);
	int NET_TO_OBJ(int p0);
	int NET_TO_ENT(int p0);
	void NETWORK_GET_LOCAL_HANDLE(int p0, int p1);
	void NETWORK_HANDLE_FROM_USER_ID(int p0, int p1, int p2);
	void NETWORK_HANDLE_FROM_MEMBER_ID(int p0, int p1, int p2);
	void NETWORK_HANDLE_FROM_PLAYER(int Handle, int* FreeMemPointer, int p2);
	void NETWORK_HANDLE_FROM_FRIEND(int p0, int p1, int p2);
	int NETWORK_GAMERTAG_FROM_HANDLE_START(int p0);
	int NETWORK_GAMERTAG_FROM_HANDLE_PENDING();
	int NETWORK_GAMERTAG_FROM_HANDLE_SUCCEEDED();
	int NETWORK_GET_GAMERTAG_FROM_HANDLE(int p0);
	int NETWORK_ARE_HANDLES_THE_SAME(int p0, int p1);
	int NETWORK_IS_HANDLE_VALID(int p0, int p1);
	int NETWORK_GET_PLAYER_FROM_GAMER_HANDLE(int p0);
	int NETWORK_MEMBER_ID_FROM_GAMER_HANDLE(int p0);
	int NETWORK_IS_GAMER_IN_MY_SESSION(int p0);
	void NETWORK_SHOW_PROFILE_UI(int p0);
	int NETWORK_GET_GAME_REGION();
	int NETWORK_PLAYER_GET_NAME(int p0);
	int _0x4EC0D983(int p0, int p1);
	int NETWORK_PLAYER_IS_ROCKSTAR_DEV(int player);
	int _0xD265B049(int p0);
	int NETWORK_IS_INACTIVE_PROFILE(int p0);
	int NETWORK_GET_MAX_FRIENDS();
	int NETWORK_GET_FRIEND_COUNT();
	int NETWORK_GET_FRIEND_NAME(int p0);
	int NETWORK_IS_FRIEND_ONLINE(int p0);
	int NETWORK_IS_FRIEND_IN_SAME_TITLE(int p0);
	int NETWORK_IS_FRIEND_IN_MULTIPLAYER(int p0);
	int NETWORK_IS_FRIEND(int p0);
	int NETWORK_IS_PENDING_FRIEND(int p0);
	int NETWORK_IS_ADDING_FRIEND();
	int NETWORK_ADD_FRIEND(int p0, int p1);
	int CLEAR_PLAYER_BAILED_FROM_PLAYERICLE(int p0);
	int GET_OBJ_ENTITY(int p0);
	int NETWORK_CAN_SET_WAYPOINT();
	int _0x5C0AB2A9(int p0);
	int _0x9A176B6E();
	int NETWORK_HAS_HEADSET();
	void _0x5C05B7E1(int p0);
	int VEHICLE_NET_ATTACH_CHAR_TO_CHAR_PHYSICALLY();
	int NETWORK_GAMER_HAS_HEADSET(int p0);
	int NETWORK_IS_GAMER_TALKING(int p0);
	int NETWORK_CAN_COMMUNICATE_WITH_GAMER(int p0);
	int NETWORK_IS_GAMER_MUTED_BY_ME(int p0);
	int _0x7685B333(int p0);
	int _0x3FDCC8D7(int p0);
	int _0xD19B312C(int p0);
	int NETWORK_IS_PLAYER_TALKING(int p0);
	int NETWORK_PLAYER_HAS_HEADSET(int p0);
	int NETWORK_IS_PLAYER_MUTED_BY_ME(int p0);
	int NETWORK_AM_I_MUTED_BY_PLAYER(int p0);
	int NETWORK_IS_PLAYER_BLOCKED_BY_ME(int p0);
	int NETWORK_AM_I_BLOCKED_BY_PLAYER(int p0);
	int NETWORK_GET_PLAYER_LOUDNESS(int p0);
	void NETWORK_SET_TALKER_PROXIMITY(int p0);
	int NETWORK_GET_TALKER_PROXIMITY();
	void NETWORK_SET_VOICE_ACTIVE(int p0);
	void _0x1A3EA6CD(int p0);
	void _0xCAB21090(int p0);
	void NETWORK_SET_TEAM_ONLY_CHAT(int p0);
	void _0xC8CC9E75(int p0, int p1);
	void NETWORK_SET_OVERRIDE_SPECTATOR_MODE(int p0);
	void _0xC9DDA85B(int p0);
	void _0xD33AFF79(int p0);
	void _0x4FFEFE43(int p0);
	void _0x74EE2D8B(int p0, int p1);
	void _0x2F98B405(int p0);
	void _0x95F1C60D(int p0, int p1);
	void _0x1BCD3DDF(int p0);
	void NETWORK_SET_VOICE_CHANNEL(int p0);
	void _0x9ECF722A();
	void IS_NETWORK_VEHICLE_BEEN_DAMAGED_BY_ANY_OBJECT(int p0, int p1, int p2);
	void _0x7F9B9052();
	void _0x7BBEA8CF(int p0);
	void _0xE797A4B6(int p0);
	void _0x92268BB5(int p0, int p1, int p2);
	void SHUTDOWN_AND_LAUNCH_SINGLE_PLAYER_GAME();
	void NETWORK_SET_FRIENDLY_FIRE_OPTION(int p0);
	void NETWORK_SET_RICH_PRESENCE(int p0, int p1, int p2, int p3);
	void _0x017E6777(int p0, int p1);
	int _0xE1F86C6A();
	void _0xBE6A30C3(int p0, int p1, int p2, int p3, int p4, int p5);
	void _0x22E03AD0(int p0, int p1);
	void _0xCEAE5AFC(int p0);
	int _0xF5F4BD95();
	int NETWORK_CLAN_PLAYER_IS_ACTIVE(int p0);
	int NETWORK_CLAN_PLAYER_GET_DESC(int p0, int p1, int p2);
	int _0x54E79E9C(int p0, int p1);
	void _0xF633805A(int p0, int p1, int p2);
	int _0x807B3450();
	int _0x3369DD1F(int p0, int p1);
	int NETWORK_CLAN_DOWNLOAD_MEMBERSHIP(int p0);
	int NETWORK_CLAN_DOWNLOAD_MEMBERSHIP_PENDING(int p0);
	int _0x83ED8E08();
	int _0x40202867(int p0);
	int NETWORK_CLAN_GET_MEMBERSHIP_COUNT(int p0);
	int NETWORK_CLAN_GET_MEMBERSHIP_VALID(int p0, int p1);
	int NETWORK_CLAN_GET_MEMBERSHIP(int p0, int p1, int p2);
	int NETWORK_CLAN_JOIN(int p0);
	int _0xBDA90BAC(int p0, int p1);
	int _0x8E952B12(int p0, int p1);
	int _0x966C90FD();
	int _0xBA672146(int p0, int p1);
	int _0x7963FA4D(int p0);
	int _0x88B13CDC(int p0, int p1);
	void _0xD6E3D5EA(int p0);
	int _0xE22445DA();
	void _0x455DDF5C();
	int _0x89DB0EC7(int p0, int p1);
	int _0xA4EF02F3();
	int _0x068A054E();
	int _0x9B8631EB(int p0, int p1);
	void SET_NETWORK_ID_CAN_MIGRATE(int p0, int p1);
	void SET_NETWORK_ID_EXISTS_ON_ALL_MACHINES(int NetID, int DoesExist);
	void _0x4D15FDB1(int p0, int p1, int p2);
	void NETWORK_SET_ENTITY_CAN_BLEND(int p0, int p1);
	void _0x09CBC4B0(int p0, int p1);
	void SET_NETWORK_ID_VISIBLE_IN_CUTSCENE(int p0, int p1, int p2);
	void _0x00AE4E17(int p0, int p1);
	int _0xEA5176C0(int p0);
	void SET_LOCAL_PLAYER_VISIBLE_IN_CUTSCENE(int p0, int p1);
	void SET_LOCAL_PLAYER_INVISIBLE_LOCALLY(int p0);
	void SET_LOCAL_PLAYER_VISIBLE_LOCALLY(int p0);
	void SET_PLAYER_INVISIBLE_LOCALLY(int p0, int p1);
	void SET_PLAYER_VISIBLE_LOCALLY(int p0, int p1);
	void FADE_OUT_LOCAL_PLAYER(int p0);
	void NETWORK_FADE_OUT_ENTITY(int p0, int p1, int p2);
	void NETWORK_FADE_IN_ENTITY(int p0, int p1);
	int IS_PLAYER_IN_CUTSCENE(int p0);
	void SET_ENTITY_VISIBLE_IN_CUTSCENE(int p0, int p1, int p2);
	void SET_ENTITY_LOCALLY_INVISIBLE(int p0);
	void SET_ENTITY_LOCALLY_VISIBLE(int p0);
	int IS_DAMAGE_TRACKER_ACTIVE_ON_NETWORK_ID(int p0);
	void ACTIVATE_DAMAGE_TRACKER_ON_NETWORK_ID(int p0, int p1);
	int IS_SPHERE_VISIBLE_TO_ANOTHER_MACHINE(int p0, int p1, int p2, int p3);
	int IS_SPHERE_VISIBLE_TO_PLAYER(int p0, int p1, int p2, int p3, int p4);
	void RESERVE_NETWORK_MISSION_OBJECTS(int p0);
	void RESERVE_NETWORK_MISSION_PEDS(int p0);
	void RESERVE_NETWORK_MISSION_VEHICLES(int p0);
	int CAN_REGISTER_MISSION_OBJECTS(int p0);
	int CAN_REGISTER_MISSION_PEDS(int p0);
	int CAN_REGISTER_MISSION_VEHICLES(int p0);
	int CAN_REGISTER_MISSION_ENTITIES(int p0, int p1, int p2, int p3);
	int GET_NUM_RESERVED_MISSION_OBJECTS(int p0);
	int GET_NUM_RESERVED_MISSION_PEDS(int p0);
	int GET_NUM_RESERVED_MISSION_VEHICLES(int p0);
	int _0x603FA104(int p0);
	int _0xD8FEC4F8(int p0);
	int _0x20527695(int p0);
	int _0x8687E285();
	int _0x744AC008();
	int _0xC3A12135();
	int _0x6A036061();
	int GET_NETWORK_TIME();
	int _0x98AA48E5();
	int _0x4538C4A2();
	int GET_TIME_OFFSET(int p0, int p1);
	int _0x50EF8FC6(int p0, int p1);
	int _0xBBB6DF61(int p0, int p1);
	int _0x8B4D1C06(int p0, int p1);
	int GET_TIME_DIFFERENCE(int p0, int p1);
	int _0x8218944E(int p0);
	int _0xF2FDF2E0();
	void _0xBB7CCE49(int p0, int p1);
	void NETWORK_SET_IN_SPECTATOR_MODE(int p0, int p1);
	void _0x54058F5F(int p0, int p1, int p2);
	void _0xA7E36020(int p0);
	void _0x64235620(int p0, int p1);
	int NETWORK_IS_IN_SPECTATOR_MODE();
	void NETWORK_SET_IN_MP_CUTSCENE(int p0, int p1, int p2);
	int NETWORK_IS_IN_MP_CUTSCENE();
	int NETWORK_IS_PLAYER_IN_MP_CUTSCENE(int p0);
	void SET_NETWORK_VEHICLE_RESPOT_TIMER(int p0, int p1);
	void _0xEA235081(int p0, int p1);
	void USE_PLAYER_COLOUR_INSTEAD_OF_TEAM_COLOUR(int p0);
	int NETWORK_CREATE_SYNCHRONISED_SCENE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void NETWORK_ADD_PED_TO_SYNCHRONISED_SCENE(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	void NETWORK_ADD_ENTITY_TO_SYNCHRONISED_SCENE(int p0, int p1, int p2, int p3, int p4, int p5, int p6);
	void _0xBFFE8B5C(int p0, int p1, int p2);
	void NETWORK_ATTACH_SYNCHRONISED_SCENE_TO_ENTITY(int p0, int p1, int p2);
	void NETWORK_START_SYNCHRONISED_SCENE(int p0);
	void NETWORK_STOP_SYNCHRONISED_SCENE(int p0);
	int _0x16AED87B(int p0);
	int _0x0679CE71(int p0, int p1);
	int _0xC62E77B3(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8);
	int _0x74D6B13C(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9, int p10, int p11);
	int _0x90700C7D(int p0);
	void _0x44BFB619();
	void NETWORK_GET_RESPAWN_RESULT(int p0, int p1, int p2);
	int _0x03287FD2(int p0);
	void _0x408A9436();
	void _0xFFB2ADA1(int p0, int p1);
	void NETWORK_END_TUTORIAL_SESSION();
	int NETWORK_IS_IN_TUTORIAL_SESSION();
	int _0x755A2B3E();
	int _0xA003C40B();
	int _0x5E1020CC(int p0);
	int _0xE66A0B40(int p0, int p1);
	void _0x72052DB3(int p0, int p1);
	int _0xB0313590(int p0);
	void NETWORK_OVERRIDE_CLOCK_TIME(int Hours, int Minutes, int Seconds);
	void _0xC4AEAF49();
	int _0x2465296D();
	int NETWORK_ADD_ENTITY_AREA(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0x4C2C2B12(int p0, int p1, int p2, int p3, int p4, int p5);
	int NETWORK_REMOVE_ENTITY_AREA(int p0);
	int _0x69956127(int p0);
	int _0xCB1CD6D3(int p0);
	int _0xC6D53AA0(int p0);
	void _0x155465EE(int p0, int p1);
	int _0x29532731();
	void _0xD760CAD5();
	int _0x231CFD12();
	int NETWORK_DOES_TUNABLE_EXIST(int p0, int p1);
	int _0xE4B3726A(int p0, int p1, int p2);
	int _0x41E8912A(int p0, int p1, int p2);
	int _0x8A04E1FE(int p0, int p1);
	int _0xA78571CA(int p0);
	int _0x053BB329();
	void NETWORK_RESET_BODY_TRACKER();
	int _0x17CBC608();
	int _0xBFAA349B(int p0);
	int _0xBEB7281A(int p0, int p1);
	int NETWORK_EXPLODE_VEHICLE(int p0, int p1, int p2, int p3);
	void _0xBC54371B(int p0);
	void _0x644141C5(int p0, int p1, int p2, int p3, int p4);
	void NETWORK_SET_PROPERTY_ID(int p0);
	void _0x38BC35C8();
	void _0x53C9563C(int p0);
	void _0x6B97075B(int p0);
	int _0x965EA007();
	int _0xEEFC8A55();
	void _0x866D1B67(int p0);
	int _0xED4A272F();
	int _0x4ACF110C(int p0);
	int _0x1AA3A0D5(int p0);
	int _0x37877757(int p0);
	int _0x1CF89DA5(int p0);
	int _0x16E53875(int p0, int p1);
	void _0x365C50EE(int p0, int p1);
	int _0x25E2DBA9();
	void SET_STORE_ENABLED(int p0);
	int _0x1FDC75DC(int p0);
	void _0xCA7A0A49();
	int _0x44A58B0A(int p0);
	int _0xD32FA11F();
	void _0xA7FA70AE();
	void _0xCC7DCE24();
	int _0x70F6D3AD();
	int _0x2B7B57B3(int p0);
	int _0xBAF52DD8(int p0);
	int _0x9B9AFFF1(int p0);
	void _0xC38E9DB0();
	int _0x32A4EB22();
	int _0x9262744C();
	int _0x08243B79(int p0, int p1);
	int _0x798D6C27();
	int _0xE69E8D0D();
	int _0x742075FE();
	int _0xCE569932();
	int _0x82146BE9();
	void _0x133FF2D5();
	int _0xCBA7242F(int p0, int p1, int p2, int p3, int p4, int p5);
	int _0xDED82A6E(int p0, int p1, int p2);
	int _0x40CF0783(int p0, int p1, int p2, int p3);
	int _0x4609D596(int p0, int p1, int p2, int p3);
	int _0x4C2C0D1F(int p0, int p1, int p2, int p3);
	int _0x9EFBD5D1(int p0, int p1, int p2, int p3);
	int _0xA6D8B798(int p0, int p1, int p2, int p3, int p4);
	int _0x67E74842(int p0, int p1, int p2, int p3, int p4);
	int SET_BALANCE_ADD_MACHINE(int p0, int p1);
	int SET_BALANCE_ADD_MACHINES(int p0, int p1, int p2);
	int _0x37F5BD93(int p0, int p1, int p2, int p3);
	int _0x1CFB3F51(int p0, int p1, int p2, int p3);
	int _0x87D1E6BD(int p0, int p1, int p2, int p3);
	void _0x021D5A94();
	int _0x4908A514();
	int _0x50296140();
	int _0x3970B0DA();
	int _0xC1487110();
	int _0xCC2356E3();
	int _0x2DE69817();
	int _0x81BD8D3B();
	int _0x8E1D8F78();
	void _0x0D35DD93();
	int _0x8F3137E6(int p0);
	int _0xB9137BA7(int p0);
	int _0x9FEEAA9C(int p0);
	int _0x5E8A7559(int p0);
	int _0x331AEABF(int p0);
	int _0x0E5E8E5C(int p0);
	int _0xA5A0C695(int p0);
	int _0x91534C6E(int p0);
	int _0x744A9EA5(int p0, int p1);
	void _0xA19A238D(int p0, int p1);
	int _0xFF7D44E6(int p0, int p1);
	int _0xA2C5BD9D(int p0);
	int _0xA850DDE1(int p0);
	int _0x8F6754AE(int p0);
	int _0x1E34953F(int p0, int p1);
	int _0x771FE190(int p0, int p1);
	int _0x3276D9D3(int p0, int p1);
	int _0x41A0FB02(int p0, int p1);
	int _0x11DC0F27(int p0);
	int _0x0DEB3F5A(int p0);
	int _0x84315226(int p0, int p1);
	int _0x38FC2EEB(int p0, int p1, int p2, int p3, int p4);
	int _0x1C4F9FDB(int p0);
	int _0xA69AE16C(int p0);
	int _0xF50BC67A(int p0);
	int _0xB3BBD241(int p0);
	int _0x70A2845C(int p0, int p1);
	int _0x346B506C(int p0);
	void _0x0095DB71();
	int _0xAD334B40(int p0, int p1, int p2);
	int _0x980D45D7(int p0, int p1, int p2);
	int _0x48CCC328(int p0, int p1, int p2);
	int _0x8E664EFD();
	int _0x611E0BE2();
	int _0xF0211AC1();
	int _0x1F0DD8AF();
	void _0x405ECA16();
	int _0x9567392B(int p0, int p1);
	int _0xF79FFF3C();
	int _0xA7F3F82B();
	int _0x410C61D1();
	int _0x0D4F845D(int p0);
	void _0xE13C1F7F();
	void _0x213C6D36(int p0);
	void _0x511E6F50(int p0);
	int _0xB4668B23(int p0);
	int _0x30B51753(int p0, int p1, int p2);
	int _0x02DAD93F();
	int _0x2D947814(int p0);
	int _0x37A28C26();
	int _0x11E8B5CD();
	int _0x429AEAB3();
	int TEXTURE_DOWNLOAD_REQUEST(int p0, int p1, int p2, int p3);
	int _0x1856D008(int p0, int p1, int p2);
	int _0x68C9AF69(int p0, int p1, int p2, int p3, int p4, int p5);
	void TEXTURE_DOWNLOAD_RELEASE(int p0);
	int _0xE4547765(int p0);
	int TEXTURE_DOWNLOAD_GET_NAME(int p0);
	int _0x03225BA3(int p0);
	int _0x4DEBC227();
	int _0x5C065D55();
	int _0x0CA1167F();
	int _0x424C6E27();
	int _0xD3BBE42F();
	int _0xBDBB5948();
	int _0x97287D68();
	int _0xC6EA802E();
	int _0xFD261E30(int p0);
	int _0x8570DD34(int p0, int p1, int p2);
	void _0x273C6180();
	void _0x371BBA08();
	void _0xA100CC97(int p0);
	void _0xBB2D33D3(int p0, int p1);
}

namespace NETWORKCASH
{
	int NETWORK_CHECK_RECEIVE_PLAYER_CASH(int p0, int p1, int p2, int p3, int p4);
	void NETWORK_GIVE_PLAYER_JOBSHARE_CASH(int p0, int p1);
	void NETWORK_RECEIVE_PLAYER_JOBSHARE_CASH(int p0, int p1);
	void NETWORK_EARN_FROM_BOUNTY(int p0, int p1, int p2, int p3);
	int _0x5AA379D9(int p0, int p1, int p2, int p3, int p4);
	void NETWORK_BUY_ITEM(int p0, int p1, int p2, int p3, int p4, int p5, int p6, int p7, int p8, int p9);
	void NETWORK_SPENT_BUY_WANTEDLEVEL(int p0, int p1, int p2, int p3);
	void NETWORK_SPENT_PAY_VEHICLE_INSURANCE_PREMIUM(int p0, int p1, int p2, int p3, int p4);
	void NETWORK_SPENT_CALL_PLAYER(int p0, int p1, int p2, int p3);
	void NETWORK_SPENT_BOUNTY(int p0, int p1, int p2);
	int _0xC5D8B1E9(int p0, int p1);
	int _0x6F1C592C();
	int _0x8B755993(int p0);
	int _0x8F266745(int p0);
	int _0x531E4892(int p0);
	int _0xB96C7ABE(int p0);
	void _0x66DA9935(int p0, int p1);
	void NETWORK_DELETE_CHARACTER(int p0, int p1, int p2);
	void _0x19F0C471(int p0);
	int _0xA27B9FE8();
	void _0x07C92F21(int p0, int p1, int p2, int p3);
	int _0x8474E6F0(int p0, int p1, int p2);
	int _0xE3802533(int p0);
	void NETWORK_EARN_FROM_PICKUP(int amount);
	void _0x33C20BC4(int p0);
	void _0x30B3EC0A(int p0);
	void _0xEAF04923(int p0);
	void NETWORK_EARN_FROM_BETTING(int p0, int p1);
	void NETWORK_EARN_FROM_JOB(int amount, int p1);
	void _0x5E81F55C(int p0, int p1);
	void _0x2BEFB6C4(int p0, int p1, int p2);
	void _0xF11FC458(int p0, int p1);
	void NETWORK_EARN_FROM_HOLDUPS(int p0);
	void NETWORK_EARN_FROM_PROPERTY(int p0, int p1);
	void _0x866004A8(int p0, int p1);
	void _0xCC068380(int p0);
	void NETWORK_EARN_FROM_ROCKSTAR(int p0);
	void NETWORK_EARN_FROM_VEHICLE(int p0, int p1);
	void _0x96B8BEE8(int p0, int p1);
	void NETWORK_SPENT_TAXI(int p0, int p1, int p2);
	void _0xBE70849B(int p0, int p1, int p2);
	void _0x451A2644(int p0, int p1, int p2);
	void _0x224A3488(int p0, int p1, int p2, int p3);
	void NETWORK_SPENT_BETTING(int p0, int p1, int p2, int p3, int p4);
	void _0x8957038E(int p0, int p1, int p2, int p3);
	void NETWORK_BUY_HEALTHCARE(int p0, int p1, int p2);
	void NETWORK_BUY_AIRSTRIKE(int p0, int p1, int p2);
	void _0x047547D4(int p0, int p1, int p2);
	void NETWORK_SPENT_AMMO_DROP(int p0, int p1, int p2);
	void NETWORK_BUY_BOUNTY(int p0, int p1, int p2, int p3);
	void NETWORK_BUY_PROPERTY(int p0, int p1, int p2, int p3);
	void NETWORK_SPENT_HELI_PICKUP(int p0, int p1, int p2);
	void NETWORK_SPENT_BOAT_PICKUP(int p0, int p1, int p2);
	void _0xDE7D398C(int p0, int p1, int p2);
	void NETWORK_SPENT_CASH_DROP(int p0, int p1, int p2);
	void _0xE792C4A5(int p0, int p1, int p2);
	void _0xE6AAA0D5(int p0, int p1, int p2);
	void _0x99CF02C4(int p0, int p1, int p2);
	void _0x20DDCF2F(int p0, int p1, int p2);
	void _0x2F7836E2(int p0, int p1, int p2);
	void NETWORK_SPENT_CARWASH(int p0, int p1, int p2, int p3, int p4);
	void NETWORK_SPENT_CINEMA(int p0, int p1, int p2, int p3);
	void NETWORK_SPENT_TELESCOPE(int p0, int p1, int p2);
	void NETWORK_SPENT_HOLDUPS(int p0, int p1, int p2);
	void _0x7E97C92C(int p0, int p1, int p2);
	void _0x78436D07(int p0, int p1, int p2);
	void _0x5AEE2FC1(int p0, int p1, int p2);
	void _0x54198922(int p0, int p1, int p2);
	void _0x3D96A21C(int p0, int p1, int p2, int p3);
	void _0x2E51C61C(int p0, int p1, int p2);
	void _0xD57A5125(int p0, int p1, int p2);
	void _0xD9622D64(int p0, int p1, int p2, int p3);
	int _0x16184FB5();
	int _0x4F5B781C(int p0);
	int _0xADF8F882();
	int NETWORK_CAN_RECEIVE_PLAYER_CASH(int p0, int p1, int p2, int p3);
}

namespace DLC1
{
	int _0x71D0CF3E(int p0);
	int _0x2E9D628C(int p0, int p1, int p2);
	void INIT_SHOP_PED_COMPONENT(int p0);
	void INIT_SHOP_PED_PROP(int p0);
	int _0xC937FF3D(int p0, int p1, int p2, int p3);
	int _0x594E862C(int p0, int p1, int p2, int p3, int p4, int p5);
	void GET_SHOP_PED_QUERY_COMPONENT(int p0, int p1);
	void GET_SHOP_PED_COMPONENT(int p0, int p1);
	void GET_SHOP_PED_QUERY_PROP(int p0, int p1);
	void GET_SHOP_PED_PROP(int p0, int p1);
	int _0xC8A4BF12(int p0, int p1, int p2, int p3);
	int _0x7D876DC0(int p0, int p1, int p2, int p3);
	int _0x159751B4(int p0);
	void _0xE4FF7103(int p0, int p1, int p2, int p3, int p4);
	int _0xCE70F183(int p0);
	int _0xC560D7C0(int p0);
	void GET_FORCED_COMPONENT(int p0, int p1, int p2, int p3, int p4);
	void GET_FORCED_PROP(int p0, int p1, int p2, int p3, int p4);
	int _0x8E2C7FD5(int p0, int p1, int p2);
	int _0x1ECD23E7(int p0, int p1);
	void GET_SHOP_PED_QUERY_OUTFIT(int p0, int p1);
	void _0xCAFE9209(int p0, int p1);
	int GET_SHOP_PED_OUTFIT_PROP(int p0, int p1);
	int _0x2798F56F(int p0);
	int GET_SHOP_PED_OUTFIT_COMPONENT(int p0, int p1);
	int _0x6641A864(int p0, int p1, int p2);
	int _0x818534AC(int p0, int p1, int p2);
	int GET_NUM_DLC_VEHICLES();
	int GET_DLC_VEHICLE_MODEL(int p0);
	int GET_DLC_VEHICLE_DATA(int p0, int p1);
	int GET_DLC_VEHICLE_FLAGS(int p0);
	int _0x2B757E6C();
	int GET_DLC_WEAPON_DATA(int p0, int p1);
	int _0x476B23A9(int p0);
	int GET_DLC_WEAPON_COMPONENT_DATA(int p0, int p1, int p2);
	int _0x06396058(int p0);
	int _0x35BCA844(int p0);
	int _0x59352658(int p0);
}

namespace DLC2
{
	int IS_DLC_PRESENT(int DlcHash);
	int _0x881B1FDB();
	int _0xC2169164();
	int _0xF79A97F5();
	int _0xF69B729C();
	int _0x517B601B();
	int _0x6087C10C(int p0, int p1);
}

namespace SYSTEM
{
	void WAIT(int ms);
	int START_NEW_SCRIPT(char* ScriptName, int StackSize);
	int START_NEW_SCRIPT_WITH_ARGS(char* ScriptName, int Args, int ArgCount, int StackSize);
	int _NULL_START_NEW_SCRIPT(int p0, int StackSize);
	int _NULL_START_NEW_SCRIPT_WITH_ARGS(int p0, int p1, int p2, int p3);
	int TIMERA();
	int TIMERB();
	void SETTIMERA(int TimerA);
	void SETTIMERB(int TimerB);
	float TIMESTEP();
	float SIN(float p0);
	float COS(float p0);
	float SQRT(float p0);
	float POW(float base, float exponent);
	float VMAG(float p0, float p1, float p2);
	float VMAG2(float p0, float p1, float p2);
	float VDIST(float X1, float Y1, float Z1, float X2, float Y2, float Z2);
	float VDIST2(float X1, float Y1, float Z1, float X2, float Y2, float Z2);
	int SHIFT_LEFT(int Value, int BitShift);
	int SHIFT_RIGHT(int Value, int BitShift);
	int FLOOR(float Value);
	int CEIL(float Value);
	int ROUND(float Value);
	float TO_FLOAT(int Value);
}

namespace DECORATOR
{
	int _0xBBAEEF94(int p0, int p1, int p2);
	int _0x8E101F5C(int p0, int p1, int p2);
	int _0xDB718B21(int p0, int p1, int p2);
	int _0xDBCE51E0(int p0, int p1);
	int _0xDDDE59B5(int p0, int p1);
	int _0x74EF9C40(int p0, int p1);
	int _0xE0E2640B(int p0, int p1);
	void _0x68BD42A9(int p0, int p1);
	int _0x7CF0971D(int p0, int p1);
	void _0x7F3F1C02();
}

namespace UNK_SC
{
	int _0x6BE5DF29();
	int _0x5ECF955D(int p0);
	int _0xD1ED1D48(int p0);
	int _0x19EE0CCB(int p0);
	int SC_INBOX_MESSAGE_GET_DATA_INT(int p0, int p1, int p2);
	int SC_INBOX_MESSAGE_GET_DATA_FLOAT(int p0, int p1, int p2);
	int SC_INBOX_MESSAGE_GET_DATA_STRING(int p0, int p1, int p2);
	int _0xEBE420A4(int p0);
	int _0x2C959AF9(int p0);
	void _0x0B9A3512(int p0);
	void _0x75324674(int p0);
	int SC_INBOX_MESSAGE_GET_UGCDATA(int p0, int p1);
	int _0x628F489B(int p0);
	int _0xAB3346B5(int p0, int p1);
	void _0x095D5EBD(int p0, int p1);
	int _0xDB75CDD1();
	int _0xC98160E1(int p0, int p1);
	void _0x2B240E0A(int p0, int p1);
	void _0x9A703A2B(int p0);
	void _0xD094F11A();
	void _0xAF3C081B(int p0);
	void _0x2FB9F53C(int p0);
	int _0x6C5738AB();
	int _0x468668F0();
	int _0x90C74343(int p0, int p1);
	int _0x3ACE6D6B(int p0, int p1);
	int _0x579B4510(int p0, int p1);
	int _0xDF45B2A7(int p0);
	int _0xDF084A6B(int p0, int p1);
	int _0xFFED3676(int p0);
	int _0xA796D7A7(int p0);
	int _0x09497F31(int p0);
	int _0x4D8A6521(int p0);
	int _0x7AA36406(int p0, int p1);
	int _0xF379DCE4(int p0);
	int _0x65D84665(int p0);
	int _0xD268255C(int p0);
	int _0xC96456BA();
	int _0x8E7AEEB7(int p0);
	int _0xE778B2A7(int p0, int p1, int p2);
	int _0xCE7D50A8(int p0, int p1, int p2);
	int _0xD26CCA46(int p0, int p1);
	int _0xA3EFE4A1(int p0);
	int _0x24D84334(int p0);
	int _0x8A023024(int p0, int p1);
	int _0x1C65B038();
	int _0x4D4C37B3();
	int _0xAED95A6F(int p0, int p1);
	void _0x486867E6();
}

namespace UNK
{
	int _RETURN_ZERO();
	int _RETURN_ZERO2();
	void _0xC0B971EA(int b);
	int _0x94BCAC7C();
	void _0x7D90EEE5(int p0);
	int _0x734CFEDA();
	void _0x8C227332(int p0);
	void _0x5C350D78(int p0);
}

#endif // !NATIVES_H